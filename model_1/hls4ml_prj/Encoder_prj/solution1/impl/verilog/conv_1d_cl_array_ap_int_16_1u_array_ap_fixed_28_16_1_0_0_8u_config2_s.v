// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_1d_cl_array_ap_int_16_1u_array_ap_fixed_28_16_1_0_0_8u_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_V_dout,
        data_V_data_V_empty_n,
        data_V_data_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write,
        res_V_data_5_V_din,
        res_V_data_5_V_full_n,
        res_V_data_5_V_write,
        res_V_data_6_V_din,
        res_V_data_6_V_full_n,
        res_V_data_6_V_write,
        res_V_data_7_V_din,
        res_V_data_7_V_full_n,
        res_V_data_7_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_data_V_dout;
input   data_V_data_V_empty_n;
output   data_V_data_V_read;
output  [27:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [27:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [27:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [27:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [27:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;
output  [27:0] res_V_data_5_V_din;
input   res_V_data_5_V_full_n;
output   res_V_data_5_V_write;
output  [27:0] res_V_data_6_V_din;
input   res_V_data_6_V_full_n;
output   res_V_data_6_V_write;
output  [27:0] res_V_data_7_V_din;
input   res_V_data_7_V_full_n;
output   res_V_data_7_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;
reg res_V_data_4_V_write;
reg res_V_data_5_V_write;
reg res_V_data_6_V_write;
reg res_V_data_7_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [15:0] kernel_data_V_3_1;
reg   [15:0] kernel_data_V_3_2;
reg   [31:0] sX;
reg   [31:0] pX;
reg    data_V_data_V_blk_n;
wire    ap_CS_fsm_state3;
reg    res_V_data_0_V_blk_n;
reg   [0:0] and_ln360_reg_8671;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg    res_V_data_4_V_blk_n;
reg    res_V_data_5_V_blk_n;
reg    res_V_data_6_V_blk_n;
reg    res_V_data_7_V_blk_n;
wire   [6:0] i_iw_fu_3450_p2;
reg   [6:0] i_iw_reg_8642;
wire    ap_CS_fsm_state2;
reg  signed [15:0] kernel_data_V_3_1_load_reg_8647;
wire   [0:0] icmp_ln64_fu_3444_p2;
reg   [31:0] sX_load_reg_8655;
wire   [0:0] icmp_ln360_fu_3474_p2;
reg   [0:0] icmp_ln360_reg_8660;
reg   [31:0] pX_load_reg_8665;
wire   [0:0] and_ln360_fu_3500_p2;
wire  signed [27:0] select_ln340_4087_fu_4208_p3;
reg  signed [27:0] select_ln340_4087_reg_8675;
wire  signed [27:0] select_ln340_4088_fu_4324_p3;
reg  signed [27:0] select_ln340_4088_reg_8681;
wire  signed [27:0] sext_ln1116_25_fu_4332_p1;
reg  signed [27:0] sext_ln1116_25_reg_8687;
wire  signed [26:0] sext_ln1118_522_fu_4345_p1;
reg  signed [26:0] sext_ln1118_522_reg_8693;
wire  signed [25:0] sext_ln1118_523_fu_4350_p1;
reg  signed [25:0] sext_ln1118_523_reg_8699;
wire  signed [27:0] select_ln340_4114_fu_5426_p3;
reg  signed [27:0] select_ln340_4114_reg_8705;
wire  signed [27:0] select_ln340_4115_fu_5516_p3;
reg  signed [27:0] select_ln340_4115_reg_8711;
wire  signed [27:0] select_ln340_4116_fu_5606_p3;
reg  signed [27:0] select_ln340_4116_reg_8717;
wire  signed [27:0] select_ln340_4117_fu_5696_p3;
reg  signed [27:0] select_ln340_4117_reg_8723;
wire  signed [27:0] select_ln340_4118_fu_5786_p3;
reg  signed [27:0] select_ln340_4118_reg_8729;
reg   [6:0] i_iw_0_i_reg_406;
reg    ap_block_state1;
wire    io_acc_block_signal_op870;
reg    ap_block_state3;
wire   [31:0] select_ln391_fu_8619_p3;
reg   [31:0] ap_phi_mux_storemerge_i_i_phi_fu_420_p4;
wire   [0:0] icmp_ln384_fu_8598_p2;
wire   [31:0] add_ln389_fu_8603_p2;
reg  signed [13:0] grp_fu_427_p0;
reg  signed [15:0] grp_fu_427_p1;
wire  signed [25:0] sext_ln1118_510_fu_3524_p1;
wire  signed [27:0] sext_ln1116_26_fu_6316_p1;
reg  signed [11:0] grp_fu_428_p0;
reg  signed [15:0] grp_fu_428_p1;
reg  signed [12:0] grp_fu_429_p0;
reg  signed [15:0] grp_fu_429_p1;
wire  signed [27:0] sext_ln1116_fu_3506_p1;
reg   [11:0] grp_fu_430_p0;
reg  signed [15:0] grp_fu_430_p1;
reg  signed [10:0] grp_fu_431_p0;
reg  signed [15:0] grp_fu_431_p1;
wire  signed [25:0] sext_ln1118_530_fu_6326_p1;
reg   [8:0] grp_fu_432_p0;
reg  signed [15:0] grp_fu_432_p1;
wire  signed [24:0] sext_ln1118_521_fu_4338_p1;
wire  signed [24:0] sext_ln1118_531_fu_6332_p1;
reg   [11:0] grp_fu_433_p0;
reg  signed [15:0] grp_fu_433_p1;
wire  signed [26:0] sext_ln1118_fu_3514_p1;
wire  signed [15:0] mul_ln731_2_fu_434_p1;
wire  signed [15:0] mul_ln731_7_fu_435_p1;
wire  signed [15:0] mul_ln1118_879_fu_436_p1;
wire  signed [15:0] mul_ln1118_875_fu_437_p1;
reg  signed [9:0] grp_fu_438_p0;
reg  signed [15:0] grp_fu_438_p1;
reg   [9:0] grp_fu_439_p0;
reg  signed [15:0] grp_fu_439_p1;
reg   [11:0] grp_fu_440_p0;
reg  signed [15:0] grp_fu_440_p1;
reg  signed [13:0] grp_fu_441_p0;
reg  signed [15:0] grp_fu_441_p1;
reg  signed [9:0] grp_fu_442_p0;
reg  signed [15:0] grp_fu_442_p1;
reg  signed [12:0] grp_fu_443_p0;
reg  signed [15:0] grp_fu_443_p1;
wire  signed [15:0] mul_ln731_8_fu_444_p1;
reg   [10:0] grp_fu_445_p0;
reg  signed [15:0] grp_fu_445_p1;
wire  signed [26:0] sext_ln1118_532_fu_6338_p1;
reg   [10:0] grp_fu_446_p0;
reg  signed [15:0] grp_fu_446_p1;
reg  signed [11:0] grp_fu_447_p0;
reg  signed [15:0] grp_fu_447_p1;
wire  signed [15:0] mul_ln731_6_fu_448_p1;
reg  signed [12:0] grp_fu_449_p0;
reg  signed [15:0] grp_fu_449_p1;
reg  signed [10:0] grp_fu_450_p0;
reg  signed [15:0] grp_fu_450_p1;
wire  signed [24:0] sext_ln1118_511_fu_3531_p1;
wire  signed [25:0] grp_fu_442_p2;
wire  signed [24:0] grp_fu_432_p2;
wire   [30:0] tmp_7182_fu_3484_p4;
wire   [0:0] icmp_ln360_1_fu_3494_p2;
wire  signed [15:0] sext_ln1116_fu_3506_p0;
wire  signed [15:0] sext_ln1118_fu_3514_p0;
wire  signed [15:0] sext_ln1118_510_fu_3524_p0;
wire  signed [15:0] sext_ln1118_511_fu_3531_p0;
wire  signed [24:0] sext_ln1118_512_fu_3536_p0;
wire  signed [26:0] grp_fu_450_p2;
wire  signed [24:0] tmp_7183_fu_3540_p1;
wire  signed [25:0] sext_ln731_fu_3548_p0;
wire  signed [27:0] grp_fu_427_p2;
wire  signed [25:0] or_ln785_fu_3552_p0;
wire  signed [25:0] sext_ln1118_512_fu_3536_p1;
wire   [25:0] or_ln785_fu_3552_p2;
wire   [0:0] tmp_7183_fu_3540_p3;
wire   [0:0] tmp_7184_fu_3558_p3;
wire   [0:0] xor_ln785_fu_3566_p2;
wire  signed [25:0] and_ln786_fu_3578_p0;
wire   [25:0] and_ln786_fu_3578_p2;
wire   [0:0] tmp_7185_fu_3584_p3;
wire   [0:0] xor_ln786_2064_fu_3592_p2;
wire   [0:0] and_ln786_3058_fu_3598_p2;
wire   [0:0] and_ln785_fu_3572_p2;
wire   [0:0] xor_ln340_2072_fu_3610_p2;
wire   [0:0] or_ln340_4146_fu_3616_p2;
wire   [0:0] or_ln340_fu_3604_p2;
wire  signed [27:0] sext_ln731_fu_3548_p1;
wire   [0:0] or_ln340_4075_fu_3622_p2;
wire   [27:0] select_ln340_fu_3628_p3;
wire   [27:0] select_ln388_fu_3636_p3;
wire  signed [26:0] sext_ln1118_513_fu_3652_p0;
wire  signed [27:0] grp_fu_449_p2;
wire  signed [26:0] tmp_7186_fu_3656_p1;
wire   [27:0] grp_fu_430_p2;
wire  signed [27:0] sext_ln1118_513_fu_3652_p1;
wire   [27:0] or_ln785_1017_fu_3664_p2;
wire   [0:0] tmp_7186_fu_3656_p3;
wire   [0:0] tmp_7187_fu_3670_p3;
wire   [0:0] xor_ln785_1017_fu_3678_p2;
wire   [27:0] and_ln786_3059_fu_3690_p2;
wire   [0:0] tmp_7188_fu_3696_p3;
wire   [0:0] xor_ln786_2065_fu_3704_p2;
wire   [0:0] and_ln786_3060_fu_3710_p2;
wire   [0:0] and_ln785_1017_fu_3684_p2;
wire   [0:0] xor_ln340_fu_3722_p2;
wire   [0:0] or_ln340_4147_fu_3728_p2;
wire   [0:0] or_ln340_4076_fu_3716_p2;
wire   [0:0] or_ln340_4077_fu_3734_p2;
wire   [27:0] select_ln340_2048_fu_3740_p3;
wire   [27:0] select_ln388_2041_fu_3748_p3;
wire  signed [25:0] grp_fu_438_p2;
wire  signed [26:0] mul_ln731_2_fu_434_p2;
wire  signed [26:0] sext_ln1118_514_fu_3764_p1;
wire   [26:0] or_ln785_1018_fu_3780_p2;
wire   [0:0] tmp_7189_fu_3768_p3;
wire   [0:0] tmp_7190_fu_3786_p3;
wire   [0:0] xor_ln785_1018_fu_3794_p2;
wire   [26:0] and_ln786_3061_fu_3806_p2;
wire   [0:0] tmp_7191_fu_3812_p3;
wire   [0:0] xor_ln786_2066_fu_3820_p2;
wire   [0:0] and_ln786_3062_fu_3826_p2;
wire   [0:0] and_ln785_1018_fu_3800_p2;
wire   [0:0] xor_ln340_2073_fu_3838_p2;
wire   [0:0] or_ln340_4148_fu_3844_p2;
wire   [0:0] or_ln340_4078_fu_3832_p2;
wire  signed [27:0] sext_ln731_1_fu_3776_p1;
wire   [0:0] or_ln340_4079_fu_3850_p2;
wire   [27:0] select_ln340_2049_fu_3856_p3;
wire   [27:0] select_ln388_2042_fu_3864_p3;
wire  signed [26:0] sext_ln1118_515_fu_3880_p0;
wire  signed [27:0] grp_fu_441_p2;
wire  signed [26:0] tmp_7192_fu_3884_p1;
wire   [27:0] grp_fu_443_p2;
wire  signed [27:0] sext_ln1118_515_fu_3880_p1;
wire   [27:0] or_ln785_1019_fu_3892_p2;
wire   [0:0] tmp_7192_fu_3884_p3;
wire   [0:0] tmp_7193_fu_3898_p3;
wire   [0:0] xor_ln785_1019_fu_3906_p2;
wire   [27:0] and_ln786_3063_fu_3918_p2;
wire   [0:0] tmp_7194_fu_3924_p3;
wire   [0:0] xor_ln786_2067_fu_3932_p2;
wire   [0:0] and_ln786_3064_fu_3938_p2;
wire   [0:0] and_ln785_1019_fu_3912_p2;
wire   [0:0] xor_ln340_2074_fu_3950_p2;
wire   [0:0] or_ln340_4149_fu_3956_p2;
wire   [0:0] or_ln340_4080_fu_3944_p2;
wire   [0:0] or_ln340_4081_fu_3962_p2;
wire   [27:0] select_ln340_2050_fu_3968_p3;
wire   [27:0] select_ln388_2043_fu_3976_p3;
wire  signed [26:0] sext_ln1118_516_fu_3992_p0;
wire  signed [27:0] grp_fu_433_p2;
wire  signed [26:0] tmp_7195_fu_3996_p1;
wire   [27:0] grp_fu_440_p2;
wire  signed [27:0] sext_ln1118_516_fu_3992_p1;
wire   [27:0] or_ln785_1020_fu_4004_p2;
wire   [0:0] tmp_7195_fu_3996_p3;
wire   [0:0] tmp_7196_fu_4010_p3;
wire   [0:0] xor_ln785_1020_fu_4018_p2;
wire   [27:0] and_ln786_3065_fu_4030_p2;
wire   [0:0] tmp_7197_fu_4036_p3;
wire   [0:0] xor_ln786_2068_fu_4044_p2;
wire   [0:0] and_ln786_3066_fu_4050_p2;
wire   [0:0] and_ln785_1020_fu_4024_p2;
wire   [0:0] xor_ln340_2075_fu_4062_p2;
wire   [0:0] or_ln340_4150_fu_4068_p2;
wire   [0:0] or_ln340_4082_fu_4056_p2;
wire   [0:0] or_ln340_4083_fu_4074_p2;
wire   [27:0] select_ln340_2051_fu_4080_p3;
wire   [27:0] select_ln388_2044_fu_4088_p3;
wire  signed [26:0] grp_fu_447_p2;
wire   [27:0] grp_fu_429_p2;
wire  signed [27:0] sext_ln1118_517_fu_4104_p1;
wire   [27:0] or_ln785_1021_fu_4116_p2;
wire   [0:0] tmp_7198_fu_4108_p3;
wire   [0:0] tmp_7199_fu_4122_p3;
wire   [0:0] xor_ln785_1021_fu_4130_p2;
wire   [27:0] and_ln786_3067_fu_4142_p2;
wire   [0:0] tmp_7200_fu_4148_p3;
wire   [0:0] xor_ln786_2069_fu_4156_p2;
wire   [0:0] and_ln786_3068_fu_4162_p2;
wire   [0:0] and_ln785_1021_fu_4136_p2;
wire   [0:0] xor_ln340_2076_fu_4174_p2;
wire   [0:0] or_ln340_4151_fu_4180_p2;
wire   [0:0] or_ln340_4084_fu_4168_p2;
wire   [0:0] or_ln340_4085_fu_4186_p2;
wire   [27:0] select_ln340_2052_fu_4192_p3;
wire   [27:0] select_ln388_2045_fu_4200_p3;
wire  signed [25:0] mul_ln1118_875_fu_437_p2;
wire  signed [26:0] mul_ln731_6_fu_448_p2;
wire  signed [26:0] sext_ln1118_518_fu_4216_p1;
wire   [26:0] or_ln785_1022_fu_4232_p2;
wire   [0:0] tmp_7201_fu_4220_p3;
wire   [0:0] tmp_7202_fu_4238_p3;
wire   [0:0] xor_ln785_1022_fu_4246_p2;
wire   [26:0] and_ln786_3069_fu_4258_p2;
wire   [0:0] tmp_7203_fu_4264_p3;
wire   [0:0] xor_ln786_2070_fu_4272_p2;
wire   [0:0] and_ln786_3070_fu_4278_p2;
wire   [0:0] and_ln785_1022_fu_4252_p2;
wire   [0:0] xor_ln340_2077_fu_4290_p2;
wire   [0:0] or_ln340_4152_fu_4296_p2;
wire   [0:0] or_ln340_4086_fu_4284_p2;
wire  signed [27:0] sext_ln731_2_fu_4228_p1;
wire   [0:0] or_ln340_4087_fu_4302_p2;
wire   [27:0] select_ln340_2053_fu_4308_p3;
wire   [27:0] select_ln388_2046_fu_4316_p3;
wire  signed [15:0] sext_ln1116_25_fu_4332_p0;
wire  signed [15:0] sext_ln1118_521_fu_4338_p0;
wire  signed [15:0] sext_ln1118_522_fu_4345_p0;
wire  signed [15:0] sext_ln1118_523_fu_4350_p0;
wire  signed [26:0] mul_ln731_7_fu_435_p2;
wire  signed [26:0] sext_ln1118_524_fu_4358_p1;
wire   [26:0] or_ln785_1024_fu_4366_p2;
wire   [0:0] grp_fu_3428_p3;
wire   [0:0] tmp_7208_fu_4372_p3;
wire   [0:0] xor_ln785_1024_fu_4380_p2;
wire   [26:0] and_ln786_3073_fu_4392_p2;
wire   [0:0] tmp_7209_fu_4398_p3;
wire   [0:0] xor_ln786_2072_fu_4406_p2;
wire   [0:0] and_ln786_3074_fu_4412_p2;
wire   [0:0] and_ln785_1024_fu_4386_p2;
wire   [0:0] xor_ln340_2079_fu_4424_p2;
wire   [0:0] or_ln340_4154_fu_4430_p2;
wire   [0:0] or_ln340_4090_fu_4418_p2;
wire  signed [27:0] sext_ln731_6_fu_4362_p1;
wire   [0:0] or_ln340_4091_fu_4436_p2;
wire   [27:0] select_ln340_2055_fu_4442_p3;
wire   [27:0] select_ln388_2048_fu_4450_p3;
wire   [27:0] grp_fu_428_p2;
wire   [27:0] mul_ln731_8_fu_444_p2;
wire   [27:0] or_ln785_1025_fu_4474_p2;
wire   [0:0] tmp_7210_fu_4466_p3;
wire   [0:0] tmp_7211_fu_4480_p3;
wire   [0:0] xor_ln785_1025_fu_4488_p2;
wire   [27:0] and_ln786_3075_fu_4500_p2;
wire   [0:0] tmp_7212_fu_4506_p3;
wire   [0:0] xor_ln786_2073_fu_4514_p2;
wire   [0:0] and_ln786_3076_fu_4520_p2;
wire   [0:0] and_ln785_1025_fu_4494_p2;
wire   [0:0] xor_ln340_2080_fu_4532_p2;
wire   [0:0] or_ln340_4155_fu_4538_p2;
wire   [0:0] or_ln340_4092_fu_4526_p2;
wire   [0:0] or_ln340_4093_fu_4544_p2;
wire   [27:0] select_ln340_2056_fu_4550_p3;
wire   [27:0] select_ln388_2049_fu_4558_p3;
wire  signed [24:0] sext_ln1118_525_fu_4574_p0;
wire  signed [26:0] grp_fu_445_p2;
wire  signed [24:0] tmp_7213_fu_4578_p1;
wire  signed [25:0] grp_fu_439_p2;
wire  signed [25:0] sext_ln1118_525_fu_4574_p1;
wire   [25:0] or_ln785_1026_fu_4590_p2;
wire   [0:0] tmp_7213_fu_4578_p3;
wire   [0:0] tmp_7214_fu_4596_p3;
wire   [0:0] xor_ln785_1026_fu_4604_p2;
wire   [25:0] and_ln786_3077_fu_4616_p2;
wire   [0:0] tmp_7215_fu_4622_p3;
wire   [0:0] xor_ln786_2074_fu_4630_p2;
wire   [0:0] and_ln786_3078_fu_4636_p2;
wire   [0:0] and_ln785_1026_fu_4610_p2;
wire   [0:0] xor_ln340_2081_fu_4648_p2;
wire   [0:0] or_ln340_4156_fu_4654_p2;
wire   [0:0] or_ln340_4094_fu_4642_p2;
wire  signed [27:0] sext_ln731_7_fu_4586_p1;
wire   [0:0] or_ln340_4095_fu_4660_p2;
wire   [27:0] select_ln340_2057_fu_4666_p3;
wire   [27:0] select_ln388_2050_fu_4674_p3;
wire  signed [24:0] mul_ln1118_879_fu_436_p2;
wire  signed [25:0] grp_fu_431_p2;
wire  signed [25:0] sext_ln1118_526_fu_4690_p1;
wire   [25:0] or_ln785_1027_fu_4706_p2;
wire   [0:0] tmp_7216_fu_4694_p3;
wire   [0:0] tmp_7217_fu_4712_p3;
wire   [0:0] xor_ln785_1027_fu_4720_p2;
wire   [25:0] and_ln786_3079_fu_4732_p2;
wire   [0:0] tmp_7218_fu_4738_p3;
wire   [0:0] xor_ln786_2075_fu_4746_p2;
wire   [0:0] and_ln786_3080_fu_4752_p2;
wire   [0:0] and_ln785_1027_fu_4726_p2;
wire   [0:0] xor_ln340_2082_fu_4764_p2;
wire   [0:0] or_ln340_4157_fu_4770_p2;
wire   [0:0] or_ln340_4096_fu_4758_p2;
wire  signed [27:0] sext_ln731_8_fu_4702_p1;
wire   [0:0] or_ln340_4097_fu_4776_p2;
wire   [27:0] select_ln340_2058_fu_4782_p3;
wire   [27:0] select_ln388_2051_fu_4790_p3;
wire  signed [25:0] sext_ln731_9_fu_4810_p0;
wire  signed [26:0] grp_fu_446_p2;
wire  signed [25:0] or_ln785_1028_fu_4814_p0;
wire  signed [25:0] sext_ln1118_527_fu_4806_p1;
wire   [25:0] or_ln785_1028_fu_4814_p2;
wire   [0:0] grp_fu_3436_p3;
wire   [0:0] tmp_7220_fu_4820_p3;
wire   [0:0] xor_ln785_1028_fu_4828_p2;
wire  signed [25:0] and_ln786_3081_fu_4840_p0;
wire   [25:0] and_ln786_3081_fu_4840_p2;
wire   [0:0] tmp_7221_fu_4846_p3;
wire   [0:0] xor_ln786_2076_fu_4854_p2;
wire   [0:0] and_ln786_3082_fu_4860_p2;
wire   [0:0] and_ln785_1028_fu_4834_p2;
wire   [0:0] xor_ln340_2083_fu_4872_p2;
wire   [0:0] or_ln340_4158_fu_4878_p2;
wire   [0:0] or_ln340_4098_fu_4866_p2;
wire  signed [27:0] sext_ln731_9_fu_4810_p1;
wire   [0:0] or_ln340_4099_fu_4884_p2;
wire   [27:0] select_ln340_2059_fu_4890_p3;
wire   [27:0] select_ln388_2052_fu_4898_p3;
wire  signed [27:0] select_ln340_4082_fu_3644_p3;
wire  signed [28:0] sext_ln703_fu_4914_p1;
wire   [28:0] add_ln1192_fu_4918_p2;
wire   [27:0] acc_0_V_fu_4932_p2;
wire   [0:0] tmp_7256_fu_4938_p3;
wire   [0:0] tmp_7255_fu_4924_p3;
wire   [0:0] xor_ln786_fu_4946_p2;
wire   [0:0] xor_ln340_1047_fu_4964_p2;
wire   [0:0] xor_ln340_2048_fu_4958_p2;
wire   [0:0] and_ln786_3105_fu_4952_p2;
wire   [0:0] or_ln340_4122_fu_4970_p2;
wire   [27:0] select_ln340_2071_fu_4976_p3;
wire   [27:0] acc_0_V_1_fu_4984_p3;
wire  signed [27:0] select_ln340_4083_fu_3756_p3;
wire  signed [28:0] sext_ln703_2025_fu_5000_p1;
wire   [28:0] add_ln1192_1024_fu_5004_p2;
wire   [27:0] acc_1_V_fu_5018_p2;
wire   [0:0] tmp_7258_fu_5024_p3;
wire   [0:0] tmp_7257_fu_5010_p3;
wire   [0:0] xor_ln786_2041_fu_5032_p2;
wire   [0:0] xor_ln340_1048_fu_5050_p2;
wire   [0:0] xor_ln340_2049_fu_5044_p2;
wire   [0:0] and_ln786_3106_fu_5038_p2;
wire   [0:0] or_ln340_4123_fu_5056_p2;
wire   [27:0] select_ln340_2072_fu_5062_p3;
wire   [27:0] acc_1_V_1_fu_5070_p3;
wire  signed [27:0] select_ln340_4084_fu_3872_p3;
wire  signed [28:0] sext_ln703_2026_fu_5086_p1;
wire   [28:0] add_ln1192_1025_fu_5090_p2;
wire   [27:0] acc_2_V_fu_5104_p2;
wire   [0:0] tmp_7260_fu_5110_p3;
wire   [0:0] tmp_7259_fu_5096_p3;
wire   [0:0] xor_ln786_2042_fu_5118_p2;
wire   [0:0] xor_ln340_1049_fu_5136_p2;
wire   [0:0] xor_ln340_2050_fu_5130_p2;
wire   [0:0] and_ln786_3107_fu_5124_p2;
wire   [0:0] or_ln340_4124_fu_5142_p2;
wire   [27:0] select_ln340_2073_fu_5148_p3;
wire   [27:0] acc_2_V_1_fu_5156_p3;
wire  signed [27:0] select_ln340_4085_fu_3984_p3;
wire  signed [28:0] sext_ln703_2027_fu_5172_p1;
wire   [28:0] add_ln1192_1026_fu_5176_p2;
wire   [27:0] acc_3_V_fu_5190_p2;
wire   [0:0] tmp_7262_fu_5196_p3;
wire   [0:0] tmp_7261_fu_5182_p3;
wire   [0:0] xor_ln786_2043_fu_5204_p2;
wire   [0:0] xor_ln340_1050_fu_5222_p2;
wire   [0:0] xor_ln340_2051_fu_5216_p2;
wire   [0:0] and_ln786_3108_fu_5210_p2;
wire   [0:0] or_ln340_4125_fu_5228_p2;
wire   [27:0] select_ln340_2074_fu_5234_p3;
wire   [27:0] acc_3_V_1_fu_5242_p3;
wire  signed [27:0] select_ln340_4086_fu_4096_p3;
wire  signed [28:0] sext_ln703_2028_fu_5258_p1;
wire   [28:0] add_ln1192_1027_fu_5262_p2;
wire   [27:0] acc_4_V_fu_5276_p2;
wire   [0:0] tmp_7264_fu_5282_p3;
wire   [0:0] tmp_7263_fu_5268_p3;
wire   [0:0] xor_ln786_2044_fu_5290_p2;
wire   [0:0] xor_ln340_1051_fu_5308_p2;
wire   [0:0] xor_ln340_2052_fu_5302_p2;
wire   [0:0] and_ln786_3109_fu_5296_p2;
wire   [0:0] or_ln340_4126_fu_5314_p2;
wire   [27:0] select_ln340_2075_fu_5320_p3;
wire   [27:0] acc_4_V_1_fu_5328_p3;
wire  signed [27:0] select_ln340_4106_fu_4992_p3;
wire  signed [27:0] select_ln340_4090_fu_4458_p3;
wire  signed [28:0] sext_ln703_2033_fu_5348_p1;
wire  signed [28:0] sext_ln703_2032_fu_5344_p1;
wire   [28:0] add_ln1192_1031_fu_5352_p2;
wire   [27:0] acc_0_V_2_fu_5366_p2;
wire   [0:0] tmp_7272_fu_5372_p3;
wire   [0:0] tmp_7271_fu_5358_p3;
wire   [0:0] xor_ln786_2048_fu_5380_p2;
wire   [0:0] xor_ln340_1055_fu_5398_p2;
wire   [0:0] xor_ln340_2056_fu_5392_p2;
wire   [0:0] and_ln786_3113_fu_5386_p2;
wire   [0:0] or_ln340_4130_fu_5404_p2;
wire   [27:0] select_ln340_2079_fu_5410_p3;
wire   [27:0] acc_0_V_3_fu_5418_p3;
wire  signed [27:0] select_ln340_4107_fu_5078_p3;
wire  signed [27:0] select_ln340_4091_fu_4566_p3;
wire  signed [28:0] sext_ln703_2035_fu_5438_p1;
wire  signed [28:0] sext_ln703_2034_fu_5434_p1;
wire   [28:0] add_ln1192_1032_fu_5442_p2;
wire   [27:0] acc_1_V_2_fu_5456_p2;
wire   [0:0] tmp_7274_fu_5462_p3;
wire   [0:0] tmp_7273_fu_5448_p3;
wire   [0:0] xor_ln786_2049_fu_5470_p2;
wire   [0:0] xor_ln340_1056_fu_5488_p2;
wire   [0:0] xor_ln340_2057_fu_5482_p2;
wire   [0:0] and_ln786_3114_fu_5476_p2;
wire   [0:0] or_ln340_4131_fu_5494_p2;
wire   [27:0] select_ln340_2080_fu_5500_p3;
wire   [27:0] acc_1_V_3_fu_5508_p3;
wire  signed [27:0] select_ln340_4108_fu_5164_p3;
wire  signed [27:0] select_ln340_4092_fu_4682_p3;
wire  signed [28:0] sext_ln703_2037_fu_5528_p1;
wire  signed [28:0] sext_ln703_2036_fu_5524_p1;
wire   [28:0] add_ln1192_1033_fu_5532_p2;
wire   [27:0] acc_2_V_2_fu_5546_p2;
wire   [0:0] tmp_7276_fu_5552_p3;
wire   [0:0] tmp_7275_fu_5538_p3;
wire   [0:0] xor_ln786_2050_fu_5560_p2;
wire   [0:0] xor_ln340_1057_fu_5578_p2;
wire   [0:0] xor_ln340_2058_fu_5572_p2;
wire   [0:0] and_ln786_3115_fu_5566_p2;
wire   [0:0] or_ln340_4132_fu_5584_p2;
wire   [27:0] select_ln340_2081_fu_5590_p3;
wire   [27:0] acc_2_V_3_fu_5598_p3;
wire  signed [27:0] select_ln340_4109_fu_5250_p3;
wire  signed [27:0] select_ln340_4093_fu_4798_p3;
wire  signed [28:0] sext_ln703_2039_fu_5618_p1;
wire  signed [28:0] sext_ln703_2038_fu_5614_p1;
wire   [28:0] add_ln1192_1034_fu_5622_p2;
wire   [27:0] acc_3_V_2_fu_5636_p2;
wire   [0:0] tmp_7278_fu_5642_p3;
wire   [0:0] tmp_7277_fu_5628_p3;
wire   [0:0] xor_ln786_2051_fu_5650_p2;
wire   [0:0] xor_ln340_1058_fu_5668_p2;
wire   [0:0] xor_ln340_2059_fu_5662_p2;
wire   [0:0] and_ln786_3116_fu_5656_p2;
wire   [0:0] or_ln340_4133_fu_5674_p2;
wire   [27:0] select_ln340_2082_fu_5680_p3;
wire   [27:0] acc_3_V_3_fu_5688_p3;
wire  signed [27:0] select_ln340_4110_fu_5336_p3;
wire  signed [27:0] select_ln340_4094_fu_4906_p3;
wire  signed [28:0] sext_ln703_2041_fu_5708_p1;
wire  signed [28:0] sext_ln703_2040_fu_5704_p1;
wire   [28:0] add_ln1192_1035_fu_5712_p2;
wire   [27:0] acc_4_V_2_fu_5726_p2;
wire   [0:0] tmp_7280_fu_5732_p3;
wire   [0:0] tmp_7279_fu_5718_p3;
wire   [0:0] xor_ln786_2052_fu_5740_p2;
wire   [0:0] xor_ln340_1059_fu_5758_p2;
wire   [0:0] xor_ln340_2060_fu_5752_p2;
wire   [0:0] and_ln786_3117_fu_5746_p2;
wire   [0:0] or_ln340_4134_fu_5764_p2;
wire   [27:0] select_ln340_2083_fu_5770_p3;
wire   [27:0] acc_4_V_3_fu_5778_p3;
wire   [22:0] shl_ln_fu_5800_p3;
wire  signed [23:0] sext_ln1118_519_fu_5807_p1;
wire   [16:0] shl_ln1118_s_fu_5817_p3;
wire   [23:0] sub_ln1118_fu_5811_p2;
wire  signed [23:0] sext_ln1118_520_fu_5824_p1;
wire  signed [23:0] sub_ln1118_133_fu_5828_p2;
wire   [23:0] shl_ln1_fu_5846_p3;
wire  signed [24:0] sext_ln731_3_fu_5853_p1;
wire   [17:0] shl_ln731_1_fu_5863_p3;
wire   [24:0] sub_ln731_fu_5857_p2;
wire  signed [24:0] sext_ln731_4_fu_5870_p1;
wire  signed [24:0] sub_ln731_1_fu_5874_p2;
wire  signed [24:0] sext_ln700_fu_5834_p1;
wire   [24:0] or_ln785_1023_fu_5884_p2;
wire   [0:0] tmp_7204_fu_5838_p3;
wire   [0:0] tmp_7205_fu_5890_p3;
wire   [0:0] xor_ln785_1023_fu_5898_p2;
wire   [24:0] and_ln786_3071_fu_5910_p2;
wire   [0:0] tmp_7206_fu_5916_p3;
wire   [0:0] xor_ln786_2071_fu_5924_p2;
wire   [0:0] and_ln786_3072_fu_5930_p2;
wire   [0:0] and_ln785_1023_fu_5904_p2;
wire   [0:0] xor_ln340_2078_fu_5942_p2;
wire   [0:0] or_ln340_4153_fu_5948_p2;
wire   [0:0] or_ln340_4088_fu_5936_p2;
wire  signed [27:0] sext_ln731_5_fu_5880_p1;
wire   [0:0] or_ln340_4089_fu_5954_p2;
wire   [27:0] select_ln340_2054_fu_5960_p3;
wire   [27:0] select_ln388_2047_fu_5968_p3;
wire   [27:0] or_ln785_1029_fu_5992_p0;
wire   [27:0] or_ln785_1029_fu_5992_p2;
wire   [0:0] tmp_7222_fu_5984_p3;
wire   [0:0] tmp_7223_fu_5998_p3;
wire   [0:0] xor_ln785_1029_fu_6006_p2;
wire   [27:0] and_ln786_3083_fu_6018_p0;
wire   [27:0] and_ln786_3083_fu_6018_p2;
wire   [0:0] tmp_7224_fu_6024_p3;
wire   [0:0] xor_ln786_2077_fu_6032_p2;
wire   [0:0] and_ln786_3084_fu_6038_p2;
wire   [0:0] and_ln785_1029_fu_6012_p2;
wire   [0:0] xor_ln340_2084_fu_6050_p2;
wire   [0:0] or_ln340_4159_fu_6056_p2;
wire   [0:0] or_ln340_4100_fu_6044_p2;
wire   [27:0] select_ln340_2060_fu_6068_p2;
wire   [27:0] select_ln388_2053_fu_6076_p2;
wire   [0:0] or_ln340_4101_fu_6062_p2;
wire   [27:0] select_ln340_2060_fu_6068_p3;
wire   [27:0] select_ln388_2053_fu_6076_p3;
wire  signed [25:0] sext_ln1118_528_fu_6092_p0;
wire  signed [25:0] tmp_7225_fu_6096_p1;
wire  signed [26:0] sext_ln1118_528_fu_6092_p1;
wire   [26:0] or_ln785_1030_fu_6108_p2;
wire   [0:0] tmp_7225_fu_6096_p3;
wire   [0:0] tmp_7226_fu_6114_p3;
wire   [0:0] xor_ln785_1030_fu_6122_p2;
wire   [26:0] and_ln786_3085_fu_6134_p2;
wire   [0:0] tmp_7227_fu_6140_p3;
wire   [0:0] xor_ln786_2078_fu_6148_p2;
wire   [0:0] and_ln786_3086_fu_6154_p2;
wire   [0:0] and_ln785_1030_fu_6128_p2;
wire   [0:0] xor_ln340_2085_fu_6166_p2;
wire   [0:0] or_ln340_4160_fu_6172_p2;
wire   [0:0] or_ln340_4102_fu_6160_p2;
wire  signed [27:0] sext_ln731_10_fu_6104_p1;
wire   [0:0] or_ln340_4103_fu_6178_p2;
wire   [27:0] select_ln340_2061_fu_6184_p3;
wire   [27:0] select_ln388_2054_fu_6192_p3;
wire  signed [26:0] sext_ln731_11_fu_6212_p0;
wire  signed [26:0] or_ln785_1031_fu_6216_p0;
wire  signed [26:0] sext_ln1118_529_fu_6208_p1;
wire   [26:0] or_ln785_1031_fu_6216_p2;
wire   [0:0] tmp_7229_fu_6222_p3;
wire   [0:0] xor_ln785_1031_fu_6230_p2;
wire  signed [26:0] and_ln786_3087_fu_6242_p0;
wire   [26:0] and_ln786_3087_fu_6242_p2;
wire   [0:0] tmp_7230_fu_6248_p3;
wire   [0:0] xor_ln786_2079_fu_6256_p2;
wire   [0:0] and_ln786_3088_fu_6262_p2;
wire   [0:0] and_ln785_1031_fu_6236_p2;
wire   [0:0] xor_ln340_2086_fu_6274_p2;
wire   [0:0] or_ln340_4161_fu_6280_p2;
wire   [0:0] or_ln340_4104_fu_6268_p2;
wire  signed [27:0] sext_ln731_11_fu_6212_p1;
wire   [0:0] or_ln340_4105_fu_6286_p2;
wire   [27:0] select_ln340_2062_fu_6292_p3;
wire   [27:0] select_ln388_2055_fu_6300_p3;
wire  signed [15:0] sext_ln1116_26_fu_6316_p0;
wire  signed [15:0] sext_ln1118_530_fu_6326_p0;
wire  signed [15:0] sext_ln1118_531_fu_6332_p0;
wire  signed [15:0] sext_ln1118_532_fu_6338_p0;
wire  signed [15:0] shl_ln1118_182_fu_6344_p1;
wire   [22:0] shl_ln1118_182_fu_6344_p3;
wire  signed [23:0] sext_ln1118_533_fu_6352_p1;
wire  signed [15:0] shl_ln1118_183_fu_6362_p1;
wire  signed [17:0] shl_ln1118_183_fu_6362_p3;
wire   [23:0] sub_ln1118_134_fu_6356_p2;
wire  signed [23:0] sext_ln1118_535_fu_6374_p1;
wire  signed [23:0] sub_ln1118_135_fu_6378_p2;
wire  signed [15:0] shl_ln731_2_fu_6396_p1;
wire   [23:0] shl_ln731_2_fu_6396_p3;
wire  signed [24:0] sext_ln731_12_fu_6404_p1;
wire  signed [15:0] shl_ln731_3_fu_6414_p1;
wire  signed [18:0] shl_ln731_3_fu_6414_p3;
wire   [24:0] sub_ln731_2_fu_6408_p2;
wire  signed [24:0] sext_ln731_14_fu_6426_p1;
wire  signed [24:0] sub_ln731_3_fu_6430_p2;
wire  signed [24:0] sext_ln700_4_fu_6384_p1;
wire   [24:0] or_ln785_1032_fu_6440_p2;
wire   [0:0] tmp_7231_fu_6388_p3;
wire   [0:0] tmp_7232_fu_6446_p3;
wire   [0:0] xor_ln785_1032_fu_6454_p2;
wire   [24:0] and_ln786_3089_fu_6466_p2;
wire   [0:0] tmp_7233_fu_6472_p3;
wire   [0:0] xor_ln786_2080_fu_6480_p2;
wire   [0:0] and_ln786_3090_fu_6486_p2;
wire   [0:0] and_ln785_1032_fu_6460_p2;
wire   [0:0] xor_ln340_2087_fu_6498_p2;
wire   [0:0] or_ln340_4162_fu_6504_p2;
wire   [0:0] or_ln340_4106_fu_6492_p2;
wire  signed [27:0] sext_ln731_15_fu_6436_p1;
wire   [0:0] or_ln340_4107_fu_6510_p2;
wire   [27:0] select_ln340_2063_fu_6516_p3;
wire   [27:0] select_ln388_2056_fu_6524_p3;
wire   [27:0] tmp_7234_fu_6540_p1;
wire   [27:0] or_ln785_1033_fu_6548_p0;
wire   [27:0] or_ln785_1033_fu_6548_p1;
wire   [27:0] or_ln785_1033_fu_6548_p2;
wire   [0:0] tmp_7234_fu_6540_p3;
wire   [0:0] tmp_7235_fu_6554_p3;
wire   [0:0] xor_ln785_1033_fu_6562_p2;
wire   [27:0] and_ln786_3091_fu_6574_p0;
wire   [27:0] and_ln786_3091_fu_6574_p1;
wire   [27:0] and_ln786_3091_fu_6574_p2;
wire   [0:0] tmp_7236_fu_6580_p3;
wire   [0:0] xor_ln786_2081_fu_6588_p2;
wire   [0:0] and_ln786_3092_fu_6594_p2;
wire   [0:0] and_ln785_1033_fu_6568_p2;
wire   [0:0] xor_ln340_2088_fu_6606_p2;
wire   [0:0] or_ln340_4163_fu_6612_p2;
wire   [0:0] or_ln340_4108_fu_6600_p2;
wire   [27:0] select_ln340_2064_fu_6624_p2;
wire   [27:0] select_ln388_2057_fu_6632_p2;
wire   [0:0] or_ln340_4109_fu_6618_p2;
wire   [27:0] select_ln340_2064_fu_6624_p3;
wire   [27:0] select_ln388_2057_fu_6632_p3;
wire  signed [15:0] shl_ln1118_184_fu_6648_p1;
wire   [19:0] shl_ln1118_184_fu_6648_p3;
wire  signed [20:0] sext_ln1118_536_fu_6656_p1;
wire  signed [20:0] sext_ln1118_534_fu_6370_p1;
wire  signed [20:0] add_ln1118_fu_6660_p2;
wire  signed [15:0] shl_ln731_4_fu_6678_p1;
wire   [20:0] shl_ln731_4_fu_6678_p3;
wire  signed [21:0] sext_ln731_16_fu_6686_p1;
wire  signed [21:0] sext_ln731_13_fu_6422_p1;
wire  signed [21:0] add_ln731_fu_6690_p2;
wire  signed [21:0] sext_ln1118_537_fu_6666_p1;
wire   [21:0] or_ln785_1034_fu_6700_p2;
wire   [0:0] tmp_7237_fu_6670_p3;
wire   [0:0] tmp_7238_fu_6706_p3;
wire   [0:0] xor_ln785_1034_fu_6714_p2;
wire   [21:0] and_ln786_3093_fu_6726_p2;
wire   [0:0] tmp_7239_fu_6732_p3;
wire   [0:0] xor_ln786_2082_fu_6740_p2;
wire   [0:0] and_ln786_3094_fu_6746_p2;
wire   [0:0] and_ln785_1034_fu_6720_p2;
wire   [0:0] xor_ln340_2089_fu_6758_p2;
wire   [0:0] or_ln340_4164_fu_6764_p2;
wire   [0:0] or_ln340_4110_fu_6752_p2;
wire  signed [27:0] sext_ln731_17_fu_6696_p1;
wire   [0:0] or_ln340_4111_fu_6770_p2;
wire   [27:0] select_ln340_2065_fu_6776_p3;
wire   [27:0] select_ln388_2058_fu_6784_p3;
wire  signed [27:0] sext_ln1118_538_fu_6800_p1;
wire   [27:0] or_ln785_1035_fu_6812_p2;
wire   [0:0] tmp_7240_fu_6804_p3;
wire   [0:0] tmp_7241_fu_6818_p3;
wire   [0:0] xor_ln785_1035_fu_6826_p2;
wire   [27:0] and_ln786_3095_fu_6838_p2;
wire   [0:0] tmp_7242_fu_6844_p3;
wire   [0:0] xor_ln786_2083_fu_6852_p2;
wire   [0:0] and_ln786_3096_fu_6858_p2;
wire   [0:0] and_ln785_1035_fu_6832_p2;
wire   [0:0] xor_ln340_2090_fu_6870_p2;
wire   [0:0] or_ln340_4165_fu_6876_p2;
wire   [0:0] or_ln340_4112_fu_6864_p2;
wire   [0:0] or_ln340_4113_fu_6882_p2;
wire   [27:0] select_ln340_2066_fu_6888_p3;
wire   [27:0] select_ln388_2059_fu_6896_p3;
wire   [27:0] or_ln785_1036_fu_6920_p0;
wire   [27:0] or_ln785_1036_fu_6920_p2;
wire   [0:0] tmp_7243_fu_6912_p3;
wire   [0:0] tmp_7244_fu_6926_p3;
wire   [0:0] xor_ln785_1036_fu_6934_p2;
wire   [27:0] and_ln786_3097_fu_6946_p0;
wire   [27:0] and_ln786_3097_fu_6946_p2;
wire   [0:0] tmp_7245_fu_6952_p3;
wire   [0:0] xor_ln786_2084_fu_6960_p2;
wire   [0:0] and_ln786_3098_fu_6966_p2;
wire   [0:0] and_ln785_1036_fu_6940_p2;
wire   [0:0] xor_ln340_2091_fu_6978_p2;
wire   [0:0] or_ln340_4166_fu_6984_p2;
wire   [0:0] or_ln340_4114_fu_6972_p2;
wire   [27:0] select_ln340_2067_fu_6996_p2;
wire   [27:0] select_ln388_2060_fu_7004_p2;
wire   [0:0] or_ln340_4115_fu_6990_p2;
wire   [27:0] select_ln340_2067_fu_6996_p3;
wire   [27:0] select_ln388_2060_fu_7004_p3;
wire  signed [25:0] sext_ln1118_539_fu_7020_p1;
wire   [25:0] or_ln785_1037_fu_7028_p2;
wire   [0:0] tmp_7247_fu_7034_p3;
wire   [0:0] xor_ln785_1037_fu_7042_p2;
wire   [25:0] and_ln786_3099_fu_7054_p2;
wire   [0:0] tmp_7248_fu_7060_p3;
wire   [0:0] xor_ln786_2085_fu_7068_p2;
wire   [0:0] and_ln786_3100_fu_7074_p2;
wire   [0:0] and_ln785_1037_fu_7048_p2;
wire   [0:0] xor_ln340_2092_fu_7086_p2;
wire   [0:0] or_ln340_4167_fu_7092_p2;
wire   [0:0] or_ln340_4116_fu_7080_p2;
wire  signed [27:0] sext_ln731_18_fu_7024_p1;
wire   [0:0] or_ln340_4117_fu_7098_p2;
wire   [27:0] select_ln340_2068_fu_7104_p3;
wire   [27:0] select_ln388_2061_fu_7112_p3;
wire  signed [24:0] sext_ln1118_540_fu_7128_p0;
wire  signed [24:0] tmp_7249_fu_7132_p1;
wire  signed [25:0] sext_ln1118_540_fu_7128_p1;
wire   [25:0] or_ln785_1038_fu_7144_p2;
wire   [0:0] tmp_7249_fu_7132_p3;
wire   [0:0] tmp_7250_fu_7150_p3;
wire   [0:0] xor_ln785_1038_fu_7158_p2;
wire   [25:0] and_ln786_3101_fu_7170_p2;
wire   [0:0] tmp_7251_fu_7176_p3;
wire   [0:0] xor_ln786_2086_fu_7184_p2;
wire   [0:0] and_ln786_3102_fu_7190_p2;
wire   [0:0] and_ln785_1038_fu_7164_p2;
wire   [0:0] xor_ln340_2093_fu_7202_p2;
wire   [0:0] or_ln340_4168_fu_7208_p2;
wire   [0:0] or_ln340_4118_fu_7196_p2;
wire  signed [27:0] sext_ln731_19_fu_7140_p1;
wire   [0:0] or_ln340_4119_fu_7214_p2;
wire   [27:0] select_ln340_2069_fu_7220_p3;
wire   [27:0] select_ln388_2062_fu_7228_p3;
wire  signed [27:0] sext_ln1118_541_fu_7244_p1;
wire   [27:0] or_ln785_1039_fu_7256_p2;
wire   [0:0] tmp_7252_fu_7248_p3;
wire   [0:0] tmp_7253_fu_7262_p3;
wire   [0:0] xor_ln785_1039_fu_7270_p2;
wire   [27:0] and_ln786_3103_fu_7282_p2;
wire   [0:0] tmp_7254_fu_7288_p3;
wire   [0:0] xor_ln786_2087_fu_7296_p2;
wire   [0:0] and_ln786_3104_fu_7302_p2;
wire   [0:0] and_ln785_1039_fu_7276_p2;
wire   [0:0] xor_ln340_2094_fu_7314_p2;
wire   [0:0] or_ln340_4169_fu_7320_p2;
wire   [0:0] or_ln340_4120_fu_7308_p2;
wire   [0:0] or_ln340_4121_fu_7326_p2;
wire   [27:0] select_ln340_2070_fu_7332_p3;
wire   [27:0] select_ln388_2063_fu_7340_p3;
wire  signed [28:0] sext_ln703_2029_fu_7356_p1;
wire   [28:0] add_ln1192_1028_fu_7359_p2;
wire   [27:0] acc_5_V_fu_7373_p2;
wire   [0:0] tmp_7266_fu_7378_p3;
wire   [0:0] tmp_7265_fu_7365_p3;
wire   [0:0] xor_ln786_2045_fu_7386_p2;
wire   [0:0] xor_ln340_1052_fu_7404_p2;
wire   [0:0] xor_ln340_2053_fu_7398_p2;
wire   [0:0] and_ln786_3110_fu_7392_p2;
wire   [0:0] or_ln340_4127_fu_7410_p2;
wire   [27:0] select_ln340_2076_fu_7416_p3;
wire   [27:0] acc_5_V_1_fu_7424_p3;
wire  signed [28:0] sext_ln703_2030_fu_7440_p1;
wire   [28:0] add_ln1192_1029_fu_7443_p2;
wire   [27:0] acc_6_V_fu_7457_p2;
wire   [0:0] tmp_7268_fu_7462_p3;
wire   [0:0] tmp_7267_fu_7449_p3;
wire   [0:0] xor_ln786_2046_fu_7470_p2;
wire   [0:0] xor_ln340_1053_fu_7488_p2;
wire   [0:0] xor_ln340_2054_fu_7482_p2;
wire   [0:0] and_ln786_3111_fu_7476_p2;
wire   [0:0] or_ln340_4128_fu_7494_p2;
wire   [27:0] select_ln340_2077_fu_7500_p3;
wire   [27:0] acc_6_V_1_fu_7508_p3;
wire  signed [27:0] select_ln340_4089_fu_5976_p3;
wire  signed [28:0] sext_ln703_2031_fu_7524_p1;
wire   [28:0] add_ln1192_1030_fu_7528_p2;
wire   [27:0] acc_7_V_fu_7542_p2;
wire   [0:0] tmp_7270_fu_7548_p3;
wire   [0:0] tmp_7269_fu_7534_p3;
wire   [0:0] xor_ln786_2047_fu_7556_p2;
wire   [0:0] xor_ln340_1054_fu_7574_p2;
wire   [0:0] xor_ln340_2055_fu_7568_p2;
wire   [0:0] and_ln786_3112_fu_7562_p2;
wire   [0:0] or_ln340_4129_fu_7580_p2;
wire   [27:0] select_ln340_2078_fu_7586_p3;
wire   [27:0] acc_7_V_1_fu_7594_p3;
wire  signed [27:0] select_ln340_4111_fu_7432_p3;
wire  signed [27:0] select_ln340_4095_fu_6084_p3;
wire  signed [28:0] sext_ln703_2043_fu_7614_p1;
wire  signed [28:0] sext_ln703_2042_fu_7610_p1;
wire   [28:0] add_ln1192_1036_fu_7618_p2;
wire   [27:0] acc_5_V_2_fu_7632_p2;
wire   [0:0] tmp_7282_fu_7638_p3;
wire   [0:0] tmp_7281_fu_7624_p3;
wire   [0:0] xor_ln786_2053_fu_7646_p2;
wire   [0:0] xor_ln340_1060_fu_7664_p2;
wire   [0:0] xor_ln340_2061_fu_7658_p2;
wire   [0:0] and_ln786_3118_fu_7652_p2;
wire   [0:0] or_ln340_4135_fu_7670_p2;
wire   [27:0] select_ln340_2084_fu_7676_p3;
wire   [27:0] acc_5_V_3_fu_7684_p3;
wire  signed [27:0] select_ln340_4112_fu_7516_p3;
wire  signed [27:0] select_ln340_4096_fu_6200_p3;
wire  signed [28:0] sext_ln703_2045_fu_7704_p1;
wire  signed [28:0] sext_ln703_2044_fu_7700_p1;
wire   [28:0] add_ln1192_1037_fu_7708_p2;
wire   [27:0] acc_6_V_2_fu_7722_p2;
wire   [0:0] tmp_7284_fu_7728_p3;
wire   [0:0] tmp_7283_fu_7714_p3;
wire   [0:0] xor_ln786_2054_fu_7736_p2;
wire   [0:0] xor_ln340_1061_fu_7754_p2;
wire   [0:0] xor_ln340_2062_fu_7748_p2;
wire   [0:0] and_ln786_3119_fu_7742_p2;
wire   [0:0] or_ln340_4136_fu_7760_p2;
wire   [27:0] select_ln340_2085_fu_7766_p3;
wire   [27:0] acc_6_V_3_fu_7774_p3;
wire  signed [27:0] select_ln340_4113_fu_7602_p3;
wire  signed [27:0] select_ln340_4097_fu_6308_p3;
wire  signed [28:0] sext_ln703_2047_fu_7794_p1;
wire  signed [28:0] sext_ln703_2046_fu_7790_p1;
wire   [28:0] add_ln1192_1038_fu_7798_p2;
wire   [27:0] acc_7_V_2_fu_7812_p2;
wire   [0:0] tmp_7286_fu_7818_p3;
wire   [0:0] tmp_7285_fu_7804_p3;
wire   [0:0] xor_ln786_2055_fu_7826_p2;
wire   [0:0] xor_ln340_1062_fu_7844_p2;
wire   [0:0] xor_ln340_2063_fu_7838_p2;
wire   [0:0] and_ln786_3120_fu_7832_p2;
wire   [0:0] or_ln340_4137_fu_7850_p2;
wire   [27:0] select_ln340_2086_fu_7856_p3;
wire   [27:0] acc_7_V_3_fu_7864_p3;
wire  signed [27:0] select_ln340_4098_fu_6532_p3;
wire  signed [28:0] sext_ln703_2049_fu_7883_p1;
wire  signed [28:0] sext_ln703_2048_fu_7880_p1;
wire   [28:0] add_ln1192_1039_fu_7887_p2;
wire   [27:0] acc_0_V_4_fu_7901_p2;
wire   [0:0] tmp_7288_fu_7906_p3;
wire   [0:0] tmp_7287_fu_7893_p3;
wire   [0:0] xor_ln786_2056_fu_7914_p2;
wire   [0:0] xor_ln340_1063_fu_7932_p2;
wire   [0:0] xor_ln340_2064_fu_7926_p2;
wire   [0:0] and_ln786_3121_fu_7920_p2;
wire   [0:0] or_ln340_4138_fu_7938_p2;
wire   [27:0] select_ln340_2087_fu_7944_p3;
wire   [27:0] acc_0_V_5_fu_7952_p3;
wire  signed [27:0] select_ln340_4099_fu_6640_p3;
wire  signed [28:0] sext_ln703_2051_fu_7972_p1;
wire  signed [28:0] sext_ln703_2050_fu_7969_p1;
wire   [28:0] add_ln1192_1040_fu_7976_p2;
wire   [27:0] acc_1_V_4_fu_7990_p2;
wire   [0:0] tmp_7290_fu_7995_p3;
wire   [0:0] tmp_7289_fu_7982_p3;
wire   [0:0] xor_ln786_2057_fu_8003_p2;
wire   [0:0] xor_ln340_1064_fu_8021_p2;
wire   [0:0] xor_ln340_2065_fu_8015_p2;
wire   [0:0] and_ln786_3122_fu_8009_p2;
wire   [0:0] or_ln340_4139_fu_8027_p2;
wire   [27:0] select_ln340_2088_fu_8033_p3;
wire   [27:0] acc_1_V_5_fu_8041_p3;
wire  signed [27:0] select_ln340_4100_fu_6792_p3;
wire  signed [28:0] sext_ln703_2053_fu_8061_p1;
wire  signed [28:0] sext_ln703_2052_fu_8058_p1;
wire   [28:0] add_ln1192_1041_fu_8065_p2;
wire   [27:0] acc_2_V_4_fu_8079_p2;
wire   [0:0] tmp_7292_fu_8084_p3;
wire   [0:0] tmp_7291_fu_8071_p3;
wire   [0:0] xor_ln786_2058_fu_8092_p2;
wire   [0:0] xor_ln340_1065_fu_8110_p2;
wire   [0:0] xor_ln340_2066_fu_8104_p2;
wire   [0:0] and_ln786_3123_fu_8098_p2;
wire   [0:0] or_ln340_4140_fu_8116_p2;
wire   [27:0] select_ln340_2089_fu_8122_p3;
wire   [27:0] acc_2_V_5_fu_8130_p3;
wire  signed [27:0] select_ln340_4101_fu_6904_p3;
wire  signed [28:0] sext_ln703_2055_fu_8150_p1;
wire  signed [28:0] sext_ln703_2054_fu_8147_p1;
wire   [28:0] add_ln1192_1042_fu_8154_p2;
wire   [27:0] acc_3_V_4_fu_8168_p2;
wire   [0:0] tmp_7294_fu_8173_p3;
wire   [0:0] tmp_7293_fu_8160_p3;
wire   [0:0] xor_ln786_2059_fu_8181_p2;
wire   [0:0] xor_ln340_1066_fu_8199_p2;
wire   [0:0] xor_ln340_2067_fu_8193_p2;
wire   [0:0] and_ln786_3124_fu_8187_p2;
wire   [0:0] or_ln340_4141_fu_8205_p2;
wire   [27:0] select_ln340_2090_fu_8211_p3;
wire   [27:0] acc_3_V_5_fu_8219_p3;
wire  signed [27:0] select_ln340_4102_fu_7012_p3;
wire  signed [28:0] sext_ln703_2057_fu_8239_p1;
wire  signed [28:0] sext_ln703_2056_fu_8236_p1;
wire   [28:0] add_ln1192_1043_fu_8243_p2;
wire   [27:0] acc_4_V_4_fu_8257_p2;
wire   [0:0] tmp_7296_fu_8262_p3;
wire   [0:0] tmp_7295_fu_8249_p3;
wire   [0:0] xor_ln786_2060_fu_8270_p2;
wire   [0:0] xor_ln340_1067_fu_8288_p2;
wire   [0:0] xor_ln340_2068_fu_8282_p2;
wire   [0:0] and_ln786_3125_fu_8276_p2;
wire   [0:0] or_ln340_4142_fu_8294_p2;
wire   [27:0] select_ln340_2091_fu_8300_p3;
wire   [27:0] acc_4_V_5_fu_8308_p3;
wire  signed [27:0] select_ln340_4119_fu_7692_p3;
wire  signed [27:0] select_ln340_4103_fu_7120_p3;
wire  signed [28:0] sext_ln703_2059_fu_8329_p1;
wire  signed [28:0] sext_ln703_2058_fu_8325_p1;
wire   [28:0] add_ln1192_1044_fu_8333_p2;
wire   [27:0] acc_5_V_4_fu_8347_p2;
wire   [0:0] tmp_7298_fu_8353_p3;
wire   [0:0] tmp_7297_fu_8339_p3;
wire   [0:0] xor_ln786_2061_fu_8361_p2;
wire   [0:0] xor_ln340_1068_fu_8379_p2;
wire   [0:0] xor_ln340_2069_fu_8373_p2;
wire   [0:0] and_ln786_3126_fu_8367_p2;
wire   [0:0] or_ln340_4143_fu_8385_p2;
wire   [27:0] select_ln340_2092_fu_8391_p3;
wire   [27:0] acc_5_V_5_fu_8399_p3;
wire  signed [27:0] select_ln340_4120_fu_7782_p3;
wire  signed [27:0] select_ln340_4104_fu_7236_p3;
wire  signed [28:0] sext_ln703_2061_fu_8420_p1;
wire  signed [28:0] sext_ln703_2060_fu_8416_p1;
wire   [28:0] add_ln1192_1045_fu_8424_p2;
wire   [27:0] acc_6_V_4_fu_8438_p2;
wire   [0:0] tmp_7300_fu_8444_p3;
wire   [0:0] tmp_7299_fu_8430_p3;
wire   [0:0] xor_ln786_2062_fu_8452_p2;
wire   [0:0] xor_ln340_1069_fu_8470_p2;
wire   [0:0] xor_ln340_2070_fu_8464_p2;
wire   [0:0] and_ln786_3127_fu_8458_p2;
wire   [0:0] or_ln340_4144_fu_8476_p2;
wire   [27:0] select_ln340_2093_fu_8482_p3;
wire   [27:0] acc_6_V_5_fu_8490_p3;
wire  signed [27:0] select_ln340_4121_fu_7872_p3;
wire  signed [27:0] select_ln340_4105_fu_7348_p3;
wire  signed [28:0] sext_ln703_2063_fu_8511_p1;
wire  signed [28:0] sext_ln703_2062_fu_8507_p1;
wire   [28:0] add_ln1192_1046_fu_8515_p2;
wire   [27:0] acc_7_V_4_fu_8529_p2;
wire   [0:0] tmp_7302_fu_8535_p3;
wire   [0:0] tmp_7301_fu_8521_p3;
wire   [0:0] xor_ln786_2063_fu_8543_p2;
wire   [0:0] xor_ln340_1070_fu_8561_p2;
wire   [0:0] xor_ln340_2071_fu_8555_p2;
wire   [0:0] and_ln786_3128_fu_8549_p2;
wire   [0:0] or_ln340_4145_fu_8567_p2;
wire   [27:0] select_ln340_2094_fu_8573_p3;
wire   [27:0] acc_7_V_5_fu_8581_p3;
wire   [31:0] add_ln391_fu_8614_p2;
wire    ap_CS_fsm_state4;
reg   [3:0] ap_NS_fsm;
reg    ap_condition_158;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 kernel_data_V_3_1 = 16'd0;
#0 kernel_data_V_3_2 = 16'd0;
#0 sX = 32'd0;
#0 pX = 32'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((data_V_data_V_empty_n == 1'b0) | ((1'd1 == and_ln360_reg_8671) & (io_acc_block_signal_op870 == 1'b0))) & (1'b1 == ap_CS_fsm_state3))) begin
        i_iw_0_i_reg_406 <= i_iw_reg_8642;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_iw_0_i_reg_406 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_158)) begin
        if ((icmp_ln384_fu_8598_p2 == 1'd1)) begin
            pX <= 32'd0;
        end else if ((icmp_ln384_fu_8598_p2 == 1'd0)) begin
            pX <= add_ln389_fu_8603_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_3444_p2 == 1'd0))) begin
        and_ln360_reg_8671 <= and_ln360_fu_3500_p2;
        icmp_ln360_reg_8660 <= icmp_ln360_fu_3474_p2;
        kernel_data_V_3_1 <= kernel_data_V_3_2;
        kernel_data_V_3_1_load_reg_8647 <= kernel_data_V_3_1;
        pX_load_reg_8665 <= pX;
        sX_load_reg_8655 <= sX;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_iw_reg_8642 <= i_iw_fu_3450_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data_V_data_V_empty_n == 1'b0) | ((1'd1 == and_ln360_reg_8671) & (io_acc_block_signal_op870 == 1'b0))) & (1'b1 == ap_CS_fsm_state3))) begin
        kernel_data_V_3_2 <= data_V_data_V_dout;
        sX <= ap_phi_mux_storemerge_i_i_phi_fu_420_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln360_fu_3500_p2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_3444_p2 == 1'd0))) begin
        select_ln340_4087_reg_8675 <= select_ln340_4087_fu_4208_p3;
        select_ln340_4088_reg_8681 <= select_ln340_4088_fu_4324_p3;
        select_ln340_4114_reg_8705 <= select_ln340_4114_fu_5426_p3;
        select_ln340_4115_reg_8711 <= select_ln340_4115_fu_5516_p3;
        select_ln340_4116_reg_8717 <= select_ln340_4116_fu_5606_p3;
        select_ln340_4117_reg_8723 <= select_ln340_4117_fu_5696_p3;
        select_ln340_4118_reg_8729 <= select_ln340_4118_fu_5786_p3;
        sext_ln1116_25_reg_8687 <= sext_ln1116_25_fu_4332_p1;
        sext_ln1118_522_reg_8693 <= sext_ln1118_522_fu_4345_p1;
        sext_ln1118_523_reg_8699 <= sext_ln1118_523_fu_4350_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((icmp_ln384_fu_8598_p2 == 1'd1)) begin
            ap_phi_mux_storemerge_i_i_phi_fu_420_p4 = 32'd0;
        end else if ((icmp_ln384_fu_8598_p2 == 1'd0)) begin
            ap_phi_mux_storemerge_i_i_phi_fu_420_p4 = select_ln391_fu_8619_p3;
        end else begin
            ap_phi_mux_storemerge_i_i_phi_fu_420_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge_i_i_phi_fu_420_p4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        data_V_data_V_blk_n = data_V_data_V_empty_n;
    end else begin
        data_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((data_V_data_V_empty_n == 1'b0) | ((1'd1 == and_ln360_reg_8671) & (io_acc_block_signal_op870 == 1'b0))) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_data_V_read = 1'b1;
    end else begin
        data_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_427_p0 = 28'd2088;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_427_p0 = 26'd67108364;
    end else begin
        grp_fu_427_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_427_p1 = sext_ln1116_26_fu_6316_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_427_p1 = sext_ln1118_510_fu_3524_p1;
    end else begin
        grp_fu_427_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_428_p0 = 27'd134217008;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_428_p0 = 28'd268433978;
    end else begin
        grp_fu_428_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_428_p1 = sext_ln1118_522_reg_8693;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_428_p1 = sext_ln1116_25_fu_4332_p1;
    end else begin
        grp_fu_428_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_429_p0 = 28'd268434266;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_429_p0 = 28'd1462;
    end else begin
        grp_fu_429_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_429_p1 = sext_ln1116_26_fu_6316_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_429_p1 = sext_ln1116_fu_3506_p1;
    end else begin
        grp_fu_429_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_430_p0 = 28'd1382;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_430_p0 = 28'd1070;
    end else begin
        grp_fu_430_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_430_p1 = sext_ln1116_25_reg_8687;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_430_p1 = sext_ln1116_fu_3506_p1;
    end else begin
        grp_fu_430_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_431_p0 = 26'd350;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_431_p0 = 26'd67108398;
    end else begin
        grp_fu_431_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_431_p1 = sext_ln1118_530_fu_6326_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_431_p1 = sext_ln1118_523_fu_4350_p1;
    end else begin
        grp_fu_431_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_432_p0 = 25'd175;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_432_p0 = 25'd228;
    end else begin
        grp_fu_432_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_432_p1 = sext_ln1118_531_fu_6332_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_432_p1 = sext_ln1118_521_fu_4338_p1;
    end else begin
        grp_fu_432_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_433_p0 = 28'd1044;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_433_p0 = 27'd974;
    end else begin
        grp_fu_433_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_433_p1 = sext_ln1116_26_fu_6316_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_433_p1 = sext_ln1118_fu_3514_p1;
    end else begin
        grp_fu_433_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_438_p0 = 25'd230;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_438_p0 = 26'd67108473;
    end else begin
        grp_fu_438_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_438_p1 = sext_ln1118_531_fu_6332_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_438_p1 = sext_ln1118_510_fu_3524_p1;
    end else begin
        grp_fu_438_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_439_p0 = 26'd460;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_439_p0 = 26'd468;
    end else begin
        grp_fu_439_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_439_p1 = sext_ln1118_530_fu_6326_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_439_p1 = sext_ln1118_523_fu_4350_p1;
    end else begin
        grp_fu_439_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_440_p0 = 28'd1626;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_440_p0 = 28'd1948;
    end else begin
        grp_fu_440_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_440_p1 = sext_ln1116_26_fu_6316_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_440_p1 = sext_ln1116_fu_3506_p1;
    end else begin
        grp_fu_440_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_441_p0 = 28'd2764;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_441_p0 = 27'd134216808;
    end else begin
        grp_fu_441_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_441_p1 = sext_ln1116_25_reg_8687;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_441_p1 = sext_ln1118_fu_3514_p1;
    end else begin
        grp_fu_441_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_442_p0 = 26'd67108504;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_442_p0 = 26'd67108526;
    end else begin
        grp_fu_442_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_442_p1 = sext_ln1118_523_reg_8699;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_442_p1 = sext_ln1118_523_fu_4350_p1;
    end else begin
        grp_fu_442_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_443_p0 = 28'd1068;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_443_p0 = 28'd268433616;
    end else begin
        grp_fu_443_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_443_p1 = sext_ln1116_26_fu_6316_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_443_p1 = sext_ln1116_fu_3506_p1;
    end else begin
        grp_fu_443_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_445_p0 = 27'd813;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_445_p0 = 25'd234;
    end else begin
        grp_fu_445_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_445_p1 = sext_ln1118_532_fu_6338_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_445_p1 = sext_ln1118_521_fu_4338_p1;
    end else begin
        grp_fu_445_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_446_p0 = 27'd534;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_446_p0 = 26'd456;
    end else begin
        grp_fu_446_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_446_p1 = sext_ln1118_532_fu_6338_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_446_p1 = sext_ln1118_523_fu_4350_p1;
    end else begin
        grp_fu_446_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_447_p0 = 26'd67108456;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_447_p0 = 27'd731;
    end else begin
        grp_fu_447_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_447_p1 = sext_ln1118_523_reg_8699;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_447_p1 = sext_ln1118_fu_3514_p1;
    end else begin
        grp_fu_447_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_449_p0 = 28'd268433076;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_449_p0 = 27'd535;
    end else begin
        grp_fu_449_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_449_p1 = sext_ln1116_26_fu_6316_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_449_p1 = sext_ln1118_fu_3514_p1;
    end else begin
        grp_fu_449_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_450_p0 = 27'd134216912;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_450_p0 = 25'd33554182;
    end else begin
        grp_fu_450_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_450_p1 = sext_ln1118_522_reg_8693;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_450_p1 = sext_ln1118_511_fu_3531_p1;
    end else begin
        grp_fu_450_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_8671) & (1'b1 == ap_CS_fsm_state3))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((data_V_data_V_empty_n == 1'b0) | ((1'd1 == and_ln360_reg_8671) & (io_acc_block_signal_op870 == 1'b0))) & (1'd1 == and_ln360_reg_8671) & (1'b1 == ap_CS_fsm_state3))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_8671) & (1'b1 == ap_CS_fsm_state3))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((data_V_data_V_empty_n == 1'b0) | ((1'd1 == and_ln360_reg_8671) & (io_acc_block_signal_op870 == 1'b0))) & (1'd1 == and_ln360_reg_8671) & (1'b1 == ap_CS_fsm_state3))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_8671) & (1'b1 == ap_CS_fsm_state3))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((data_V_data_V_empty_n == 1'b0) | ((1'd1 == and_ln360_reg_8671) & (io_acc_block_signal_op870 == 1'b0))) & (1'd1 == and_ln360_reg_8671) & (1'b1 == ap_CS_fsm_state3))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_8671) & (1'b1 == ap_CS_fsm_state3))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((data_V_data_V_empty_n == 1'b0) | ((1'd1 == and_ln360_reg_8671) & (io_acc_block_signal_op870 == 1'b0))) & (1'd1 == and_ln360_reg_8671) & (1'b1 == ap_CS_fsm_state3))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_8671) & (1'b1 == ap_CS_fsm_state3))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((data_V_data_V_empty_n == 1'b0) | ((1'd1 == and_ln360_reg_8671) & (io_acc_block_signal_op870 == 1'b0))) & (1'd1 == and_ln360_reg_8671) & (1'b1 == ap_CS_fsm_state3))) begin
        res_V_data_4_V_write = 1'b1;
    end else begin
        res_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_8671) & (1'b1 == ap_CS_fsm_state3))) begin
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n;
    end else begin
        res_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((data_V_data_V_empty_n == 1'b0) | ((1'd1 == and_ln360_reg_8671) & (io_acc_block_signal_op870 == 1'b0))) & (1'd1 == and_ln360_reg_8671) & (1'b1 == ap_CS_fsm_state3))) begin
        res_V_data_5_V_write = 1'b1;
    end else begin
        res_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_8671) & (1'b1 == ap_CS_fsm_state3))) begin
        res_V_data_6_V_blk_n = res_V_data_6_V_full_n;
    end else begin
        res_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((data_V_data_V_empty_n == 1'b0) | ((1'd1 == and_ln360_reg_8671) & (io_acc_block_signal_op870 == 1'b0))) & (1'd1 == and_ln360_reg_8671) & (1'b1 == ap_CS_fsm_state3))) begin
        res_V_data_6_V_write = 1'b1;
    end else begin
        res_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_8671) & (1'b1 == ap_CS_fsm_state3))) begin
        res_V_data_7_V_blk_n = res_V_data_7_V_full_n;
    end else begin
        res_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((data_V_data_V_empty_n == 1'b0) | ((1'd1 == and_ln360_reg_8671) & (io_acc_block_signal_op870 == 1'b0))) & (1'd1 == and_ln360_reg_8671) & (1'b1 == ap_CS_fsm_state3))) begin
        res_V_data_7_V_write = 1'b1;
    end else begin
        res_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_3444_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((data_V_data_V_empty_n == 1'b0) | ((1'd1 == and_ln360_reg_8671) & (io_acc_block_signal_op870 == 1'b0))) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_1_fu_4984_p3 = ((and_ln786_3105_fu_4952_p2[0:0] === 1'b1) ? 28'd134217728 : acc_0_V_fu_4932_p2);

assign acc_0_V_2_fu_5366_p2 = ($signed(select_ln340_4106_fu_4992_p3) + $signed(select_ln340_4090_fu_4458_p3));

assign acc_0_V_3_fu_5418_p3 = ((and_ln786_3113_fu_5386_p2[0:0] === 1'b1) ? 28'd134217728 : acc_0_V_2_fu_5366_p2);

assign acc_0_V_4_fu_7901_p2 = ($signed(select_ln340_4114_reg_8705) + $signed(select_ln340_4098_fu_6532_p3));

assign acc_0_V_5_fu_7952_p3 = ((and_ln786_3121_fu_7920_p2[0:0] === 1'b1) ? 28'd134217728 : acc_0_V_4_fu_7901_p2);

assign acc_0_V_fu_4932_p2 = ($signed(28'd268435306) + $signed(select_ln340_4082_fu_3644_p3));

assign acc_1_V_1_fu_5070_p3 = ((and_ln786_3106_fu_5038_p2[0:0] === 1'b1) ? 28'd134217728 : acc_1_V_fu_5018_p2);

assign acc_1_V_2_fu_5456_p2 = ($signed(select_ln340_4107_fu_5078_p3) + $signed(select_ln340_4091_fu_4566_p3));

assign acc_1_V_3_fu_5508_p3 = ((and_ln786_3114_fu_5476_p2[0:0] === 1'b1) ? 28'd134217728 : acc_1_V_2_fu_5456_p2);

assign acc_1_V_4_fu_7990_p2 = ($signed(select_ln340_4115_reg_8711) + $signed(select_ln340_4099_fu_6640_p3));

assign acc_1_V_5_fu_8041_p3 = ((and_ln786_3122_fu_8009_p2[0:0] === 1'b1) ? 28'd134217728 : acc_1_V_4_fu_7990_p2);

assign acc_1_V_fu_5018_p2 = ($signed(28'd268434842) + $signed(select_ln340_4083_fu_3756_p3));

assign acc_2_V_1_fu_5156_p3 = ((and_ln786_3107_fu_5124_p2[0:0] === 1'b1) ? 28'd134217728 : acc_2_V_fu_5104_p2);

assign acc_2_V_2_fu_5546_p2 = ($signed(select_ln340_4108_fu_5164_p3) + $signed(select_ln340_4092_fu_4682_p3));

assign acc_2_V_3_fu_5598_p3 = ((and_ln786_3115_fu_5566_p2[0:0] === 1'b1) ? 28'd134217728 : acc_2_V_2_fu_5546_p2);

assign acc_2_V_4_fu_8079_p2 = ($signed(select_ln340_4116_reg_8717) + $signed(select_ln340_4100_fu_6792_p3));

assign acc_2_V_5_fu_8130_p3 = ((and_ln786_3123_fu_8098_p2[0:0] === 1'b1) ? 28'd134217728 : acc_2_V_4_fu_8079_p2);

assign acc_2_V_fu_5104_p2 = ($signed(28'd268434856) + $signed(select_ln340_4084_fu_3872_p3));

assign acc_3_V_1_fu_5242_p3 = ((and_ln786_3108_fu_5210_p2[0:0] === 1'b1) ? 28'd134217728 : acc_3_V_fu_5190_p2);

assign acc_3_V_2_fu_5636_p2 = ($signed(select_ln340_4109_fu_5250_p3) + $signed(select_ln340_4093_fu_4798_p3));

assign acc_3_V_3_fu_5688_p3 = ((and_ln786_3116_fu_5656_p2[0:0] === 1'b1) ? 28'd134217728 : acc_3_V_2_fu_5636_p2);

assign acc_3_V_4_fu_8168_p2 = ($signed(select_ln340_4117_reg_8723) + $signed(select_ln340_4101_fu_6904_p3));

assign acc_3_V_5_fu_8219_p3 = ((and_ln786_3124_fu_8187_p2[0:0] === 1'b1) ? 28'd134217728 : acc_3_V_4_fu_8168_p2);

assign acc_3_V_fu_5190_p2 = ($signed(28'd268435302) + $signed(select_ln340_4085_fu_3984_p3));

assign acc_4_V_1_fu_5328_p3 = ((and_ln786_3109_fu_5296_p2[0:0] === 1'b1) ? 28'd134217728 : acc_4_V_fu_5276_p2);

assign acc_4_V_2_fu_5726_p2 = ($signed(select_ln340_4110_fu_5336_p3) + $signed(select_ln340_4094_fu_4906_p3));

assign acc_4_V_3_fu_5778_p3 = ((and_ln786_3117_fu_5746_p2[0:0] === 1'b1) ? 28'd134217728 : acc_4_V_2_fu_5726_p2);

assign acc_4_V_4_fu_8257_p2 = ($signed(select_ln340_4118_reg_8729) + $signed(select_ln340_4102_fu_7012_p3));

assign acc_4_V_5_fu_8308_p3 = ((and_ln786_3125_fu_8276_p2[0:0] === 1'b1) ? 28'd134217728 : acc_4_V_4_fu_8257_p2);

assign acc_4_V_fu_5276_p2 = ($signed(28'd268434900) + $signed(select_ln340_4086_fu_4096_p3));

assign acc_5_V_1_fu_7424_p3 = ((and_ln786_3110_fu_7392_p2[0:0] === 1'b1) ? 28'd134217728 : acc_5_V_fu_7373_p2);

assign acc_5_V_2_fu_7632_p2 = ($signed(select_ln340_4111_fu_7432_p3) + $signed(select_ln340_4095_fu_6084_p3));

assign acc_5_V_3_fu_7684_p3 = ((and_ln786_3118_fu_7652_p2[0:0] === 1'b1) ? 28'd134217728 : acc_5_V_2_fu_7632_p2);

assign acc_5_V_4_fu_8347_p2 = ($signed(select_ln340_4119_fu_7692_p3) + $signed(select_ln340_4103_fu_7120_p3));

assign acc_5_V_5_fu_8399_p3 = ((and_ln786_3126_fu_8367_p2[0:0] === 1'b1) ? 28'd134217728 : acc_5_V_4_fu_8347_p2);

assign acc_5_V_fu_7373_p2 = ($signed(28'd142) + $signed(select_ln340_4087_reg_8675));

assign acc_6_V_1_fu_7508_p3 = ((and_ln786_3111_fu_7476_p2[0:0] === 1'b1) ? 28'd134217728 : acc_6_V_fu_7457_p2);

assign acc_6_V_2_fu_7722_p2 = ($signed(select_ln340_4112_fu_7516_p3) + $signed(select_ln340_4096_fu_6200_p3));

assign acc_6_V_3_fu_7774_p3 = ((and_ln786_3119_fu_7742_p2[0:0] === 1'b1) ? 28'd134217728 : acc_6_V_2_fu_7722_p2);

assign acc_6_V_4_fu_8438_p2 = ($signed(select_ln340_4120_fu_7782_p3) + $signed(select_ln340_4104_fu_7236_p3));

assign acc_6_V_5_fu_8490_p3 = ((and_ln786_3127_fu_8458_p2[0:0] === 1'b1) ? 28'd134217728 : acc_6_V_4_fu_8438_p2);

assign acc_6_V_fu_7457_p2 = ($signed(28'd268434976) + $signed(select_ln340_4088_reg_8681));

assign acc_7_V_1_fu_7594_p3 = ((and_ln786_3112_fu_7562_p2[0:0] === 1'b1) ? 28'd134217728 : acc_7_V_fu_7542_p2);

assign acc_7_V_2_fu_7812_p2 = ($signed(select_ln340_4113_fu_7602_p3) + $signed(select_ln340_4097_fu_6308_p3));

assign acc_7_V_3_fu_7864_p3 = ((and_ln786_3120_fu_7832_p2[0:0] === 1'b1) ? 28'd134217728 : acc_7_V_2_fu_7812_p2);

assign acc_7_V_4_fu_8529_p2 = ($signed(select_ln340_4121_fu_7872_p3) + $signed(select_ln340_4105_fu_7348_p3));

assign acc_7_V_5_fu_8581_p3 = ((and_ln786_3128_fu_8549_p2[0:0] === 1'b1) ? 28'd134217728 : acc_7_V_4_fu_8529_p2);

assign acc_7_V_fu_7542_p2 = ($signed(28'd268435422) + $signed(select_ln340_4089_fu_5976_p3));

assign add_ln1118_fu_6660_p2 = ($signed(sext_ln1118_536_fu_6656_p1) + $signed(sext_ln1118_534_fu_6370_p1));

assign add_ln1192_1024_fu_5004_p2 = ($signed(29'd536870298) + $signed(sext_ln703_2025_fu_5000_p1));

assign add_ln1192_1025_fu_5090_p2 = ($signed(29'd536870312) + $signed(sext_ln703_2026_fu_5086_p1));

assign add_ln1192_1026_fu_5176_p2 = ($signed(29'd536870758) + $signed(sext_ln703_2027_fu_5172_p1));

assign add_ln1192_1027_fu_5262_p2 = ($signed(29'd536870356) + $signed(sext_ln703_2028_fu_5258_p1));

assign add_ln1192_1028_fu_7359_p2 = ($signed(29'd142) + $signed(sext_ln703_2029_fu_7356_p1));

assign add_ln1192_1029_fu_7443_p2 = ($signed(29'd536870432) + $signed(sext_ln703_2030_fu_7440_p1));

assign add_ln1192_1030_fu_7528_p2 = ($signed(29'd536870878) + $signed(sext_ln703_2031_fu_7524_p1));

assign add_ln1192_1031_fu_5352_p2 = ($signed(sext_ln703_2033_fu_5348_p1) + $signed(sext_ln703_2032_fu_5344_p1));

assign add_ln1192_1032_fu_5442_p2 = ($signed(sext_ln703_2035_fu_5438_p1) + $signed(sext_ln703_2034_fu_5434_p1));

assign add_ln1192_1033_fu_5532_p2 = ($signed(sext_ln703_2037_fu_5528_p1) + $signed(sext_ln703_2036_fu_5524_p1));

assign add_ln1192_1034_fu_5622_p2 = ($signed(sext_ln703_2039_fu_5618_p1) + $signed(sext_ln703_2038_fu_5614_p1));

assign add_ln1192_1035_fu_5712_p2 = ($signed(sext_ln703_2041_fu_5708_p1) + $signed(sext_ln703_2040_fu_5704_p1));

assign add_ln1192_1036_fu_7618_p2 = ($signed(sext_ln703_2043_fu_7614_p1) + $signed(sext_ln703_2042_fu_7610_p1));

assign add_ln1192_1037_fu_7708_p2 = ($signed(sext_ln703_2045_fu_7704_p1) + $signed(sext_ln703_2044_fu_7700_p1));

assign add_ln1192_1038_fu_7798_p2 = ($signed(sext_ln703_2047_fu_7794_p1) + $signed(sext_ln703_2046_fu_7790_p1));

assign add_ln1192_1039_fu_7887_p2 = ($signed(sext_ln703_2049_fu_7883_p1) + $signed(sext_ln703_2048_fu_7880_p1));

assign add_ln1192_1040_fu_7976_p2 = ($signed(sext_ln703_2051_fu_7972_p1) + $signed(sext_ln703_2050_fu_7969_p1));

assign add_ln1192_1041_fu_8065_p2 = ($signed(sext_ln703_2053_fu_8061_p1) + $signed(sext_ln703_2052_fu_8058_p1));

assign add_ln1192_1042_fu_8154_p2 = ($signed(sext_ln703_2055_fu_8150_p1) + $signed(sext_ln703_2054_fu_8147_p1));

assign add_ln1192_1043_fu_8243_p2 = ($signed(sext_ln703_2057_fu_8239_p1) + $signed(sext_ln703_2056_fu_8236_p1));

assign add_ln1192_1044_fu_8333_p2 = ($signed(sext_ln703_2059_fu_8329_p1) + $signed(sext_ln703_2058_fu_8325_p1));

assign add_ln1192_1045_fu_8424_p2 = ($signed(sext_ln703_2061_fu_8420_p1) + $signed(sext_ln703_2060_fu_8416_p1));

assign add_ln1192_1046_fu_8515_p2 = ($signed(sext_ln703_2063_fu_8511_p1) + $signed(sext_ln703_2062_fu_8507_p1));

assign add_ln1192_fu_4918_p2 = ($signed(29'd536870762) + $signed(sext_ln703_fu_4914_p1));

assign add_ln389_fu_8603_p2 = (pX_load_reg_8665 + 32'd1);

assign add_ln391_fu_8614_p2 = (sX_load_reg_8655 + 32'd1);

assign add_ln731_fu_6690_p2 = ($signed(sext_ln731_16_fu_6686_p1) + $signed(sext_ln731_13_fu_6422_p1));

assign and_ln360_fu_3500_p2 = (icmp_ln360_fu_3474_p2 & icmp_ln360_1_fu_3494_p2);

assign and_ln785_1017_fu_3684_p2 = (xor_ln785_1017_fu_3678_p2 & tmp_7187_fu_3670_p3);

assign and_ln785_1018_fu_3800_p2 = (xor_ln785_1018_fu_3794_p2 & tmp_7190_fu_3786_p3);

assign and_ln785_1019_fu_3912_p2 = (xor_ln785_1019_fu_3906_p2 & tmp_7193_fu_3898_p3);

assign and_ln785_1020_fu_4024_p2 = (xor_ln785_1020_fu_4018_p2 & tmp_7196_fu_4010_p3);

assign and_ln785_1021_fu_4136_p2 = (xor_ln785_1021_fu_4130_p2 & tmp_7199_fu_4122_p3);

assign and_ln785_1022_fu_4252_p2 = (xor_ln785_1022_fu_4246_p2 & tmp_7202_fu_4238_p3);

assign and_ln785_1023_fu_5904_p2 = (xor_ln785_1023_fu_5898_p2 & tmp_7205_fu_5890_p3);

assign and_ln785_1024_fu_4386_p2 = (xor_ln785_1024_fu_4380_p2 & tmp_7208_fu_4372_p3);

assign and_ln785_1025_fu_4494_p2 = (xor_ln785_1025_fu_4488_p2 & tmp_7211_fu_4480_p3);

assign and_ln785_1026_fu_4610_p2 = (xor_ln785_1026_fu_4604_p2 & tmp_7214_fu_4596_p3);

assign and_ln785_1027_fu_4726_p2 = (xor_ln785_1027_fu_4720_p2 & tmp_7217_fu_4712_p3);

assign and_ln785_1028_fu_4834_p2 = (xor_ln785_1028_fu_4828_p2 & tmp_7220_fu_4820_p3);

assign and_ln785_1029_fu_6012_p2 = (xor_ln785_1029_fu_6006_p2 & tmp_7223_fu_5998_p3);

assign and_ln785_1030_fu_6128_p2 = (xor_ln785_1030_fu_6122_p2 & tmp_7226_fu_6114_p3);

assign and_ln785_1031_fu_6236_p2 = (xor_ln785_1031_fu_6230_p2 & tmp_7229_fu_6222_p3);

assign and_ln785_1032_fu_6460_p2 = (xor_ln785_1032_fu_6454_p2 & tmp_7232_fu_6446_p3);

assign and_ln785_1033_fu_6568_p2 = (xor_ln785_1033_fu_6562_p2 & tmp_7235_fu_6554_p3);

assign and_ln785_1034_fu_6720_p2 = (xor_ln785_1034_fu_6714_p2 & tmp_7238_fu_6706_p3);

assign and_ln785_1035_fu_6832_p2 = (xor_ln785_1035_fu_6826_p2 & tmp_7241_fu_6818_p3);

assign and_ln785_1036_fu_6940_p2 = (xor_ln785_1036_fu_6934_p2 & tmp_7244_fu_6926_p3);

assign and_ln785_1037_fu_7048_p2 = (xor_ln785_1037_fu_7042_p2 & tmp_7247_fu_7034_p3);

assign and_ln785_1038_fu_7164_p2 = (xor_ln785_1038_fu_7158_p2 & tmp_7250_fu_7150_p3);

assign and_ln785_1039_fu_7276_p2 = (xor_ln785_1039_fu_7270_p2 & tmp_7253_fu_7262_p3);

assign and_ln785_fu_3572_p2 = (xor_ln785_fu_3566_p2 & tmp_7184_fu_3558_p3);

assign and_ln786_3058_fu_3598_p2 = (xor_ln786_2064_fu_3592_p2 & tmp_7183_fu_3540_p3);

assign and_ln786_3059_fu_3690_p2 = (sext_ln1118_513_fu_3652_p1 & grp_fu_430_p2);

assign and_ln786_3060_fu_3710_p2 = (xor_ln786_2065_fu_3704_p2 & tmp_7186_fu_3656_p3);

assign and_ln786_3061_fu_3806_p2 = (sext_ln1118_514_fu_3764_p1 & mul_ln731_2_fu_434_p2);

assign and_ln786_3062_fu_3826_p2 = (xor_ln786_2066_fu_3820_p2 & tmp_7189_fu_3768_p3);

assign and_ln786_3063_fu_3918_p2 = (sext_ln1118_515_fu_3880_p1 & grp_fu_443_p2);

assign and_ln786_3064_fu_3938_p2 = (xor_ln786_2067_fu_3932_p2 & tmp_7192_fu_3884_p3);

assign and_ln786_3065_fu_4030_p2 = (sext_ln1118_516_fu_3992_p1 & grp_fu_440_p2);

assign and_ln786_3066_fu_4050_p2 = (xor_ln786_2068_fu_4044_p2 & tmp_7195_fu_3996_p3);

assign and_ln786_3067_fu_4142_p2 = (sext_ln1118_517_fu_4104_p1 & grp_fu_429_p2);

assign and_ln786_3068_fu_4162_p2 = (xor_ln786_2069_fu_4156_p2 & tmp_7198_fu_4108_p3);

assign and_ln786_3069_fu_4258_p2 = (sext_ln1118_518_fu_4216_p1 & mul_ln731_6_fu_448_p2);

assign and_ln786_3070_fu_4278_p2 = (xor_ln786_2070_fu_4272_p2 & tmp_7201_fu_4220_p3);

assign and_ln786_3071_fu_5910_p2 = (sub_ln731_1_fu_5874_p2 & sext_ln700_fu_5834_p1);

assign and_ln786_3072_fu_5930_p2 = (xor_ln786_2071_fu_5924_p2 & tmp_7204_fu_5838_p3);

assign and_ln786_3073_fu_4392_p2 = (sext_ln1118_524_fu_4358_p1 & mul_ln731_7_fu_435_p2);

assign and_ln786_3074_fu_4412_p2 = (xor_ln786_2072_fu_4406_p2 & grp_fu_3428_p3);

assign and_ln786_3075_fu_4500_p2 = (mul_ln731_8_fu_444_p2 & grp_fu_428_p2);

assign and_ln786_3076_fu_4520_p2 = (xor_ln786_2073_fu_4514_p2 & tmp_7210_fu_4466_p3);

assign and_ln786_3077_fu_4616_p2 = (sext_ln1118_525_fu_4574_p1 & grp_fu_439_p2);

assign and_ln786_3078_fu_4636_p2 = (xor_ln786_2074_fu_4630_p2 & tmp_7213_fu_4578_p3);

assign and_ln786_3079_fu_4732_p2 = (sext_ln1118_526_fu_4690_p1 & grp_fu_431_p2);

assign and_ln786_3080_fu_4752_p2 = (xor_ln786_2075_fu_4746_p2 & tmp_7216_fu_4694_p3);

assign and_ln786_3081_fu_4840_p0 = grp_fu_446_p2;

assign and_ln786_3081_fu_4840_p2 = (sext_ln1118_527_fu_4806_p1 & and_ln786_3081_fu_4840_p0);

assign and_ln786_3082_fu_4860_p2 = (xor_ln786_2076_fu_4854_p2 & grp_fu_3436_p3);

assign and_ln786_3083_fu_6018_p0 = grp_fu_441_p2;

assign and_ln786_3083_fu_6018_p2 = (grp_fu_430_p2 & and_ln786_3083_fu_6018_p0);

assign and_ln786_3084_fu_6038_p2 = (xor_ln786_2077_fu_6032_p2 & tmp_7222_fu_5984_p3);

assign and_ln786_3085_fu_6134_p2 = (sext_ln1118_528_fu_6092_p1 & grp_fu_450_p2);

assign and_ln786_3086_fu_6154_p2 = (xor_ln786_2078_fu_6148_p2 & tmp_7225_fu_6096_p3);

assign and_ln786_3087_fu_6242_p0 = grp_fu_428_p2;

assign and_ln786_3087_fu_6242_p2 = (sext_ln1118_529_fu_6208_p1 & and_ln786_3087_fu_6242_p0);

assign and_ln786_3088_fu_6262_p2 = (xor_ln786_2079_fu_6256_p2 & grp_fu_3428_p3);

assign and_ln786_3089_fu_6466_p2 = (sub_ln731_3_fu_6430_p2 & sext_ln700_4_fu_6384_p1);

assign and_ln786_3090_fu_6486_p2 = (xor_ln786_2080_fu_6480_p2 & tmp_7231_fu_6388_p3);

assign and_ln786_3091_fu_6574_p0 = grp_fu_427_p2;

assign and_ln786_3091_fu_6574_p1 = grp_fu_433_p2;

assign and_ln786_3091_fu_6574_p2 = (and_ln786_3091_fu_6574_p1 & and_ln786_3091_fu_6574_p0);

assign and_ln786_3092_fu_6594_p2 = (xor_ln786_2081_fu_6588_p2 & tmp_7234_fu_6540_p3);

assign and_ln786_3093_fu_6726_p2 = (sext_ln1118_537_fu_6666_p1 & add_ln731_fu_6690_p2);

assign and_ln786_3094_fu_6746_p2 = (xor_ln786_2082_fu_6740_p2 & tmp_7237_fu_6670_p3);

assign and_ln786_3095_fu_6838_p2 = (sext_ln1118_538_fu_6800_p1 & grp_fu_440_p2);

assign and_ln786_3096_fu_6858_p2 = (xor_ln786_2083_fu_6852_p2 & tmp_7240_fu_6804_p3);

assign and_ln786_3097_fu_6946_p0 = grp_fu_449_p2;

assign and_ln786_3097_fu_6946_p2 = (grp_fu_429_p2 & and_ln786_3097_fu_6946_p0);

assign and_ln786_3098_fu_6966_p2 = (xor_ln786_2084_fu_6960_p2 & tmp_7243_fu_6912_p3);

assign and_ln786_3099_fu_7054_p2 = (sext_ln1118_539_fu_7020_p1 & grp_fu_431_p2);

assign and_ln786_3100_fu_7074_p2 = (xor_ln786_2085_fu_7068_p2 & grp_fu_3436_p3);

assign and_ln786_3101_fu_7170_p2 = (sext_ln1118_540_fu_7128_p1 & grp_fu_439_p2);

assign and_ln786_3102_fu_7190_p2 = (xor_ln786_2086_fu_7184_p2 & tmp_7249_fu_7132_p3);

assign and_ln786_3103_fu_7282_p2 = (sext_ln1118_541_fu_7244_p1 & grp_fu_443_p2);

assign and_ln786_3104_fu_7302_p2 = (xor_ln786_2087_fu_7296_p2 & tmp_7252_fu_7248_p3);

assign and_ln786_3105_fu_4952_p2 = (xor_ln786_fu_4946_p2 & tmp_7255_fu_4924_p3);

assign and_ln786_3106_fu_5038_p2 = (xor_ln786_2041_fu_5032_p2 & tmp_7257_fu_5010_p3);

assign and_ln786_3107_fu_5124_p2 = (xor_ln786_2042_fu_5118_p2 & tmp_7259_fu_5096_p3);

assign and_ln786_3108_fu_5210_p2 = (xor_ln786_2043_fu_5204_p2 & tmp_7261_fu_5182_p3);

assign and_ln786_3109_fu_5296_p2 = (xor_ln786_2044_fu_5290_p2 & tmp_7263_fu_5268_p3);

assign and_ln786_3110_fu_7392_p2 = (xor_ln786_2045_fu_7386_p2 & tmp_7265_fu_7365_p3);

assign and_ln786_3111_fu_7476_p2 = (xor_ln786_2046_fu_7470_p2 & tmp_7267_fu_7449_p3);

assign and_ln786_3112_fu_7562_p2 = (xor_ln786_2047_fu_7556_p2 & tmp_7269_fu_7534_p3);

assign and_ln786_3113_fu_5386_p2 = (xor_ln786_2048_fu_5380_p2 & tmp_7271_fu_5358_p3);

assign and_ln786_3114_fu_5476_p2 = (xor_ln786_2049_fu_5470_p2 & tmp_7273_fu_5448_p3);

assign and_ln786_3115_fu_5566_p2 = (xor_ln786_2050_fu_5560_p2 & tmp_7275_fu_5538_p3);

assign and_ln786_3116_fu_5656_p2 = (xor_ln786_2051_fu_5650_p2 & tmp_7277_fu_5628_p3);

assign and_ln786_3117_fu_5746_p2 = (xor_ln786_2052_fu_5740_p2 & tmp_7279_fu_5718_p3);

assign and_ln786_3118_fu_7652_p2 = (xor_ln786_2053_fu_7646_p2 & tmp_7281_fu_7624_p3);

assign and_ln786_3119_fu_7742_p2 = (xor_ln786_2054_fu_7736_p2 & tmp_7283_fu_7714_p3);

assign and_ln786_3120_fu_7832_p2 = (xor_ln786_2055_fu_7826_p2 & tmp_7285_fu_7804_p3);

assign and_ln786_3121_fu_7920_p2 = (xor_ln786_2056_fu_7914_p2 & tmp_7287_fu_7893_p3);

assign and_ln786_3122_fu_8009_p2 = (xor_ln786_2057_fu_8003_p2 & tmp_7289_fu_7982_p3);

assign and_ln786_3123_fu_8098_p2 = (xor_ln786_2058_fu_8092_p2 & tmp_7291_fu_8071_p3);

assign and_ln786_3124_fu_8187_p2 = (xor_ln786_2059_fu_8181_p2 & tmp_7293_fu_8160_p3);

assign and_ln786_3125_fu_8276_p2 = (xor_ln786_2060_fu_8270_p2 & tmp_7295_fu_8249_p3);

assign and_ln786_3126_fu_8367_p2 = (xor_ln786_2061_fu_8361_p2 & tmp_7297_fu_8339_p3);

assign and_ln786_3127_fu_8458_p2 = (xor_ln786_2062_fu_8452_p2 & tmp_7299_fu_8430_p3);

assign and_ln786_3128_fu_8549_p2 = (xor_ln786_2063_fu_8543_p2 & tmp_7301_fu_8521_p3);

assign and_ln786_fu_3578_p0 = grp_fu_427_p2;

assign and_ln786_fu_3578_p2 = (sext_ln1118_512_fu_3536_p1 & and_ln786_fu_3578_p0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3 = ((data_V_data_V_empty_n == 1'b0) | ((1'd1 == and_ln360_reg_8671) & (io_acc_block_signal_op870 == 1'b0)));
end

always @ (*) begin
    ap_condition_158 = (~((data_V_data_V_empty_n == 1'b0) | ((1'd1 == and_ln360_reg_8671) & (io_acc_block_signal_op870 == 1'b0))) & (1'b1 == ap_CS_fsm_state3));
end

assign ap_ready = internal_ap_ready;

assign grp_fu_3428_p3 = grp_fu_442_p2[32'd24];

assign grp_fu_3436_p3 = grp_fu_432_p2[32'd23];

assign grp_fu_427_p2 = ($signed(grp_fu_427_p0) * $signed(grp_fu_427_p1));

assign grp_fu_428_p2 = ($signed(grp_fu_428_p0) * $signed(grp_fu_428_p1));

assign grp_fu_429_p2 = ($signed(grp_fu_429_p0) * $signed(grp_fu_429_p1));

assign grp_fu_430_p2 = ($signed({{1'b0}, {grp_fu_430_p0}}) * $signed(grp_fu_430_p1));

assign grp_fu_431_p2 = ($signed(grp_fu_431_p0) * $signed(grp_fu_431_p1));

assign grp_fu_432_p2 = ($signed({{1'b0}, {grp_fu_432_p0}}) * $signed(grp_fu_432_p1));

assign grp_fu_433_p2 = ($signed({{1'b0}, {grp_fu_433_p0}}) * $signed(grp_fu_433_p1));

assign grp_fu_438_p2 = ($signed(grp_fu_438_p0) * $signed(grp_fu_438_p1));

assign grp_fu_439_p2 = ($signed({{1'b0}, {grp_fu_439_p0}}) * $signed(grp_fu_439_p1));

assign grp_fu_440_p2 = ($signed({{1'b0}, {grp_fu_440_p0}}) * $signed(grp_fu_440_p1));

assign grp_fu_441_p2 = ($signed(grp_fu_441_p0) * $signed(grp_fu_441_p1));

assign grp_fu_442_p2 = ($signed(grp_fu_442_p0) * $signed(grp_fu_442_p1));

assign grp_fu_443_p2 = ($signed(grp_fu_443_p0) * $signed(grp_fu_443_p1));

assign grp_fu_445_p2 = ($signed({{1'b0}, {grp_fu_445_p0}}) * $signed(grp_fu_445_p1));

assign grp_fu_446_p2 = ($signed({{1'b0}, {grp_fu_446_p0}}) * $signed(grp_fu_446_p1));

assign grp_fu_447_p2 = ($signed(grp_fu_447_p0) * $signed(grp_fu_447_p1));

assign grp_fu_449_p2 = ($signed(grp_fu_449_p0) * $signed(grp_fu_449_p1));

assign grp_fu_450_p2 = ($signed(grp_fu_450_p0) * $signed(grp_fu_450_p1));

assign i_iw_fu_3450_p2 = (i_iw_0_i_reg_406 + 7'd1);

assign icmp_ln360_1_fu_3494_p2 = (($signed(tmp_7182_fu_3484_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln360_fu_3474_p2 = ((sX == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln384_fu_8598_p2 = ((pX_load_reg_8665 == 32'd65) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_3444_p2 = ((i_iw_0_i_reg_406 == 7'd66) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op870 = (res_V_data_7_V_full_n & res_V_data_6_V_full_n & res_V_data_5_V_full_n & res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign mul_ln1118_875_fu_437_p1 = sext_ln1118_510_fu_3524_p0;

assign mul_ln1118_875_fu_437_p2 = ($signed({{1'b0}, {26'd281}}) * $signed(mul_ln1118_875_fu_437_p1));

assign mul_ln1118_879_fu_436_p1 = sext_ln1118_521_fu_4338_p0;

assign mul_ln1118_879_fu_436_p2 = ($signed(25'd33554199) * $signed(mul_ln1118_879_fu_436_p1));

assign mul_ln731_2_fu_434_p1 = sext_ln1118_fu_3514_p1;

assign mul_ln731_2_fu_434_p2 = ($signed(27'd134216946) * $signed(mul_ln731_2_fu_434_p1));

assign mul_ln731_6_fu_448_p1 = sext_ln1118_fu_3514_p1;

assign mul_ln731_6_fu_448_p2 = ($signed({{1'b0}, {27'd562}}) * $signed(mul_ln731_6_fu_448_p1));

assign mul_ln731_7_fu_435_p1 = sext_ln1118_522_fu_4345_p0;

assign mul_ln731_7_fu_435_p2 = ($signed(27'd134217052) * $signed(mul_ln731_7_fu_435_p1));

assign mul_ln731_8_fu_444_p1 = sext_ln1116_25_fu_4332_p0;

assign mul_ln731_8_fu_444_p2 = ($signed(28'd268432500) * $signed(mul_ln731_8_fu_444_p1));

assign or_ln340_4075_fu_3622_p2 = (or_ln340_4146_fu_3616_p2 | and_ln785_fu_3572_p2);

assign or_ln340_4076_fu_3716_p2 = (and_ln786_3060_fu_3710_p2 | and_ln785_1017_fu_3684_p2);

assign or_ln340_4077_fu_3734_p2 = (or_ln340_4147_fu_3728_p2 | and_ln785_1017_fu_3684_p2);

assign or_ln340_4078_fu_3832_p2 = (and_ln786_3062_fu_3826_p2 | and_ln785_1018_fu_3800_p2);

assign or_ln340_4079_fu_3850_p2 = (or_ln340_4148_fu_3844_p2 | and_ln785_1018_fu_3800_p2);

assign or_ln340_4080_fu_3944_p2 = (and_ln786_3064_fu_3938_p2 | and_ln785_1019_fu_3912_p2);

assign or_ln340_4081_fu_3962_p2 = (or_ln340_4149_fu_3956_p2 | and_ln785_1019_fu_3912_p2);

assign or_ln340_4082_fu_4056_p2 = (and_ln786_3066_fu_4050_p2 | and_ln785_1020_fu_4024_p2);

assign or_ln340_4083_fu_4074_p2 = (or_ln340_4150_fu_4068_p2 | and_ln785_1020_fu_4024_p2);

assign or_ln340_4084_fu_4168_p2 = (and_ln786_3068_fu_4162_p2 | and_ln785_1021_fu_4136_p2);

assign or_ln340_4085_fu_4186_p2 = (or_ln340_4151_fu_4180_p2 | and_ln785_1021_fu_4136_p2);

assign or_ln340_4086_fu_4284_p2 = (and_ln786_3070_fu_4278_p2 | and_ln785_1022_fu_4252_p2);

assign or_ln340_4087_fu_4302_p2 = (or_ln340_4152_fu_4296_p2 | and_ln785_1022_fu_4252_p2);

assign or_ln340_4088_fu_5936_p2 = (and_ln786_3072_fu_5930_p2 | and_ln785_1023_fu_5904_p2);

assign or_ln340_4089_fu_5954_p2 = (or_ln340_4153_fu_5948_p2 | and_ln785_1023_fu_5904_p2);

assign or_ln340_4090_fu_4418_p2 = (and_ln786_3074_fu_4412_p2 | and_ln785_1024_fu_4386_p2);

assign or_ln340_4091_fu_4436_p2 = (or_ln340_4154_fu_4430_p2 | and_ln785_1024_fu_4386_p2);

assign or_ln340_4092_fu_4526_p2 = (and_ln786_3076_fu_4520_p2 | and_ln785_1025_fu_4494_p2);

assign or_ln340_4093_fu_4544_p2 = (or_ln340_4155_fu_4538_p2 | and_ln785_1025_fu_4494_p2);

assign or_ln340_4094_fu_4642_p2 = (and_ln786_3078_fu_4636_p2 | and_ln785_1026_fu_4610_p2);

assign or_ln340_4095_fu_4660_p2 = (or_ln340_4156_fu_4654_p2 | and_ln785_1026_fu_4610_p2);

assign or_ln340_4096_fu_4758_p2 = (and_ln786_3080_fu_4752_p2 | and_ln785_1027_fu_4726_p2);

assign or_ln340_4097_fu_4776_p2 = (or_ln340_4157_fu_4770_p2 | and_ln785_1027_fu_4726_p2);

assign or_ln340_4098_fu_4866_p2 = (and_ln786_3082_fu_4860_p2 | and_ln785_1028_fu_4834_p2);

assign or_ln340_4099_fu_4884_p2 = (or_ln340_4158_fu_4878_p2 | and_ln785_1028_fu_4834_p2);

assign or_ln340_4100_fu_6044_p2 = (and_ln786_3084_fu_6038_p2 | and_ln785_1029_fu_6012_p2);

assign or_ln340_4101_fu_6062_p2 = (or_ln340_4159_fu_6056_p2 | and_ln785_1029_fu_6012_p2);

assign or_ln340_4102_fu_6160_p2 = (and_ln786_3086_fu_6154_p2 | and_ln785_1030_fu_6128_p2);

assign or_ln340_4103_fu_6178_p2 = (or_ln340_4160_fu_6172_p2 | and_ln785_1030_fu_6128_p2);

assign or_ln340_4104_fu_6268_p2 = (and_ln786_3088_fu_6262_p2 | and_ln785_1031_fu_6236_p2);

assign or_ln340_4105_fu_6286_p2 = (or_ln340_4161_fu_6280_p2 | and_ln785_1031_fu_6236_p2);

assign or_ln340_4106_fu_6492_p2 = (and_ln786_3090_fu_6486_p2 | and_ln785_1032_fu_6460_p2);

assign or_ln340_4107_fu_6510_p2 = (or_ln340_4162_fu_6504_p2 | and_ln785_1032_fu_6460_p2);

assign or_ln340_4108_fu_6600_p2 = (and_ln786_3092_fu_6594_p2 | and_ln785_1033_fu_6568_p2);

assign or_ln340_4109_fu_6618_p2 = (or_ln340_4163_fu_6612_p2 | and_ln785_1033_fu_6568_p2);

assign or_ln340_4110_fu_6752_p2 = (and_ln786_3094_fu_6746_p2 | and_ln785_1034_fu_6720_p2);

assign or_ln340_4111_fu_6770_p2 = (or_ln340_4164_fu_6764_p2 | and_ln785_1034_fu_6720_p2);

assign or_ln340_4112_fu_6864_p2 = (and_ln786_3096_fu_6858_p2 | and_ln785_1035_fu_6832_p2);

assign or_ln340_4113_fu_6882_p2 = (or_ln340_4165_fu_6876_p2 | and_ln785_1035_fu_6832_p2);

assign or_ln340_4114_fu_6972_p2 = (and_ln786_3098_fu_6966_p2 | and_ln785_1036_fu_6940_p2);

assign or_ln340_4115_fu_6990_p2 = (or_ln340_4166_fu_6984_p2 | and_ln785_1036_fu_6940_p2);

assign or_ln340_4116_fu_7080_p2 = (and_ln786_3100_fu_7074_p2 | and_ln785_1037_fu_7048_p2);

assign or_ln340_4117_fu_7098_p2 = (or_ln340_4167_fu_7092_p2 | and_ln785_1037_fu_7048_p2);

assign or_ln340_4118_fu_7196_p2 = (and_ln786_3102_fu_7190_p2 | and_ln785_1038_fu_7164_p2);

assign or_ln340_4119_fu_7214_p2 = (or_ln340_4168_fu_7208_p2 | and_ln785_1038_fu_7164_p2);

assign or_ln340_4120_fu_7308_p2 = (and_ln786_3104_fu_7302_p2 | and_ln785_1039_fu_7276_p2);

assign or_ln340_4121_fu_7326_p2 = (or_ln340_4169_fu_7320_p2 | and_ln785_1039_fu_7276_p2);

assign or_ln340_4122_fu_4970_p2 = (xor_ln340_1047_fu_4964_p2 | tmp_7256_fu_4938_p3);

assign or_ln340_4123_fu_5056_p2 = (xor_ln340_1048_fu_5050_p2 | tmp_7258_fu_5024_p3);

assign or_ln340_4124_fu_5142_p2 = (xor_ln340_1049_fu_5136_p2 | tmp_7260_fu_5110_p3);

assign or_ln340_4125_fu_5228_p2 = (xor_ln340_1050_fu_5222_p2 | tmp_7262_fu_5196_p3);

assign or_ln340_4126_fu_5314_p2 = (xor_ln340_1051_fu_5308_p2 | tmp_7264_fu_5282_p3);

assign or_ln340_4127_fu_7410_p2 = (xor_ln340_1052_fu_7404_p2 | tmp_7266_fu_7378_p3);

assign or_ln340_4128_fu_7494_p2 = (xor_ln340_1053_fu_7488_p2 | tmp_7268_fu_7462_p3);

assign or_ln340_4129_fu_7580_p2 = (xor_ln340_1054_fu_7574_p2 | tmp_7270_fu_7548_p3);

assign or_ln340_4130_fu_5404_p2 = (xor_ln340_1055_fu_5398_p2 | tmp_7272_fu_5372_p3);

assign or_ln340_4131_fu_5494_p2 = (xor_ln340_1056_fu_5488_p2 | tmp_7274_fu_5462_p3);

assign or_ln340_4132_fu_5584_p2 = (xor_ln340_1057_fu_5578_p2 | tmp_7276_fu_5552_p3);

assign or_ln340_4133_fu_5674_p2 = (xor_ln340_1058_fu_5668_p2 | tmp_7278_fu_5642_p3);

assign or_ln340_4134_fu_5764_p2 = (xor_ln340_1059_fu_5758_p2 | tmp_7280_fu_5732_p3);

assign or_ln340_4135_fu_7670_p2 = (xor_ln340_1060_fu_7664_p2 | tmp_7282_fu_7638_p3);

assign or_ln340_4136_fu_7760_p2 = (xor_ln340_1061_fu_7754_p2 | tmp_7284_fu_7728_p3);

assign or_ln340_4137_fu_7850_p2 = (xor_ln340_1062_fu_7844_p2 | tmp_7286_fu_7818_p3);

assign or_ln340_4138_fu_7938_p2 = (xor_ln340_1063_fu_7932_p2 | tmp_7288_fu_7906_p3);

assign or_ln340_4139_fu_8027_p2 = (xor_ln340_1064_fu_8021_p2 | tmp_7290_fu_7995_p3);

assign or_ln340_4140_fu_8116_p2 = (xor_ln340_1065_fu_8110_p2 | tmp_7292_fu_8084_p3);

assign or_ln340_4141_fu_8205_p2 = (xor_ln340_1066_fu_8199_p2 | tmp_7294_fu_8173_p3);

assign or_ln340_4142_fu_8294_p2 = (xor_ln340_1067_fu_8288_p2 | tmp_7296_fu_8262_p3);

assign or_ln340_4143_fu_8385_p2 = (xor_ln340_1068_fu_8379_p2 | tmp_7298_fu_8353_p3);

assign or_ln340_4144_fu_8476_p2 = (xor_ln340_1069_fu_8470_p2 | tmp_7300_fu_8444_p3);

assign or_ln340_4145_fu_8567_p2 = (xor_ln340_1070_fu_8561_p2 | tmp_7302_fu_8535_p3);

assign or_ln340_4146_fu_3616_p2 = (xor_ln340_2072_fu_3610_p2 | tmp_7185_fu_3584_p3);

assign or_ln340_4147_fu_3728_p2 = (xor_ln340_fu_3722_p2 | tmp_7188_fu_3696_p3);

assign or_ln340_4148_fu_3844_p2 = (xor_ln340_2073_fu_3838_p2 | tmp_7191_fu_3812_p3);

assign or_ln340_4149_fu_3956_p2 = (xor_ln340_2074_fu_3950_p2 | tmp_7194_fu_3924_p3);

assign or_ln340_4150_fu_4068_p2 = (xor_ln340_2075_fu_4062_p2 | tmp_7197_fu_4036_p3);

assign or_ln340_4151_fu_4180_p2 = (xor_ln340_2076_fu_4174_p2 | tmp_7200_fu_4148_p3);

assign or_ln340_4152_fu_4296_p2 = (xor_ln340_2077_fu_4290_p2 | tmp_7203_fu_4264_p3);

assign or_ln340_4153_fu_5948_p2 = (xor_ln340_2078_fu_5942_p2 | tmp_7206_fu_5916_p3);

assign or_ln340_4154_fu_4430_p2 = (xor_ln340_2079_fu_4424_p2 | tmp_7209_fu_4398_p3);

assign or_ln340_4155_fu_4538_p2 = (xor_ln340_2080_fu_4532_p2 | tmp_7212_fu_4506_p3);

assign or_ln340_4156_fu_4654_p2 = (xor_ln340_2081_fu_4648_p2 | tmp_7215_fu_4622_p3);

assign or_ln340_4157_fu_4770_p2 = (xor_ln340_2082_fu_4764_p2 | tmp_7218_fu_4738_p3);

assign or_ln340_4158_fu_4878_p2 = (xor_ln340_2083_fu_4872_p2 | tmp_7221_fu_4846_p3);

assign or_ln340_4159_fu_6056_p2 = (xor_ln340_2084_fu_6050_p2 | tmp_7224_fu_6024_p3);

assign or_ln340_4160_fu_6172_p2 = (xor_ln340_2085_fu_6166_p2 | tmp_7227_fu_6140_p3);

assign or_ln340_4161_fu_6280_p2 = (xor_ln340_2086_fu_6274_p2 | tmp_7230_fu_6248_p3);

assign or_ln340_4162_fu_6504_p2 = (xor_ln340_2087_fu_6498_p2 | tmp_7233_fu_6472_p3);

assign or_ln340_4163_fu_6612_p2 = (xor_ln340_2088_fu_6606_p2 | tmp_7236_fu_6580_p3);

assign or_ln340_4164_fu_6764_p2 = (xor_ln340_2089_fu_6758_p2 | tmp_7239_fu_6732_p3);

assign or_ln340_4165_fu_6876_p2 = (xor_ln340_2090_fu_6870_p2 | tmp_7242_fu_6844_p3);

assign or_ln340_4166_fu_6984_p2 = (xor_ln340_2091_fu_6978_p2 | tmp_7245_fu_6952_p3);

assign or_ln340_4167_fu_7092_p2 = (xor_ln340_2092_fu_7086_p2 | tmp_7248_fu_7060_p3);

assign or_ln340_4168_fu_7208_p2 = (xor_ln340_2093_fu_7202_p2 | tmp_7251_fu_7176_p3);

assign or_ln340_4169_fu_7320_p2 = (xor_ln340_2094_fu_7314_p2 | tmp_7254_fu_7288_p3);

assign or_ln340_fu_3604_p2 = (and_ln786_3058_fu_3598_p2 | and_ln785_fu_3572_p2);

assign or_ln785_1017_fu_3664_p2 = (sext_ln1118_513_fu_3652_p1 | grp_fu_430_p2);

assign or_ln785_1018_fu_3780_p2 = (sext_ln1118_514_fu_3764_p1 | mul_ln731_2_fu_434_p2);

assign or_ln785_1019_fu_3892_p2 = (sext_ln1118_515_fu_3880_p1 | grp_fu_443_p2);

assign or_ln785_1020_fu_4004_p2 = (sext_ln1118_516_fu_3992_p1 | grp_fu_440_p2);

assign or_ln785_1021_fu_4116_p2 = (sext_ln1118_517_fu_4104_p1 | grp_fu_429_p2);

assign or_ln785_1022_fu_4232_p2 = (sext_ln1118_518_fu_4216_p1 | mul_ln731_6_fu_448_p2);

assign or_ln785_1023_fu_5884_p2 = (sub_ln731_1_fu_5874_p2 | sext_ln700_fu_5834_p1);

assign or_ln785_1024_fu_4366_p2 = (sext_ln1118_524_fu_4358_p1 | mul_ln731_7_fu_435_p2);

assign or_ln785_1025_fu_4474_p2 = (mul_ln731_8_fu_444_p2 | grp_fu_428_p2);

assign or_ln785_1026_fu_4590_p2 = (sext_ln1118_525_fu_4574_p1 | grp_fu_439_p2);

assign or_ln785_1027_fu_4706_p2 = (sext_ln1118_526_fu_4690_p1 | grp_fu_431_p2);

assign or_ln785_1028_fu_4814_p0 = grp_fu_446_p2;

assign or_ln785_1028_fu_4814_p2 = (sext_ln1118_527_fu_4806_p1 | or_ln785_1028_fu_4814_p0);

assign or_ln785_1029_fu_5992_p0 = grp_fu_441_p2;

assign or_ln785_1029_fu_5992_p2 = (or_ln785_1029_fu_5992_p0 | grp_fu_430_p2);

assign or_ln785_1030_fu_6108_p2 = (sext_ln1118_528_fu_6092_p1 | grp_fu_450_p2);

assign or_ln785_1031_fu_6216_p0 = grp_fu_428_p2;

assign or_ln785_1031_fu_6216_p2 = (sext_ln1118_529_fu_6208_p1 | or_ln785_1031_fu_6216_p0);

assign or_ln785_1032_fu_6440_p2 = (sub_ln731_3_fu_6430_p2 | sext_ln700_4_fu_6384_p1);

assign or_ln785_1033_fu_6548_p0 = grp_fu_427_p2;

assign or_ln785_1033_fu_6548_p1 = grp_fu_433_p2;

assign or_ln785_1033_fu_6548_p2 = (or_ln785_1033_fu_6548_p1 | or_ln785_1033_fu_6548_p0);

assign or_ln785_1034_fu_6700_p2 = (sext_ln1118_537_fu_6666_p1 | add_ln731_fu_6690_p2);

assign or_ln785_1035_fu_6812_p2 = (sext_ln1118_538_fu_6800_p1 | grp_fu_440_p2);

assign or_ln785_1036_fu_6920_p0 = grp_fu_449_p2;

assign or_ln785_1036_fu_6920_p2 = (or_ln785_1036_fu_6920_p0 | grp_fu_429_p2);

assign or_ln785_1037_fu_7028_p2 = (sext_ln1118_539_fu_7020_p1 | grp_fu_431_p2);

assign or_ln785_1038_fu_7144_p2 = (sext_ln1118_540_fu_7128_p1 | grp_fu_439_p2);

assign or_ln785_1039_fu_7256_p2 = (sext_ln1118_541_fu_7244_p1 | grp_fu_443_p2);

assign or_ln785_fu_3552_p0 = grp_fu_427_p2;

assign or_ln785_fu_3552_p2 = (sext_ln1118_512_fu_3536_p1 | or_ln785_fu_3552_p0);

assign res_V_data_0_V_din = ((or_ln340_4138_fu_7938_p2[0:0] === 1'b1) ? select_ln340_2087_fu_7944_p3 : acc_0_V_5_fu_7952_p3);

assign res_V_data_1_V_din = ((or_ln340_4139_fu_8027_p2[0:0] === 1'b1) ? select_ln340_2088_fu_8033_p3 : acc_1_V_5_fu_8041_p3);

assign res_V_data_2_V_din = ((or_ln340_4140_fu_8116_p2[0:0] === 1'b1) ? select_ln340_2089_fu_8122_p3 : acc_2_V_5_fu_8130_p3);

assign res_V_data_3_V_din = ((or_ln340_4141_fu_8205_p2[0:0] === 1'b1) ? select_ln340_2090_fu_8211_p3 : acc_3_V_5_fu_8219_p3);

assign res_V_data_4_V_din = ((or_ln340_4142_fu_8294_p2[0:0] === 1'b1) ? select_ln340_2091_fu_8300_p3 : acc_4_V_5_fu_8308_p3);

assign res_V_data_5_V_din = ((or_ln340_4143_fu_8385_p2[0:0] === 1'b1) ? select_ln340_2092_fu_8391_p3 : acc_5_V_5_fu_8399_p3);

assign res_V_data_6_V_din = ((or_ln340_4144_fu_8476_p2[0:0] === 1'b1) ? select_ln340_2093_fu_8482_p3 : acc_6_V_5_fu_8490_p3);

assign res_V_data_7_V_din = ((or_ln340_4145_fu_8567_p2[0:0] === 1'b1) ? select_ln340_2094_fu_8573_p3 : acc_7_V_5_fu_8581_p3);

assign select_ln340_2048_fu_3740_p3 = ((or_ln340_4076_fu_3716_p2[0:0] === 1'b1) ? 28'd134217727 : grp_fu_430_p2);

assign select_ln340_2049_fu_3856_p3 = ((or_ln340_4078_fu_3832_p2[0:0] === 1'b1) ? 28'd134217727 : sext_ln731_1_fu_3776_p1);

assign select_ln340_2050_fu_3968_p3 = ((or_ln340_4080_fu_3944_p2[0:0] === 1'b1) ? 28'd134217727 : grp_fu_443_p2);

assign select_ln340_2051_fu_4080_p3 = ((or_ln340_4082_fu_4056_p2[0:0] === 1'b1) ? 28'd134217727 : grp_fu_440_p2);

assign select_ln340_2052_fu_4192_p3 = ((or_ln340_4084_fu_4168_p2[0:0] === 1'b1) ? 28'd134217727 : grp_fu_429_p2);

assign select_ln340_2053_fu_4308_p3 = ((or_ln340_4086_fu_4284_p2[0:0] === 1'b1) ? 28'd134217727 : sext_ln731_2_fu_4228_p1);

assign select_ln340_2054_fu_5960_p3 = ((or_ln340_4088_fu_5936_p2[0:0] === 1'b1) ? 28'd134217727 : sext_ln731_5_fu_5880_p1);

assign select_ln340_2055_fu_4442_p3 = ((or_ln340_4090_fu_4418_p2[0:0] === 1'b1) ? 28'd134217727 : sext_ln731_6_fu_4362_p1);

assign select_ln340_2056_fu_4550_p3 = ((or_ln340_4092_fu_4526_p2[0:0] === 1'b1) ? 28'd134217727 : mul_ln731_8_fu_444_p2);

assign select_ln340_2057_fu_4666_p3 = ((or_ln340_4094_fu_4642_p2[0:0] === 1'b1) ? 28'd134217727 : sext_ln731_7_fu_4586_p1);

assign select_ln340_2058_fu_4782_p3 = ((or_ln340_4096_fu_4758_p2[0:0] === 1'b1) ? 28'd134217727 : sext_ln731_8_fu_4702_p1);

assign select_ln340_2059_fu_4890_p3 = ((or_ln340_4098_fu_4866_p2[0:0] === 1'b1) ? 28'd134217727 : sext_ln731_9_fu_4810_p1);

assign select_ln340_2060_fu_6068_p2 = grp_fu_441_p2;

assign select_ln340_2060_fu_6068_p3 = ((or_ln340_4100_fu_6044_p2[0:0] === 1'b1) ? 28'd134217727 : select_ln340_2060_fu_6068_p2);

assign select_ln340_2061_fu_6184_p3 = ((or_ln340_4102_fu_6160_p2[0:0] === 1'b1) ? 28'd134217727 : sext_ln731_10_fu_6104_p1);

assign select_ln340_2062_fu_6292_p3 = ((or_ln340_4104_fu_6268_p2[0:0] === 1'b1) ? 28'd134217727 : sext_ln731_11_fu_6212_p1);

assign select_ln340_2063_fu_6516_p3 = ((or_ln340_4106_fu_6492_p2[0:0] === 1'b1) ? 28'd134217727 : sext_ln731_15_fu_6436_p1);

assign select_ln340_2064_fu_6624_p2 = grp_fu_427_p2;

assign select_ln340_2064_fu_6624_p3 = ((or_ln340_4108_fu_6600_p2[0:0] === 1'b1) ? 28'd134217727 : select_ln340_2064_fu_6624_p2);

assign select_ln340_2065_fu_6776_p3 = ((or_ln340_4110_fu_6752_p2[0:0] === 1'b1) ? 28'd134217727 : sext_ln731_17_fu_6696_p1);

assign select_ln340_2066_fu_6888_p3 = ((or_ln340_4112_fu_6864_p2[0:0] === 1'b1) ? 28'd134217727 : grp_fu_440_p2);

assign select_ln340_2067_fu_6996_p2 = grp_fu_449_p2;

assign select_ln340_2067_fu_6996_p3 = ((or_ln340_4114_fu_6972_p2[0:0] === 1'b1) ? 28'd134217727 : select_ln340_2067_fu_6996_p2);

assign select_ln340_2068_fu_7104_p3 = ((or_ln340_4116_fu_7080_p2[0:0] === 1'b1) ? 28'd134217727 : sext_ln731_18_fu_7024_p1);

assign select_ln340_2069_fu_7220_p3 = ((or_ln340_4118_fu_7196_p2[0:0] === 1'b1) ? 28'd134217727 : sext_ln731_19_fu_7140_p1);

assign select_ln340_2070_fu_7332_p3 = ((or_ln340_4120_fu_7308_p2[0:0] === 1'b1) ? 28'd134217727 : grp_fu_443_p2);

assign select_ln340_2071_fu_4976_p3 = ((xor_ln340_2048_fu_4958_p2[0:0] === 1'b1) ? 28'd134217727 : acc_0_V_fu_4932_p2);

assign select_ln340_2072_fu_5062_p3 = ((xor_ln340_2049_fu_5044_p2[0:0] === 1'b1) ? 28'd134217727 : acc_1_V_fu_5018_p2);

assign select_ln340_2073_fu_5148_p3 = ((xor_ln340_2050_fu_5130_p2[0:0] === 1'b1) ? 28'd134217727 : acc_2_V_fu_5104_p2);

assign select_ln340_2074_fu_5234_p3 = ((xor_ln340_2051_fu_5216_p2[0:0] === 1'b1) ? 28'd134217727 : acc_3_V_fu_5190_p2);

assign select_ln340_2075_fu_5320_p3 = ((xor_ln340_2052_fu_5302_p2[0:0] === 1'b1) ? 28'd134217727 : acc_4_V_fu_5276_p2);

assign select_ln340_2076_fu_7416_p3 = ((xor_ln340_2053_fu_7398_p2[0:0] === 1'b1) ? 28'd134217727 : acc_5_V_fu_7373_p2);

assign select_ln340_2077_fu_7500_p3 = ((xor_ln340_2054_fu_7482_p2[0:0] === 1'b1) ? 28'd134217727 : acc_6_V_fu_7457_p2);

assign select_ln340_2078_fu_7586_p3 = ((xor_ln340_2055_fu_7568_p2[0:0] === 1'b1) ? 28'd134217727 : acc_7_V_fu_7542_p2);

assign select_ln340_2079_fu_5410_p3 = ((xor_ln340_2056_fu_5392_p2[0:0] === 1'b1) ? 28'd134217727 : acc_0_V_2_fu_5366_p2);

assign select_ln340_2080_fu_5500_p3 = ((xor_ln340_2057_fu_5482_p2[0:0] === 1'b1) ? 28'd134217727 : acc_1_V_2_fu_5456_p2);

assign select_ln340_2081_fu_5590_p3 = ((xor_ln340_2058_fu_5572_p2[0:0] === 1'b1) ? 28'd134217727 : acc_2_V_2_fu_5546_p2);

assign select_ln340_2082_fu_5680_p3 = ((xor_ln340_2059_fu_5662_p2[0:0] === 1'b1) ? 28'd134217727 : acc_3_V_2_fu_5636_p2);

assign select_ln340_2083_fu_5770_p3 = ((xor_ln340_2060_fu_5752_p2[0:0] === 1'b1) ? 28'd134217727 : acc_4_V_2_fu_5726_p2);

assign select_ln340_2084_fu_7676_p3 = ((xor_ln340_2061_fu_7658_p2[0:0] === 1'b1) ? 28'd134217727 : acc_5_V_2_fu_7632_p2);

assign select_ln340_2085_fu_7766_p3 = ((xor_ln340_2062_fu_7748_p2[0:0] === 1'b1) ? 28'd134217727 : acc_6_V_2_fu_7722_p2);

assign select_ln340_2086_fu_7856_p3 = ((xor_ln340_2063_fu_7838_p2[0:0] === 1'b1) ? 28'd134217727 : acc_7_V_2_fu_7812_p2);

assign select_ln340_2087_fu_7944_p3 = ((xor_ln340_2064_fu_7926_p2[0:0] === 1'b1) ? 28'd134217727 : acc_0_V_4_fu_7901_p2);

assign select_ln340_2088_fu_8033_p3 = ((xor_ln340_2065_fu_8015_p2[0:0] === 1'b1) ? 28'd134217727 : acc_1_V_4_fu_7990_p2);

assign select_ln340_2089_fu_8122_p3 = ((xor_ln340_2066_fu_8104_p2[0:0] === 1'b1) ? 28'd134217727 : acc_2_V_4_fu_8079_p2);

assign select_ln340_2090_fu_8211_p3 = ((xor_ln340_2067_fu_8193_p2[0:0] === 1'b1) ? 28'd134217727 : acc_3_V_4_fu_8168_p2);

assign select_ln340_2091_fu_8300_p3 = ((xor_ln340_2068_fu_8282_p2[0:0] === 1'b1) ? 28'd134217727 : acc_4_V_4_fu_8257_p2);

assign select_ln340_2092_fu_8391_p3 = ((xor_ln340_2069_fu_8373_p2[0:0] === 1'b1) ? 28'd134217727 : acc_5_V_4_fu_8347_p2);

assign select_ln340_2093_fu_8482_p3 = ((xor_ln340_2070_fu_8464_p2[0:0] === 1'b1) ? 28'd134217727 : acc_6_V_4_fu_8438_p2);

assign select_ln340_2094_fu_8573_p3 = ((xor_ln340_2071_fu_8555_p2[0:0] === 1'b1) ? 28'd134217727 : acc_7_V_4_fu_8529_p2);

assign select_ln340_4082_fu_3644_p3 = ((or_ln340_4075_fu_3622_p2[0:0] === 1'b1) ? select_ln340_fu_3628_p3 : select_ln388_fu_3636_p3);

assign select_ln340_4083_fu_3756_p3 = ((or_ln340_4077_fu_3734_p2[0:0] === 1'b1) ? select_ln340_2048_fu_3740_p3 : select_ln388_2041_fu_3748_p3);

assign select_ln340_4084_fu_3872_p3 = ((or_ln340_4079_fu_3850_p2[0:0] === 1'b1) ? select_ln340_2049_fu_3856_p3 : select_ln388_2042_fu_3864_p3);

assign select_ln340_4085_fu_3984_p3 = ((or_ln340_4081_fu_3962_p2[0:0] === 1'b1) ? select_ln340_2050_fu_3968_p3 : select_ln388_2043_fu_3976_p3);

assign select_ln340_4086_fu_4096_p3 = ((or_ln340_4083_fu_4074_p2[0:0] === 1'b1) ? select_ln340_2051_fu_4080_p3 : select_ln388_2044_fu_4088_p3);

assign select_ln340_4087_fu_4208_p3 = ((or_ln340_4085_fu_4186_p2[0:0] === 1'b1) ? select_ln340_2052_fu_4192_p3 : select_ln388_2045_fu_4200_p3);

assign select_ln340_4088_fu_4324_p3 = ((or_ln340_4087_fu_4302_p2[0:0] === 1'b1) ? select_ln340_2053_fu_4308_p3 : select_ln388_2046_fu_4316_p3);

assign select_ln340_4089_fu_5976_p3 = ((or_ln340_4089_fu_5954_p2[0:0] === 1'b1) ? select_ln340_2054_fu_5960_p3 : select_ln388_2047_fu_5968_p3);

assign select_ln340_4090_fu_4458_p3 = ((or_ln340_4091_fu_4436_p2[0:0] === 1'b1) ? select_ln340_2055_fu_4442_p3 : select_ln388_2048_fu_4450_p3);

assign select_ln340_4091_fu_4566_p3 = ((or_ln340_4093_fu_4544_p2[0:0] === 1'b1) ? select_ln340_2056_fu_4550_p3 : select_ln388_2049_fu_4558_p3);

assign select_ln340_4092_fu_4682_p3 = ((or_ln340_4095_fu_4660_p2[0:0] === 1'b1) ? select_ln340_2057_fu_4666_p3 : select_ln388_2050_fu_4674_p3);

assign select_ln340_4093_fu_4798_p3 = ((or_ln340_4097_fu_4776_p2[0:0] === 1'b1) ? select_ln340_2058_fu_4782_p3 : select_ln388_2051_fu_4790_p3);

assign select_ln340_4094_fu_4906_p3 = ((or_ln340_4099_fu_4884_p2[0:0] === 1'b1) ? select_ln340_2059_fu_4890_p3 : select_ln388_2052_fu_4898_p3);

assign select_ln340_4095_fu_6084_p3 = ((or_ln340_4101_fu_6062_p2[0:0] === 1'b1) ? select_ln340_2060_fu_6068_p3 : select_ln388_2053_fu_6076_p3);

assign select_ln340_4096_fu_6200_p3 = ((or_ln340_4103_fu_6178_p2[0:0] === 1'b1) ? select_ln340_2061_fu_6184_p3 : select_ln388_2054_fu_6192_p3);

assign select_ln340_4097_fu_6308_p3 = ((or_ln340_4105_fu_6286_p2[0:0] === 1'b1) ? select_ln340_2062_fu_6292_p3 : select_ln388_2055_fu_6300_p3);

assign select_ln340_4098_fu_6532_p3 = ((or_ln340_4107_fu_6510_p2[0:0] === 1'b1) ? select_ln340_2063_fu_6516_p3 : select_ln388_2056_fu_6524_p3);

assign select_ln340_4099_fu_6640_p3 = ((or_ln340_4109_fu_6618_p2[0:0] === 1'b1) ? select_ln340_2064_fu_6624_p3 : select_ln388_2057_fu_6632_p3);

assign select_ln340_4100_fu_6792_p3 = ((or_ln340_4111_fu_6770_p2[0:0] === 1'b1) ? select_ln340_2065_fu_6776_p3 : select_ln388_2058_fu_6784_p3);

assign select_ln340_4101_fu_6904_p3 = ((or_ln340_4113_fu_6882_p2[0:0] === 1'b1) ? select_ln340_2066_fu_6888_p3 : select_ln388_2059_fu_6896_p3);

assign select_ln340_4102_fu_7012_p3 = ((or_ln340_4115_fu_6990_p2[0:0] === 1'b1) ? select_ln340_2067_fu_6996_p3 : select_ln388_2060_fu_7004_p3);

assign select_ln340_4103_fu_7120_p3 = ((or_ln340_4117_fu_7098_p2[0:0] === 1'b1) ? select_ln340_2068_fu_7104_p3 : select_ln388_2061_fu_7112_p3);

assign select_ln340_4104_fu_7236_p3 = ((or_ln340_4119_fu_7214_p2[0:0] === 1'b1) ? select_ln340_2069_fu_7220_p3 : select_ln388_2062_fu_7228_p3);

assign select_ln340_4105_fu_7348_p3 = ((or_ln340_4121_fu_7326_p2[0:0] === 1'b1) ? select_ln340_2070_fu_7332_p3 : select_ln388_2063_fu_7340_p3);

assign select_ln340_4106_fu_4992_p3 = ((or_ln340_4122_fu_4970_p2[0:0] === 1'b1) ? select_ln340_2071_fu_4976_p3 : acc_0_V_1_fu_4984_p3);

assign select_ln340_4107_fu_5078_p3 = ((or_ln340_4123_fu_5056_p2[0:0] === 1'b1) ? select_ln340_2072_fu_5062_p3 : acc_1_V_1_fu_5070_p3);

assign select_ln340_4108_fu_5164_p3 = ((or_ln340_4124_fu_5142_p2[0:0] === 1'b1) ? select_ln340_2073_fu_5148_p3 : acc_2_V_1_fu_5156_p3);

assign select_ln340_4109_fu_5250_p3 = ((or_ln340_4125_fu_5228_p2[0:0] === 1'b1) ? select_ln340_2074_fu_5234_p3 : acc_3_V_1_fu_5242_p3);

assign select_ln340_4110_fu_5336_p3 = ((or_ln340_4126_fu_5314_p2[0:0] === 1'b1) ? select_ln340_2075_fu_5320_p3 : acc_4_V_1_fu_5328_p3);

assign select_ln340_4111_fu_7432_p3 = ((or_ln340_4127_fu_7410_p2[0:0] === 1'b1) ? select_ln340_2076_fu_7416_p3 : acc_5_V_1_fu_7424_p3);

assign select_ln340_4112_fu_7516_p3 = ((or_ln340_4128_fu_7494_p2[0:0] === 1'b1) ? select_ln340_2077_fu_7500_p3 : acc_6_V_1_fu_7508_p3);

assign select_ln340_4113_fu_7602_p3 = ((or_ln340_4129_fu_7580_p2[0:0] === 1'b1) ? select_ln340_2078_fu_7586_p3 : acc_7_V_1_fu_7594_p3);

assign select_ln340_4114_fu_5426_p3 = ((or_ln340_4130_fu_5404_p2[0:0] === 1'b1) ? select_ln340_2079_fu_5410_p3 : acc_0_V_3_fu_5418_p3);

assign select_ln340_4115_fu_5516_p3 = ((or_ln340_4131_fu_5494_p2[0:0] === 1'b1) ? select_ln340_2080_fu_5500_p3 : acc_1_V_3_fu_5508_p3);

assign select_ln340_4116_fu_5606_p3 = ((or_ln340_4132_fu_5584_p2[0:0] === 1'b1) ? select_ln340_2081_fu_5590_p3 : acc_2_V_3_fu_5598_p3);

assign select_ln340_4117_fu_5696_p3 = ((or_ln340_4133_fu_5674_p2[0:0] === 1'b1) ? select_ln340_2082_fu_5680_p3 : acc_3_V_3_fu_5688_p3);

assign select_ln340_4118_fu_5786_p3 = ((or_ln340_4134_fu_5764_p2[0:0] === 1'b1) ? select_ln340_2083_fu_5770_p3 : acc_4_V_3_fu_5778_p3);

assign select_ln340_4119_fu_7692_p3 = ((or_ln340_4135_fu_7670_p2[0:0] === 1'b1) ? select_ln340_2084_fu_7676_p3 : acc_5_V_3_fu_7684_p3);

assign select_ln340_4120_fu_7782_p3 = ((or_ln340_4136_fu_7760_p2[0:0] === 1'b1) ? select_ln340_2085_fu_7766_p3 : acc_6_V_3_fu_7774_p3);

assign select_ln340_4121_fu_7872_p3 = ((or_ln340_4137_fu_7850_p2[0:0] === 1'b1) ? select_ln340_2086_fu_7856_p3 : acc_7_V_3_fu_7864_p3);

assign select_ln340_fu_3628_p3 = ((or_ln340_fu_3604_p2[0:0] === 1'b1) ? 28'd134217727 : sext_ln731_fu_3548_p1);

assign select_ln388_2041_fu_3748_p3 = ((and_ln786_3060_fu_3710_p2[0:0] === 1'b1) ? 28'd134217728 : grp_fu_430_p2);

assign select_ln388_2042_fu_3864_p3 = ((and_ln786_3062_fu_3826_p2[0:0] === 1'b1) ? 28'd134217728 : sext_ln731_1_fu_3776_p1);

assign select_ln388_2043_fu_3976_p3 = ((and_ln786_3064_fu_3938_p2[0:0] === 1'b1) ? 28'd134217728 : grp_fu_443_p2);

assign select_ln388_2044_fu_4088_p3 = ((and_ln786_3066_fu_4050_p2[0:0] === 1'b1) ? 28'd134217728 : grp_fu_440_p2);

assign select_ln388_2045_fu_4200_p3 = ((and_ln786_3068_fu_4162_p2[0:0] === 1'b1) ? 28'd134217728 : grp_fu_429_p2);

assign select_ln388_2046_fu_4316_p3 = ((and_ln786_3070_fu_4278_p2[0:0] === 1'b1) ? 28'd134217728 : sext_ln731_2_fu_4228_p1);

assign select_ln388_2047_fu_5968_p3 = ((and_ln786_3072_fu_5930_p2[0:0] === 1'b1) ? 28'd134217728 : sext_ln731_5_fu_5880_p1);

assign select_ln388_2048_fu_4450_p3 = ((and_ln786_3074_fu_4412_p2[0:0] === 1'b1) ? 28'd134217728 : sext_ln731_6_fu_4362_p1);

assign select_ln388_2049_fu_4558_p3 = ((and_ln786_3076_fu_4520_p2[0:0] === 1'b1) ? 28'd134217728 : mul_ln731_8_fu_444_p2);

assign select_ln388_2050_fu_4674_p3 = ((and_ln786_3078_fu_4636_p2[0:0] === 1'b1) ? 28'd134217728 : sext_ln731_7_fu_4586_p1);

assign select_ln388_2051_fu_4790_p3 = ((and_ln786_3080_fu_4752_p2[0:0] === 1'b1) ? 28'd134217728 : sext_ln731_8_fu_4702_p1);

assign select_ln388_2052_fu_4898_p3 = ((and_ln786_3082_fu_4860_p2[0:0] === 1'b1) ? 28'd134217728 : sext_ln731_9_fu_4810_p1);

assign select_ln388_2053_fu_6076_p2 = grp_fu_441_p2;

assign select_ln388_2053_fu_6076_p3 = ((and_ln786_3084_fu_6038_p2[0:0] === 1'b1) ? 28'd134217728 : select_ln388_2053_fu_6076_p2);

assign select_ln388_2054_fu_6192_p3 = ((and_ln786_3086_fu_6154_p2[0:0] === 1'b1) ? 28'd134217728 : sext_ln731_10_fu_6104_p1);

assign select_ln388_2055_fu_6300_p3 = ((and_ln786_3088_fu_6262_p2[0:0] === 1'b1) ? 28'd134217728 : sext_ln731_11_fu_6212_p1);

assign select_ln388_2056_fu_6524_p3 = ((and_ln786_3090_fu_6486_p2[0:0] === 1'b1) ? 28'd134217728 : sext_ln731_15_fu_6436_p1);

assign select_ln388_2057_fu_6632_p2 = grp_fu_427_p2;

assign select_ln388_2057_fu_6632_p3 = ((and_ln786_3092_fu_6594_p2[0:0] === 1'b1) ? 28'd134217728 : select_ln388_2057_fu_6632_p2);

assign select_ln388_2058_fu_6784_p3 = ((and_ln786_3094_fu_6746_p2[0:0] === 1'b1) ? 28'd134217728 : sext_ln731_17_fu_6696_p1);

assign select_ln388_2059_fu_6896_p3 = ((and_ln786_3096_fu_6858_p2[0:0] === 1'b1) ? 28'd134217728 : grp_fu_440_p2);

assign select_ln388_2060_fu_7004_p2 = grp_fu_449_p2;

assign select_ln388_2060_fu_7004_p3 = ((and_ln786_3098_fu_6966_p2[0:0] === 1'b1) ? 28'd134217728 : select_ln388_2060_fu_7004_p2);

assign select_ln388_2061_fu_7112_p3 = ((and_ln786_3100_fu_7074_p2[0:0] === 1'b1) ? 28'd134217728 : sext_ln731_18_fu_7024_p1);

assign select_ln388_2062_fu_7228_p3 = ((and_ln786_3102_fu_7190_p2[0:0] === 1'b1) ? 28'd134217728 : sext_ln731_19_fu_7140_p1);

assign select_ln388_2063_fu_7340_p3 = ((and_ln786_3104_fu_7302_p2[0:0] === 1'b1) ? 28'd134217728 : grp_fu_443_p2);

assign select_ln388_fu_3636_p3 = ((and_ln786_3058_fu_3598_p2[0:0] === 1'b1) ? 28'd134217728 : sext_ln731_fu_3548_p1);

assign select_ln391_fu_8619_p3 = ((icmp_ln360_reg_8660[0:0] === 1'b1) ? 32'd2 : add_ln391_fu_8614_p2);

assign sext_ln1116_25_fu_4332_p0 = kernel_data_V_3_2;

assign sext_ln1116_25_fu_4332_p1 = sext_ln1116_25_fu_4332_p0;

assign sext_ln1116_26_fu_6316_p0 = data_V_data_V_dout;

assign sext_ln1116_26_fu_6316_p1 = sext_ln1116_26_fu_6316_p0;

assign sext_ln1116_fu_3506_p0 = kernel_data_V_3_1;

assign sext_ln1116_fu_3506_p1 = sext_ln1116_fu_3506_p0;

assign sext_ln1118_510_fu_3524_p0 = kernel_data_V_3_1;

assign sext_ln1118_510_fu_3524_p1 = sext_ln1118_510_fu_3524_p0;

assign sext_ln1118_511_fu_3531_p0 = kernel_data_V_3_1;

assign sext_ln1118_511_fu_3531_p1 = sext_ln1118_511_fu_3531_p0;

assign sext_ln1118_512_fu_3536_p0 = grp_fu_450_p2;

assign sext_ln1118_512_fu_3536_p1 = sext_ln1118_512_fu_3536_p0;

assign sext_ln1118_513_fu_3652_p0 = grp_fu_449_p2;

assign sext_ln1118_513_fu_3652_p1 = sext_ln1118_513_fu_3652_p0;

assign sext_ln1118_514_fu_3764_p1 = grp_fu_438_p2;

assign sext_ln1118_515_fu_3880_p0 = grp_fu_441_p2;

assign sext_ln1118_515_fu_3880_p1 = sext_ln1118_515_fu_3880_p0;

assign sext_ln1118_516_fu_3992_p0 = grp_fu_433_p2;

assign sext_ln1118_516_fu_3992_p1 = sext_ln1118_516_fu_3992_p0;

assign sext_ln1118_517_fu_4104_p1 = grp_fu_447_p2;

assign sext_ln1118_518_fu_4216_p1 = mul_ln1118_875_fu_437_p2;

assign sext_ln1118_519_fu_5807_p1 = $signed(shl_ln_fu_5800_p3);

assign sext_ln1118_520_fu_5824_p1 = $signed(shl_ln1118_s_fu_5817_p3);

assign sext_ln1118_521_fu_4338_p0 = kernel_data_V_3_2;

assign sext_ln1118_521_fu_4338_p1 = sext_ln1118_521_fu_4338_p0;

assign sext_ln1118_522_fu_4345_p0 = kernel_data_V_3_2;

assign sext_ln1118_522_fu_4345_p1 = sext_ln1118_522_fu_4345_p0;

assign sext_ln1118_523_fu_4350_p0 = kernel_data_V_3_2;

assign sext_ln1118_523_fu_4350_p1 = sext_ln1118_523_fu_4350_p0;

assign sext_ln1118_524_fu_4358_p1 = grp_fu_442_p2;

assign sext_ln1118_525_fu_4574_p0 = grp_fu_445_p2;

assign sext_ln1118_525_fu_4574_p1 = sext_ln1118_525_fu_4574_p0;

assign sext_ln1118_526_fu_4690_p1 = mul_ln1118_879_fu_436_p2;

assign sext_ln1118_527_fu_4806_p1 = grp_fu_432_p2;

assign sext_ln1118_528_fu_6092_p0 = grp_fu_447_p2;

assign sext_ln1118_528_fu_6092_p1 = sext_ln1118_528_fu_6092_p0;

assign sext_ln1118_529_fu_6208_p1 = grp_fu_442_p2;

assign sext_ln1118_530_fu_6326_p0 = data_V_data_V_dout;

assign sext_ln1118_530_fu_6326_p1 = sext_ln1118_530_fu_6326_p0;

assign sext_ln1118_531_fu_6332_p0 = data_V_data_V_dout;

assign sext_ln1118_531_fu_6332_p1 = sext_ln1118_531_fu_6332_p0;

assign sext_ln1118_532_fu_6338_p0 = data_V_data_V_dout;

assign sext_ln1118_532_fu_6338_p1 = sext_ln1118_532_fu_6338_p0;

assign sext_ln1118_533_fu_6352_p1 = $signed(shl_ln1118_182_fu_6344_p3);

assign sext_ln1118_534_fu_6370_p1 = shl_ln1118_183_fu_6362_p3;

assign sext_ln1118_535_fu_6374_p1 = shl_ln1118_183_fu_6362_p3;

assign sext_ln1118_536_fu_6656_p1 = $signed(shl_ln1118_184_fu_6648_p3);

assign sext_ln1118_537_fu_6666_p1 = add_ln1118_fu_6660_p2;

assign sext_ln1118_538_fu_6800_p1 = grp_fu_445_p2;

assign sext_ln1118_539_fu_7020_p1 = grp_fu_432_p2;

assign sext_ln1118_540_fu_7128_p0 = grp_fu_438_p2;

assign sext_ln1118_540_fu_7128_p1 = sext_ln1118_540_fu_7128_p0;

assign sext_ln1118_541_fu_7244_p1 = grp_fu_446_p2;

assign sext_ln1118_fu_3514_p0 = kernel_data_V_3_1;

assign sext_ln1118_fu_3514_p1 = sext_ln1118_fu_3514_p0;

assign sext_ln700_4_fu_6384_p1 = sub_ln1118_135_fu_6378_p2;

assign sext_ln700_fu_5834_p1 = sub_ln1118_133_fu_5828_p2;

assign sext_ln703_2025_fu_5000_p1 = select_ln340_4083_fu_3756_p3;

assign sext_ln703_2026_fu_5086_p1 = select_ln340_4084_fu_3872_p3;

assign sext_ln703_2027_fu_5172_p1 = select_ln340_4085_fu_3984_p3;

assign sext_ln703_2028_fu_5258_p1 = select_ln340_4086_fu_4096_p3;

assign sext_ln703_2029_fu_7356_p1 = select_ln340_4087_reg_8675;

assign sext_ln703_2030_fu_7440_p1 = select_ln340_4088_reg_8681;

assign sext_ln703_2031_fu_7524_p1 = select_ln340_4089_fu_5976_p3;

assign sext_ln703_2032_fu_5344_p1 = select_ln340_4106_fu_4992_p3;

assign sext_ln703_2033_fu_5348_p1 = select_ln340_4090_fu_4458_p3;

assign sext_ln703_2034_fu_5434_p1 = select_ln340_4107_fu_5078_p3;

assign sext_ln703_2035_fu_5438_p1 = select_ln340_4091_fu_4566_p3;

assign sext_ln703_2036_fu_5524_p1 = select_ln340_4108_fu_5164_p3;

assign sext_ln703_2037_fu_5528_p1 = select_ln340_4092_fu_4682_p3;

assign sext_ln703_2038_fu_5614_p1 = select_ln340_4109_fu_5250_p3;

assign sext_ln703_2039_fu_5618_p1 = select_ln340_4093_fu_4798_p3;

assign sext_ln703_2040_fu_5704_p1 = select_ln340_4110_fu_5336_p3;

assign sext_ln703_2041_fu_5708_p1 = select_ln340_4094_fu_4906_p3;

assign sext_ln703_2042_fu_7610_p1 = select_ln340_4111_fu_7432_p3;

assign sext_ln703_2043_fu_7614_p1 = select_ln340_4095_fu_6084_p3;

assign sext_ln703_2044_fu_7700_p1 = select_ln340_4112_fu_7516_p3;

assign sext_ln703_2045_fu_7704_p1 = select_ln340_4096_fu_6200_p3;

assign sext_ln703_2046_fu_7790_p1 = select_ln340_4113_fu_7602_p3;

assign sext_ln703_2047_fu_7794_p1 = select_ln340_4097_fu_6308_p3;

assign sext_ln703_2048_fu_7880_p1 = select_ln340_4114_reg_8705;

assign sext_ln703_2049_fu_7883_p1 = select_ln340_4098_fu_6532_p3;

assign sext_ln703_2050_fu_7969_p1 = select_ln340_4115_reg_8711;

assign sext_ln703_2051_fu_7972_p1 = select_ln340_4099_fu_6640_p3;

assign sext_ln703_2052_fu_8058_p1 = select_ln340_4116_reg_8717;

assign sext_ln703_2053_fu_8061_p1 = select_ln340_4100_fu_6792_p3;

assign sext_ln703_2054_fu_8147_p1 = select_ln340_4117_reg_8723;

assign sext_ln703_2055_fu_8150_p1 = select_ln340_4101_fu_6904_p3;

assign sext_ln703_2056_fu_8236_p1 = select_ln340_4118_reg_8729;

assign sext_ln703_2057_fu_8239_p1 = select_ln340_4102_fu_7012_p3;

assign sext_ln703_2058_fu_8325_p1 = select_ln340_4119_fu_7692_p3;

assign sext_ln703_2059_fu_8329_p1 = select_ln340_4103_fu_7120_p3;

assign sext_ln703_2060_fu_8416_p1 = select_ln340_4120_fu_7782_p3;

assign sext_ln703_2061_fu_8420_p1 = select_ln340_4104_fu_7236_p3;

assign sext_ln703_2062_fu_8507_p1 = select_ln340_4121_fu_7872_p3;

assign sext_ln703_2063_fu_8511_p1 = select_ln340_4105_fu_7348_p3;

assign sext_ln703_fu_4914_p1 = select_ln340_4082_fu_3644_p3;

assign sext_ln731_10_fu_6104_p1 = grp_fu_450_p2;

assign sext_ln731_11_fu_6212_p0 = grp_fu_428_p2;

assign sext_ln731_11_fu_6212_p1 = sext_ln731_11_fu_6212_p0;

assign sext_ln731_12_fu_6404_p1 = $signed(shl_ln731_2_fu_6396_p3);

assign sext_ln731_13_fu_6422_p1 = shl_ln731_3_fu_6414_p3;

assign sext_ln731_14_fu_6426_p1 = shl_ln731_3_fu_6414_p3;

assign sext_ln731_15_fu_6436_p1 = sub_ln731_3_fu_6430_p2;

assign sext_ln731_16_fu_6686_p1 = $signed(shl_ln731_4_fu_6678_p3);

assign sext_ln731_17_fu_6696_p1 = add_ln731_fu_6690_p2;

assign sext_ln731_18_fu_7024_p1 = grp_fu_431_p2;

assign sext_ln731_19_fu_7140_p1 = grp_fu_439_p2;

assign sext_ln731_1_fu_3776_p1 = mul_ln731_2_fu_434_p2;

assign sext_ln731_2_fu_4228_p1 = mul_ln731_6_fu_448_p2;

assign sext_ln731_3_fu_5853_p1 = $signed(shl_ln1_fu_5846_p3);

assign sext_ln731_4_fu_5870_p1 = $signed(shl_ln731_1_fu_5863_p3);

assign sext_ln731_5_fu_5880_p1 = sub_ln731_1_fu_5874_p2;

assign sext_ln731_6_fu_4362_p1 = mul_ln731_7_fu_435_p2;

assign sext_ln731_7_fu_4586_p1 = grp_fu_439_p2;

assign sext_ln731_8_fu_4702_p1 = grp_fu_431_p2;

assign sext_ln731_9_fu_4810_p0 = grp_fu_446_p2;

assign sext_ln731_9_fu_4810_p1 = sext_ln731_9_fu_4810_p0;

assign sext_ln731_fu_3548_p0 = grp_fu_427_p2;

assign sext_ln731_fu_3548_p1 = sext_ln731_fu_3548_p0;

assign shl_ln1118_182_fu_6344_p1 = data_V_data_V_dout;

assign shl_ln1118_182_fu_6344_p3 = {{shl_ln1118_182_fu_6344_p1}, {7'd0}};

assign shl_ln1118_183_fu_6362_p1 = data_V_data_V_dout;

assign shl_ln1118_183_fu_6362_p3 = {{shl_ln1118_183_fu_6362_p1}, {2'd0}};

assign shl_ln1118_184_fu_6648_p1 = data_V_data_V_dout;

assign shl_ln1118_184_fu_6648_p3 = {{shl_ln1118_184_fu_6648_p1}, {4'd0}};

assign shl_ln1118_s_fu_5817_p3 = {{kernel_data_V_3_1_load_reg_8647}, {1'd0}};

assign shl_ln1_fu_5846_p3 = {{kernel_data_V_3_1_load_reg_8647}, {8'd0}};

assign shl_ln731_1_fu_5863_p3 = {{kernel_data_V_3_1_load_reg_8647}, {2'd0}};

assign shl_ln731_2_fu_6396_p1 = data_V_data_V_dout;

assign shl_ln731_2_fu_6396_p3 = {{shl_ln731_2_fu_6396_p1}, {8'd0}};

assign shl_ln731_3_fu_6414_p1 = data_V_data_V_dout;

assign shl_ln731_3_fu_6414_p3 = {{shl_ln731_3_fu_6414_p1}, {3'd0}};

assign shl_ln731_4_fu_6678_p1 = data_V_data_V_dout;

assign shl_ln731_4_fu_6678_p3 = {{shl_ln731_4_fu_6678_p1}, {5'd0}};

assign shl_ln_fu_5800_p3 = {{kernel_data_V_3_1_load_reg_8647}, {7'd0}};

assign start_out = real_start;

assign sub_ln1118_133_fu_5828_p2 = ($signed(sub_ln1118_fu_5811_p2) - $signed(sext_ln1118_520_fu_5824_p1));

assign sub_ln1118_134_fu_6356_p2 = ($signed(24'd0) - $signed(sext_ln1118_533_fu_6352_p1));

assign sub_ln1118_135_fu_6378_p2 = ($signed(sub_ln1118_134_fu_6356_p2) - $signed(sext_ln1118_535_fu_6374_p1));

assign sub_ln1118_fu_5811_p2 = ($signed(24'd0) - $signed(sext_ln1118_519_fu_5807_p1));

assign sub_ln731_1_fu_5874_p2 = ($signed(sub_ln731_fu_5857_p2) - $signed(sext_ln731_4_fu_5870_p1));

assign sub_ln731_2_fu_6408_p2 = ($signed(25'd0) - $signed(sext_ln731_12_fu_6404_p1));

assign sub_ln731_3_fu_6430_p2 = ($signed(sub_ln731_2_fu_6408_p2) - $signed(sext_ln731_14_fu_6426_p1));

assign sub_ln731_fu_5857_p2 = ($signed(25'd0) - $signed(sext_ln731_3_fu_5853_p1));

assign tmp_7182_fu_3484_p4 = {{pX[31:1]}};

assign tmp_7183_fu_3540_p1 = grp_fu_450_p2;

assign tmp_7183_fu_3540_p3 = tmp_7183_fu_3540_p1[32'd23];

assign tmp_7184_fu_3558_p3 = or_ln785_fu_3552_p2[32'd25];

assign tmp_7185_fu_3584_p3 = and_ln786_fu_3578_p2[32'd25];

assign tmp_7186_fu_3656_p1 = grp_fu_449_p2;

assign tmp_7186_fu_3656_p3 = tmp_7186_fu_3656_p1[32'd25];

assign tmp_7187_fu_3670_p3 = or_ln785_1017_fu_3664_p2[32'd27];

assign tmp_7188_fu_3696_p3 = and_ln786_3059_fu_3690_p2[32'd27];

assign tmp_7189_fu_3768_p3 = grp_fu_438_p2[32'd24];

assign tmp_7190_fu_3786_p3 = or_ln785_1018_fu_3780_p2[32'd26];

assign tmp_7191_fu_3812_p3 = and_ln786_3061_fu_3806_p2[32'd26];

assign tmp_7192_fu_3884_p1 = grp_fu_441_p2;

assign tmp_7192_fu_3884_p3 = tmp_7192_fu_3884_p1[32'd25];

assign tmp_7193_fu_3898_p3 = or_ln785_1019_fu_3892_p2[32'd27];

assign tmp_7194_fu_3924_p3 = and_ln786_3063_fu_3918_p2[32'd27];

assign tmp_7195_fu_3996_p1 = grp_fu_433_p2;

assign tmp_7195_fu_3996_p3 = tmp_7195_fu_3996_p1[32'd25];

assign tmp_7196_fu_4010_p3 = or_ln785_1020_fu_4004_p2[32'd27];

assign tmp_7197_fu_4036_p3 = and_ln786_3065_fu_4030_p2[32'd27];

assign tmp_7198_fu_4108_p3 = grp_fu_447_p2[32'd25];

assign tmp_7199_fu_4122_p3 = or_ln785_1021_fu_4116_p2[32'd27];

assign tmp_7200_fu_4148_p3 = and_ln786_3067_fu_4142_p2[32'd27];

assign tmp_7201_fu_4220_p3 = mul_ln1118_875_fu_437_p2[32'd24];

assign tmp_7202_fu_4238_p3 = or_ln785_1022_fu_4232_p2[32'd26];

assign tmp_7203_fu_4264_p3 = and_ln786_3069_fu_4258_p2[32'd26];

assign tmp_7204_fu_5838_p3 = sub_ln1118_133_fu_5828_p2[32'd23];

assign tmp_7205_fu_5890_p3 = or_ln785_1023_fu_5884_p2[32'd24];

assign tmp_7206_fu_5916_p3 = and_ln786_3071_fu_5910_p2[32'd24];

assign tmp_7208_fu_4372_p3 = or_ln785_1024_fu_4366_p2[32'd26];

assign tmp_7209_fu_4398_p3 = and_ln786_3073_fu_4392_p2[32'd26];

assign tmp_7210_fu_4466_p3 = grp_fu_428_p2[32'd26];

assign tmp_7211_fu_4480_p3 = or_ln785_1025_fu_4474_p2[32'd27];

assign tmp_7212_fu_4506_p3 = and_ln786_3075_fu_4500_p2[32'd27];

assign tmp_7213_fu_4578_p1 = grp_fu_445_p2;

assign tmp_7213_fu_4578_p3 = tmp_7213_fu_4578_p1[32'd23];

assign tmp_7214_fu_4596_p3 = or_ln785_1026_fu_4590_p2[32'd25];

assign tmp_7215_fu_4622_p3 = and_ln786_3077_fu_4616_p2[32'd25];

assign tmp_7216_fu_4694_p3 = mul_ln1118_879_fu_436_p2[32'd23];

assign tmp_7217_fu_4712_p3 = or_ln785_1027_fu_4706_p2[32'd25];

assign tmp_7218_fu_4738_p3 = and_ln786_3079_fu_4732_p2[32'd25];

assign tmp_7220_fu_4820_p3 = or_ln785_1028_fu_4814_p2[32'd25];

assign tmp_7221_fu_4846_p3 = and_ln786_3081_fu_4840_p2[32'd25];

assign tmp_7222_fu_5984_p3 = grp_fu_430_p2[32'd26];

assign tmp_7223_fu_5998_p3 = or_ln785_1029_fu_5992_p2[32'd27];

assign tmp_7224_fu_6024_p3 = and_ln786_3083_fu_6018_p2[32'd27];

assign tmp_7225_fu_6096_p1 = grp_fu_447_p2;

assign tmp_7225_fu_6096_p3 = tmp_7225_fu_6096_p1[32'd24];

assign tmp_7226_fu_6114_p3 = or_ln785_1030_fu_6108_p2[32'd26];

assign tmp_7227_fu_6140_p3 = and_ln786_3085_fu_6134_p2[32'd26];

assign tmp_7229_fu_6222_p3 = or_ln785_1031_fu_6216_p2[32'd26];

assign tmp_7230_fu_6248_p3 = and_ln786_3087_fu_6242_p2[32'd26];

assign tmp_7231_fu_6388_p3 = sub_ln1118_135_fu_6378_p2[32'd23];

assign tmp_7232_fu_6446_p3 = or_ln785_1032_fu_6440_p2[32'd24];

assign tmp_7233_fu_6472_p3 = and_ln786_3089_fu_6466_p2[32'd24];

assign tmp_7234_fu_6540_p1 = grp_fu_433_p2;

assign tmp_7234_fu_6540_p3 = tmp_7234_fu_6540_p1[32'd26];

assign tmp_7235_fu_6554_p3 = or_ln785_1033_fu_6548_p2[32'd27];

assign tmp_7236_fu_6580_p3 = and_ln786_3091_fu_6574_p2[32'd27];

assign tmp_7237_fu_6670_p3 = add_ln1118_fu_6660_p2[32'd20];

assign tmp_7238_fu_6706_p3 = or_ln785_1034_fu_6700_p2[32'd21];

assign tmp_7239_fu_6732_p3 = and_ln786_3093_fu_6726_p2[32'd21];

assign tmp_7240_fu_6804_p3 = grp_fu_445_p2[32'd25];

assign tmp_7241_fu_6818_p3 = or_ln785_1035_fu_6812_p2[32'd27];

assign tmp_7242_fu_6844_p3 = and_ln786_3095_fu_6838_p2[32'd27];

assign tmp_7243_fu_6912_p3 = grp_fu_429_p2[32'd26];

assign tmp_7244_fu_6926_p3 = or_ln785_1036_fu_6920_p2[32'd27];

assign tmp_7245_fu_6952_p3 = and_ln786_3097_fu_6946_p2[32'd27];

assign tmp_7247_fu_7034_p3 = or_ln785_1037_fu_7028_p2[32'd25];

assign tmp_7248_fu_7060_p3 = and_ln786_3099_fu_7054_p2[32'd25];

assign tmp_7249_fu_7132_p1 = grp_fu_438_p2;

assign tmp_7249_fu_7132_p3 = tmp_7249_fu_7132_p1[32'd23];

assign tmp_7250_fu_7150_p3 = or_ln785_1038_fu_7144_p2[32'd25];

assign tmp_7251_fu_7176_p3 = and_ln786_3101_fu_7170_p2[32'd25];

assign tmp_7252_fu_7248_p3 = grp_fu_446_p2[32'd25];

assign tmp_7253_fu_7262_p3 = or_ln785_1039_fu_7256_p2[32'd27];

assign tmp_7254_fu_7288_p3 = and_ln786_3103_fu_7282_p2[32'd27];

assign tmp_7255_fu_4924_p3 = add_ln1192_fu_4918_p2[32'd28];

assign tmp_7256_fu_4938_p3 = acc_0_V_fu_4932_p2[32'd27];

assign tmp_7257_fu_5010_p3 = add_ln1192_1024_fu_5004_p2[32'd28];

assign tmp_7258_fu_5024_p3 = acc_1_V_fu_5018_p2[32'd27];

assign tmp_7259_fu_5096_p3 = add_ln1192_1025_fu_5090_p2[32'd28];

assign tmp_7260_fu_5110_p3 = acc_2_V_fu_5104_p2[32'd27];

assign tmp_7261_fu_5182_p3 = add_ln1192_1026_fu_5176_p2[32'd28];

assign tmp_7262_fu_5196_p3 = acc_3_V_fu_5190_p2[32'd27];

assign tmp_7263_fu_5268_p3 = add_ln1192_1027_fu_5262_p2[32'd28];

assign tmp_7264_fu_5282_p3 = acc_4_V_fu_5276_p2[32'd27];

assign tmp_7265_fu_7365_p3 = add_ln1192_1028_fu_7359_p2[32'd28];

assign tmp_7266_fu_7378_p3 = acc_5_V_fu_7373_p2[32'd27];

assign tmp_7267_fu_7449_p3 = add_ln1192_1029_fu_7443_p2[32'd28];

assign tmp_7268_fu_7462_p3 = acc_6_V_fu_7457_p2[32'd27];

assign tmp_7269_fu_7534_p3 = add_ln1192_1030_fu_7528_p2[32'd28];

assign tmp_7270_fu_7548_p3 = acc_7_V_fu_7542_p2[32'd27];

assign tmp_7271_fu_5358_p3 = add_ln1192_1031_fu_5352_p2[32'd28];

assign tmp_7272_fu_5372_p3 = acc_0_V_2_fu_5366_p2[32'd27];

assign tmp_7273_fu_5448_p3 = add_ln1192_1032_fu_5442_p2[32'd28];

assign tmp_7274_fu_5462_p3 = acc_1_V_2_fu_5456_p2[32'd27];

assign tmp_7275_fu_5538_p3 = add_ln1192_1033_fu_5532_p2[32'd28];

assign tmp_7276_fu_5552_p3 = acc_2_V_2_fu_5546_p2[32'd27];

assign tmp_7277_fu_5628_p3 = add_ln1192_1034_fu_5622_p2[32'd28];

assign tmp_7278_fu_5642_p3 = acc_3_V_2_fu_5636_p2[32'd27];

assign tmp_7279_fu_5718_p3 = add_ln1192_1035_fu_5712_p2[32'd28];

assign tmp_7280_fu_5732_p3 = acc_4_V_2_fu_5726_p2[32'd27];

assign tmp_7281_fu_7624_p3 = add_ln1192_1036_fu_7618_p2[32'd28];

assign tmp_7282_fu_7638_p3 = acc_5_V_2_fu_7632_p2[32'd27];

assign tmp_7283_fu_7714_p3 = add_ln1192_1037_fu_7708_p2[32'd28];

assign tmp_7284_fu_7728_p3 = acc_6_V_2_fu_7722_p2[32'd27];

assign tmp_7285_fu_7804_p3 = add_ln1192_1038_fu_7798_p2[32'd28];

assign tmp_7286_fu_7818_p3 = acc_7_V_2_fu_7812_p2[32'd27];

assign tmp_7287_fu_7893_p3 = add_ln1192_1039_fu_7887_p2[32'd28];

assign tmp_7288_fu_7906_p3 = acc_0_V_4_fu_7901_p2[32'd27];

assign tmp_7289_fu_7982_p3 = add_ln1192_1040_fu_7976_p2[32'd28];

assign tmp_7290_fu_7995_p3 = acc_1_V_4_fu_7990_p2[32'd27];

assign tmp_7291_fu_8071_p3 = add_ln1192_1041_fu_8065_p2[32'd28];

assign tmp_7292_fu_8084_p3 = acc_2_V_4_fu_8079_p2[32'd27];

assign tmp_7293_fu_8160_p3 = add_ln1192_1042_fu_8154_p2[32'd28];

assign tmp_7294_fu_8173_p3 = acc_3_V_4_fu_8168_p2[32'd27];

assign tmp_7295_fu_8249_p3 = add_ln1192_1043_fu_8243_p2[32'd28];

assign tmp_7296_fu_8262_p3 = acc_4_V_4_fu_8257_p2[32'd27];

assign tmp_7297_fu_8339_p3 = add_ln1192_1044_fu_8333_p2[32'd28];

assign tmp_7298_fu_8353_p3 = acc_5_V_4_fu_8347_p2[32'd27];

assign tmp_7299_fu_8430_p3 = add_ln1192_1045_fu_8424_p2[32'd28];

assign tmp_7300_fu_8444_p3 = acc_6_V_4_fu_8438_p2[32'd27];

assign tmp_7301_fu_8521_p3 = add_ln1192_1046_fu_8515_p2[32'd28];

assign tmp_7302_fu_8535_p3 = acc_7_V_4_fu_8529_p2[32'd27];

assign xor_ln340_1047_fu_4964_p2 = (tmp_7255_fu_4924_p3 ^ 1'd1);

assign xor_ln340_1048_fu_5050_p2 = (tmp_7257_fu_5010_p3 ^ 1'd1);

assign xor_ln340_1049_fu_5136_p2 = (tmp_7259_fu_5096_p3 ^ 1'd1);

assign xor_ln340_1050_fu_5222_p2 = (tmp_7261_fu_5182_p3 ^ 1'd1);

assign xor_ln340_1051_fu_5308_p2 = (tmp_7263_fu_5268_p3 ^ 1'd1);

assign xor_ln340_1052_fu_7404_p2 = (tmp_7265_fu_7365_p3 ^ 1'd1);

assign xor_ln340_1053_fu_7488_p2 = (tmp_7267_fu_7449_p3 ^ 1'd1);

assign xor_ln340_1054_fu_7574_p2 = (tmp_7269_fu_7534_p3 ^ 1'd1);

assign xor_ln340_1055_fu_5398_p2 = (tmp_7271_fu_5358_p3 ^ 1'd1);

assign xor_ln340_1056_fu_5488_p2 = (tmp_7273_fu_5448_p3 ^ 1'd1);

assign xor_ln340_1057_fu_5578_p2 = (tmp_7275_fu_5538_p3 ^ 1'd1);

assign xor_ln340_1058_fu_5668_p2 = (tmp_7277_fu_5628_p3 ^ 1'd1);

assign xor_ln340_1059_fu_5758_p2 = (tmp_7279_fu_5718_p3 ^ 1'd1);

assign xor_ln340_1060_fu_7664_p2 = (tmp_7281_fu_7624_p3 ^ 1'd1);

assign xor_ln340_1061_fu_7754_p2 = (tmp_7283_fu_7714_p3 ^ 1'd1);

assign xor_ln340_1062_fu_7844_p2 = (tmp_7285_fu_7804_p3 ^ 1'd1);

assign xor_ln340_1063_fu_7932_p2 = (tmp_7287_fu_7893_p3 ^ 1'd1);

assign xor_ln340_1064_fu_8021_p2 = (tmp_7289_fu_7982_p3 ^ 1'd1);

assign xor_ln340_1065_fu_8110_p2 = (tmp_7291_fu_8071_p3 ^ 1'd1);

assign xor_ln340_1066_fu_8199_p2 = (tmp_7293_fu_8160_p3 ^ 1'd1);

assign xor_ln340_1067_fu_8288_p2 = (tmp_7295_fu_8249_p3 ^ 1'd1);

assign xor_ln340_1068_fu_8379_p2 = (tmp_7297_fu_8339_p3 ^ 1'd1);

assign xor_ln340_1069_fu_8470_p2 = (tmp_7299_fu_8430_p3 ^ 1'd1);

assign xor_ln340_1070_fu_8561_p2 = (tmp_7301_fu_8521_p3 ^ 1'd1);

assign xor_ln340_2048_fu_4958_p2 = (tmp_7256_fu_4938_p3 ^ tmp_7255_fu_4924_p3);

assign xor_ln340_2049_fu_5044_p2 = (tmp_7258_fu_5024_p3 ^ tmp_7257_fu_5010_p3);

assign xor_ln340_2050_fu_5130_p2 = (tmp_7260_fu_5110_p3 ^ tmp_7259_fu_5096_p3);

assign xor_ln340_2051_fu_5216_p2 = (tmp_7262_fu_5196_p3 ^ tmp_7261_fu_5182_p3);

assign xor_ln340_2052_fu_5302_p2 = (tmp_7264_fu_5282_p3 ^ tmp_7263_fu_5268_p3);

assign xor_ln340_2053_fu_7398_p2 = (tmp_7266_fu_7378_p3 ^ tmp_7265_fu_7365_p3);

assign xor_ln340_2054_fu_7482_p2 = (tmp_7268_fu_7462_p3 ^ tmp_7267_fu_7449_p3);

assign xor_ln340_2055_fu_7568_p2 = (tmp_7270_fu_7548_p3 ^ tmp_7269_fu_7534_p3);

assign xor_ln340_2056_fu_5392_p2 = (tmp_7272_fu_5372_p3 ^ tmp_7271_fu_5358_p3);

assign xor_ln340_2057_fu_5482_p2 = (tmp_7274_fu_5462_p3 ^ tmp_7273_fu_5448_p3);

assign xor_ln340_2058_fu_5572_p2 = (tmp_7276_fu_5552_p3 ^ tmp_7275_fu_5538_p3);

assign xor_ln340_2059_fu_5662_p2 = (tmp_7278_fu_5642_p3 ^ tmp_7277_fu_5628_p3);

assign xor_ln340_2060_fu_5752_p2 = (tmp_7280_fu_5732_p3 ^ tmp_7279_fu_5718_p3);

assign xor_ln340_2061_fu_7658_p2 = (tmp_7282_fu_7638_p3 ^ tmp_7281_fu_7624_p3);

assign xor_ln340_2062_fu_7748_p2 = (tmp_7284_fu_7728_p3 ^ tmp_7283_fu_7714_p3);

assign xor_ln340_2063_fu_7838_p2 = (tmp_7286_fu_7818_p3 ^ tmp_7285_fu_7804_p3);

assign xor_ln340_2064_fu_7926_p2 = (tmp_7288_fu_7906_p3 ^ tmp_7287_fu_7893_p3);

assign xor_ln340_2065_fu_8015_p2 = (tmp_7290_fu_7995_p3 ^ tmp_7289_fu_7982_p3);

assign xor_ln340_2066_fu_8104_p2 = (tmp_7292_fu_8084_p3 ^ tmp_7291_fu_8071_p3);

assign xor_ln340_2067_fu_8193_p2 = (tmp_7294_fu_8173_p3 ^ tmp_7293_fu_8160_p3);

assign xor_ln340_2068_fu_8282_p2 = (tmp_7296_fu_8262_p3 ^ tmp_7295_fu_8249_p3);

assign xor_ln340_2069_fu_8373_p2 = (tmp_7298_fu_8353_p3 ^ tmp_7297_fu_8339_p3);

assign xor_ln340_2070_fu_8464_p2 = (tmp_7300_fu_8444_p3 ^ tmp_7299_fu_8430_p3);

assign xor_ln340_2071_fu_8555_p2 = (tmp_7302_fu_8535_p3 ^ tmp_7301_fu_8521_p3);

assign xor_ln340_2072_fu_3610_p2 = (tmp_7183_fu_3540_p3 ^ 1'd1);

assign xor_ln340_2073_fu_3838_p2 = (tmp_7189_fu_3768_p3 ^ 1'd1);

assign xor_ln340_2074_fu_3950_p2 = (tmp_7192_fu_3884_p3 ^ 1'd1);

assign xor_ln340_2075_fu_4062_p2 = (tmp_7195_fu_3996_p3 ^ 1'd1);

assign xor_ln340_2076_fu_4174_p2 = (tmp_7198_fu_4108_p3 ^ 1'd1);

assign xor_ln340_2077_fu_4290_p2 = (tmp_7201_fu_4220_p3 ^ 1'd1);

assign xor_ln340_2078_fu_5942_p2 = (tmp_7204_fu_5838_p3 ^ 1'd1);

assign xor_ln340_2079_fu_4424_p2 = (grp_fu_3428_p3 ^ 1'd1);

assign xor_ln340_2080_fu_4532_p2 = (tmp_7210_fu_4466_p3 ^ 1'd1);

assign xor_ln340_2081_fu_4648_p2 = (tmp_7213_fu_4578_p3 ^ 1'd1);

assign xor_ln340_2082_fu_4764_p2 = (tmp_7216_fu_4694_p3 ^ 1'd1);

assign xor_ln340_2083_fu_4872_p2 = (grp_fu_3436_p3 ^ 1'd1);

assign xor_ln340_2084_fu_6050_p2 = (tmp_7222_fu_5984_p3 ^ 1'd1);

assign xor_ln340_2085_fu_6166_p2 = (tmp_7225_fu_6096_p3 ^ 1'd1);

assign xor_ln340_2086_fu_6274_p2 = (grp_fu_3428_p3 ^ 1'd1);

assign xor_ln340_2087_fu_6498_p2 = (tmp_7231_fu_6388_p3 ^ 1'd1);

assign xor_ln340_2088_fu_6606_p2 = (tmp_7234_fu_6540_p3 ^ 1'd1);

assign xor_ln340_2089_fu_6758_p2 = (tmp_7237_fu_6670_p3 ^ 1'd1);

assign xor_ln340_2090_fu_6870_p2 = (tmp_7240_fu_6804_p3 ^ 1'd1);

assign xor_ln340_2091_fu_6978_p2 = (tmp_7243_fu_6912_p3 ^ 1'd1);

assign xor_ln340_2092_fu_7086_p2 = (grp_fu_3436_p3 ^ 1'd1);

assign xor_ln340_2093_fu_7202_p2 = (tmp_7249_fu_7132_p3 ^ 1'd1);

assign xor_ln340_2094_fu_7314_p2 = (tmp_7252_fu_7248_p3 ^ 1'd1);

assign xor_ln340_fu_3722_p2 = (tmp_7186_fu_3656_p3 ^ 1'd1);

assign xor_ln785_1017_fu_3678_p2 = (tmp_7186_fu_3656_p3 ^ 1'd1);

assign xor_ln785_1018_fu_3794_p2 = (tmp_7189_fu_3768_p3 ^ 1'd1);

assign xor_ln785_1019_fu_3906_p2 = (tmp_7192_fu_3884_p3 ^ 1'd1);

assign xor_ln785_1020_fu_4018_p2 = (tmp_7195_fu_3996_p3 ^ 1'd1);

assign xor_ln785_1021_fu_4130_p2 = (tmp_7198_fu_4108_p3 ^ 1'd1);

assign xor_ln785_1022_fu_4246_p2 = (tmp_7201_fu_4220_p3 ^ 1'd1);

assign xor_ln785_1023_fu_5898_p2 = (tmp_7204_fu_5838_p3 ^ 1'd1);

assign xor_ln785_1024_fu_4380_p2 = (grp_fu_3428_p3 ^ 1'd1);

assign xor_ln785_1025_fu_4488_p2 = (tmp_7210_fu_4466_p3 ^ 1'd1);

assign xor_ln785_1026_fu_4604_p2 = (tmp_7213_fu_4578_p3 ^ 1'd1);

assign xor_ln785_1027_fu_4720_p2 = (tmp_7216_fu_4694_p3 ^ 1'd1);

assign xor_ln785_1028_fu_4828_p2 = (grp_fu_3436_p3 ^ 1'd1);

assign xor_ln785_1029_fu_6006_p2 = (tmp_7222_fu_5984_p3 ^ 1'd1);

assign xor_ln785_1030_fu_6122_p2 = (tmp_7225_fu_6096_p3 ^ 1'd1);

assign xor_ln785_1031_fu_6230_p2 = (grp_fu_3428_p3 ^ 1'd1);

assign xor_ln785_1032_fu_6454_p2 = (tmp_7231_fu_6388_p3 ^ 1'd1);

assign xor_ln785_1033_fu_6562_p2 = (tmp_7234_fu_6540_p3 ^ 1'd1);

assign xor_ln785_1034_fu_6714_p2 = (tmp_7237_fu_6670_p3 ^ 1'd1);

assign xor_ln785_1035_fu_6826_p2 = (tmp_7240_fu_6804_p3 ^ 1'd1);

assign xor_ln785_1036_fu_6934_p2 = (tmp_7243_fu_6912_p3 ^ 1'd1);

assign xor_ln785_1037_fu_7042_p2 = (grp_fu_3436_p3 ^ 1'd1);

assign xor_ln785_1038_fu_7158_p2 = (tmp_7249_fu_7132_p3 ^ 1'd1);

assign xor_ln785_1039_fu_7270_p2 = (tmp_7252_fu_7248_p3 ^ 1'd1);

assign xor_ln785_fu_3566_p2 = (tmp_7183_fu_3540_p3 ^ 1'd1);

assign xor_ln786_2041_fu_5032_p2 = (tmp_7258_fu_5024_p3 ^ 1'd1);

assign xor_ln786_2042_fu_5118_p2 = (tmp_7260_fu_5110_p3 ^ 1'd1);

assign xor_ln786_2043_fu_5204_p2 = (tmp_7262_fu_5196_p3 ^ 1'd1);

assign xor_ln786_2044_fu_5290_p2 = (tmp_7264_fu_5282_p3 ^ 1'd1);

assign xor_ln786_2045_fu_7386_p2 = (tmp_7266_fu_7378_p3 ^ 1'd1);

assign xor_ln786_2046_fu_7470_p2 = (tmp_7268_fu_7462_p3 ^ 1'd1);

assign xor_ln786_2047_fu_7556_p2 = (tmp_7270_fu_7548_p3 ^ 1'd1);

assign xor_ln786_2048_fu_5380_p2 = (tmp_7272_fu_5372_p3 ^ 1'd1);

assign xor_ln786_2049_fu_5470_p2 = (tmp_7274_fu_5462_p3 ^ 1'd1);

assign xor_ln786_2050_fu_5560_p2 = (tmp_7276_fu_5552_p3 ^ 1'd1);

assign xor_ln786_2051_fu_5650_p2 = (tmp_7278_fu_5642_p3 ^ 1'd1);

assign xor_ln786_2052_fu_5740_p2 = (tmp_7280_fu_5732_p3 ^ 1'd1);

assign xor_ln786_2053_fu_7646_p2 = (tmp_7282_fu_7638_p3 ^ 1'd1);

assign xor_ln786_2054_fu_7736_p2 = (tmp_7284_fu_7728_p3 ^ 1'd1);

assign xor_ln786_2055_fu_7826_p2 = (tmp_7286_fu_7818_p3 ^ 1'd1);

assign xor_ln786_2056_fu_7914_p2 = (tmp_7288_fu_7906_p3 ^ 1'd1);

assign xor_ln786_2057_fu_8003_p2 = (tmp_7290_fu_7995_p3 ^ 1'd1);

assign xor_ln786_2058_fu_8092_p2 = (tmp_7292_fu_8084_p3 ^ 1'd1);

assign xor_ln786_2059_fu_8181_p2 = (tmp_7294_fu_8173_p3 ^ 1'd1);

assign xor_ln786_2060_fu_8270_p2 = (tmp_7296_fu_8262_p3 ^ 1'd1);

assign xor_ln786_2061_fu_8361_p2 = (tmp_7298_fu_8353_p3 ^ 1'd1);

assign xor_ln786_2062_fu_8452_p2 = (tmp_7300_fu_8444_p3 ^ 1'd1);

assign xor_ln786_2063_fu_8543_p2 = (tmp_7302_fu_8535_p3 ^ 1'd1);

assign xor_ln786_2064_fu_3592_p2 = (tmp_7185_fu_3584_p3 ^ 1'd1);

assign xor_ln786_2065_fu_3704_p2 = (tmp_7188_fu_3696_p3 ^ 1'd1);

assign xor_ln786_2066_fu_3820_p2 = (tmp_7191_fu_3812_p3 ^ 1'd1);

assign xor_ln786_2067_fu_3932_p2 = (tmp_7194_fu_3924_p3 ^ 1'd1);

assign xor_ln786_2068_fu_4044_p2 = (tmp_7197_fu_4036_p3 ^ 1'd1);

assign xor_ln786_2069_fu_4156_p2 = (tmp_7200_fu_4148_p3 ^ 1'd1);

assign xor_ln786_2070_fu_4272_p2 = (tmp_7203_fu_4264_p3 ^ 1'd1);

assign xor_ln786_2071_fu_5924_p2 = (tmp_7206_fu_5916_p3 ^ 1'd1);

assign xor_ln786_2072_fu_4406_p2 = (tmp_7209_fu_4398_p3 ^ 1'd1);

assign xor_ln786_2073_fu_4514_p2 = (tmp_7212_fu_4506_p3 ^ 1'd1);

assign xor_ln786_2074_fu_4630_p2 = (tmp_7215_fu_4622_p3 ^ 1'd1);

assign xor_ln786_2075_fu_4746_p2 = (tmp_7218_fu_4738_p3 ^ 1'd1);

assign xor_ln786_2076_fu_4854_p2 = (tmp_7221_fu_4846_p3 ^ 1'd1);

assign xor_ln786_2077_fu_6032_p2 = (tmp_7224_fu_6024_p3 ^ 1'd1);

assign xor_ln786_2078_fu_6148_p2 = (tmp_7227_fu_6140_p3 ^ 1'd1);

assign xor_ln786_2079_fu_6256_p2 = (tmp_7230_fu_6248_p3 ^ 1'd1);

assign xor_ln786_2080_fu_6480_p2 = (tmp_7233_fu_6472_p3 ^ 1'd1);

assign xor_ln786_2081_fu_6588_p2 = (tmp_7236_fu_6580_p3 ^ 1'd1);

assign xor_ln786_2082_fu_6740_p2 = (tmp_7239_fu_6732_p3 ^ 1'd1);

assign xor_ln786_2083_fu_6852_p2 = (tmp_7242_fu_6844_p3 ^ 1'd1);

assign xor_ln786_2084_fu_6960_p2 = (tmp_7245_fu_6952_p3 ^ 1'd1);

assign xor_ln786_2085_fu_7068_p2 = (tmp_7248_fu_7060_p3 ^ 1'd1);

assign xor_ln786_2086_fu_7184_p2 = (tmp_7251_fu_7176_p3 ^ 1'd1);

assign xor_ln786_2087_fu_7296_p2 = (tmp_7254_fu_7288_p3 ^ 1'd1);

assign xor_ln786_fu_4946_p2 = (tmp_7256_fu_4938_p3 ^ 1'd1);

endmodule //conv_1d_cl_array_ap_int_16_1u_array_ap_fixed_28_16_1_0_0_8u_config2_s
