-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_array_ap_fixed_4u_array_ap_fixed_28_16_1_0_0_16u_config15_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_stream_V_data_0_V_dout : IN STD_LOGIC_VECTOR (27 downto 0);
    data_stream_V_data_0_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_0_V_read : OUT STD_LOGIC;
    data_stream_V_data_1_V_dout : IN STD_LOGIC_VECTOR (27 downto 0);
    data_stream_V_data_1_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_1_V_read : OUT STD_LOGIC;
    data_stream_V_data_2_V_dout : IN STD_LOGIC_VECTOR (27 downto 0);
    data_stream_V_data_2_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_2_V_read : OUT STD_LOGIC;
    data_stream_V_data_3_V_dout : IN STD_LOGIC_VECTOR (27 downto 0);
    data_stream_V_data_3_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_3_V_read : OUT STD_LOGIC;
    res_stream_V_data_0_V_din : OUT STD_LOGIC_VECTOR (27 downto 0);
    res_stream_V_data_0_V_full_n : IN STD_LOGIC;
    res_stream_V_data_0_V_write : OUT STD_LOGIC;
    res_stream_V_data_1_V_din : OUT STD_LOGIC_VECTOR (27 downto 0);
    res_stream_V_data_1_V_full_n : IN STD_LOGIC;
    res_stream_V_data_1_V_write : OUT STD_LOGIC;
    res_stream_V_data_2_V_din : OUT STD_LOGIC_VECTOR (27 downto 0);
    res_stream_V_data_2_V_full_n : IN STD_LOGIC;
    res_stream_V_data_2_V_write : OUT STD_LOGIC;
    res_stream_V_data_3_V_din : OUT STD_LOGIC_VECTOR (27 downto 0);
    res_stream_V_data_3_V_full_n : IN STD_LOGIC;
    res_stream_V_data_3_V_write : OUT STD_LOGIC;
    res_stream_V_data_4_V_din : OUT STD_LOGIC_VECTOR (27 downto 0);
    res_stream_V_data_4_V_full_n : IN STD_LOGIC;
    res_stream_V_data_4_V_write : OUT STD_LOGIC;
    res_stream_V_data_5_V_din : OUT STD_LOGIC_VECTOR (27 downto 0);
    res_stream_V_data_5_V_full_n : IN STD_LOGIC;
    res_stream_V_data_5_V_write : OUT STD_LOGIC;
    res_stream_V_data_6_V_din : OUT STD_LOGIC_VECTOR (27 downto 0);
    res_stream_V_data_6_V_full_n : IN STD_LOGIC;
    res_stream_V_data_6_V_write : OUT STD_LOGIC;
    res_stream_V_data_7_V_din : OUT STD_LOGIC_VECTOR (27 downto 0);
    res_stream_V_data_7_V_full_n : IN STD_LOGIC;
    res_stream_V_data_7_V_write : OUT STD_LOGIC;
    res_stream_V_data_8_V_din : OUT STD_LOGIC_VECTOR (27 downto 0);
    res_stream_V_data_8_V_full_n : IN STD_LOGIC;
    res_stream_V_data_8_V_write : OUT STD_LOGIC;
    res_stream_V_data_9_V_din : OUT STD_LOGIC_VECTOR (27 downto 0);
    res_stream_V_data_9_V_full_n : IN STD_LOGIC;
    res_stream_V_data_9_V_write : OUT STD_LOGIC;
    res_stream_V_data_10_V_din : OUT STD_LOGIC_VECTOR (27 downto 0);
    res_stream_V_data_10_V_full_n : IN STD_LOGIC;
    res_stream_V_data_10_V_write : OUT STD_LOGIC;
    res_stream_V_data_11_V_din : OUT STD_LOGIC_VECTOR (27 downto 0);
    res_stream_V_data_11_V_full_n : IN STD_LOGIC;
    res_stream_V_data_11_V_write : OUT STD_LOGIC;
    res_stream_V_data_12_V_din : OUT STD_LOGIC_VECTOR (27 downto 0);
    res_stream_V_data_12_V_full_n : IN STD_LOGIC;
    res_stream_V_data_12_V_write : OUT STD_LOGIC;
    res_stream_V_data_13_V_din : OUT STD_LOGIC_VECTOR (27 downto 0);
    res_stream_V_data_13_V_full_n : IN STD_LOGIC;
    res_stream_V_data_13_V_write : OUT STD_LOGIC;
    res_stream_V_data_14_V_din : OUT STD_LOGIC_VECTOR (27 downto 0);
    res_stream_V_data_14_V_full_n : IN STD_LOGIC;
    res_stream_V_data_14_V_write : OUT STD_LOGIC;
    res_stream_V_data_15_V_din : OUT STD_LOGIC_VECTOR (27 downto 0);
    res_stream_V_data_15_V_full_n : IN STD_LOGIC;
    res_stream_V_data_15_V_write : OUT STD_LOGIC );
end;


architecture behav of dense_array_ap_fixed_4u_array_ap_fixed_28_16_1_0_0_16u_config15_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal data_stream_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal data_stream_V_data_1_V_blk_n : STD_LOGIC;
    signal data_stream_V_data_2_V_blk_n : STD_LOGIC;
    signal data_stream_V_data_3_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal res_stream_V_data_1_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_2_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_3_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_4_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_5_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_6_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_7_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_8_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_9_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_10_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_11_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_12_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_13_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_14_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_15_V_blk_n : STD_LOGIC;
    signal i_in_0_reg_676 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln36_fu_755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op177 : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_in_fu_761_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal trunc_ln203_fu_767_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln203_reg_1820 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_data_0_V16_reg_2144 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_data_1_V16_reg_2149 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V16_reg_2154 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V16_reg_2159 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_4_V_reg_2164 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_5_V_reg_2169 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_6_V_reg_2174 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_7_V_reg_2179 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_8_V_reg_2184 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_9_V_reg_2189 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_10_V_reg_2194 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_11_V_reg_2199 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_12_V_reg_2204 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_13_V_reg_2209 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_14_V_reg_2214 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_15_V_reg_2219 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_0 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_1 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_2 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_3 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_4 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_5 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_6 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_7 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_8 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_9 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_10 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_11 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_12 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_13 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_14 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_15 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_0_V_fu_356 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_1_V_fu_360 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V_fu_364 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V_fu_368 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_0_V_1_fu_372 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_1_V_1_fu_376 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V_1_fu_380 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V_1_fu_384 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_0_V_2_fu_388 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_1_V_2_fu_392 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V_2_fu_396 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V_2_fu_400 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_0_V_3_fu_404 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_1_V_3_fu_408 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V_3_fu_412 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V_3_fu_416 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_0_V_4_fu_420 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_1_V_4_fu_424 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V_4_fu_428 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V_4_fu_432 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_0_V_5_fu_436 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_1_V_5_fu_440 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V_5_fu_444 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V_5_fu_448 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_0_V_6_fu_452 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_1_V_6_fu_456 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V_6_fu_460 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V_6_fu_464 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_0_V_7_fu_468 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_1_V_7_fu_472 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V_7_fu_476 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V_7_fu_480 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_0_V_8_fu_484 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_1_V_8_fu_488 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V_8_fu_492 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V_8_fu_496 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_0_V_9_fu_500 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_1_V_9_fu_504 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V_9_fu_508 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V_9_fu_512 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_0_V_10_fu_516 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_1_V_10_fu_520 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V_10_fu_524 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V_10_fu_528 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_0_V_11_fu_532 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_1_V_11_fu_536 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V_11_fu_540 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V_11_fu_544 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_0_V_12_fu_548 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_1_V_12_fu_552 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V_12_fu_556 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V_12_fu_560 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_0_V_13_fu_564 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_1_V_13_fu_568 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V_13_fu_572 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V_13_fu_576 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_0_V_14_fu_580 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_1_V_14_fu_584 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V_14_fu_588 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V_14_fu_592 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_0_V_15_fu_596 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_1_V_15_fu_600 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_2_V_15_fu_604 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_data_3_V_15_fu_608 : STD_LOGIC_VECTOR (27 downto 0);
    signal io_acc_block_signal_op345 : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_29_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_30_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_31_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_32_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_33_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_34_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_35_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_36_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_37_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_38_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_39_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_40_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_41_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_42_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_43_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_44_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_45_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_46_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_47_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_48_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_49_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_50_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_51_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_52_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_53_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_54_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_55_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_56_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_57_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_58_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_59_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_60_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_61_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_62_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        data_63_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (27 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (27 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (27 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (27 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (27 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (27 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (27 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (27 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (27 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (27 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (27 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (27 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (27 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (27 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (27 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;



begin
    grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687 : component dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => tmp_data_0_V_fu_356,
        data_1_V_read => tmp_data_1_V_fu_360,
        data_2_V_read => tmp_data_2_V_fu_364,
        data_3_V_read => tmp_data_3_V_fu_368,
        data_4_V_read => tmp_data_0_V_1_fu_372,
        data_5_V_read => tmp_data_1_V_1_fu_376,
        data_6_V_read => tmp_data_2_V_1_fu_380,
        data_7_V_read => tmp_data_3_V_1_fu_384,
        data_8_V_read => tmp_data_0_V_2_fu_388,
        data_9_V_read => tmp_data_1_V_2_fu_392,
        data_10_V_read => tmp_data_2_V_2_fu_396,
        data_11_V_read => tmp_data_3_V_2_fu_400,
        data_12_V_read => tmp_data_0_V_3_fu_404,
        data_13_V_read => tmp_data_1_V_3_fu_408,
        data_14_V_read => tmp_data_2_V_3_fu_412,
        data_15_V_read => tmp_data_3_V_3_fu_416,
        data_16_V_read => tmp_data_0_V_4_fu_420,
        data_17_V_read => tmp_data_1_V_4_fu_424,
        data_18_V_read => tmp_data_2_V_4_fu_428,
        data_19_V_read => tmp_data_3_V_4_fu_432,
        data_20_V_read => tmp_data_0_V_5_fu_436,
        data_21_V_read => tmp_data_1_V_5_fu_440,
        data_22_V_read => tmp_data_2_V_5_fu_444,
        data_23_V_read => tmp_data_3_V_5_fu_448,
        data_24_V_read => tmp_data_0_V_6_fu_452,
        data_25_V_read => tmp_data_1_V_6_fu_456,
        data_26_V_read => tmp_data_2_V_6_fu_460,
        data_27_V_read => tmp_data_3_V_6_fu_464,
        data_28_V_read => tmp_data_0_V_7_fu_468,
        data_29_V_read => tmp_data_1_V_7_fu_472,
        data_30_V_read => tmp_data_2_V_7_fu_476,
        data_31_V_read => tmp_data_3_V_7_fu_480,
        data_32_V_read => tmp_data_0_V_8_fu_484,
        data_33_V_read => tmp_data_1_V_8_fu_488,
        data_34_V_read => tmp_data_2_V_8_fu_492,
        data_35_V_read => tmp_data_3_V_8_fu_496,
        data_36_V_read => tmp_data_0_V_9_fu_500,
        data_37_V_read => tmp_data_1_V_9_fu_504,
        data_38_V_read => tmp_data_2_V_9_fu_508,
        data_39_V_read => tmp_data_3_V_9_fu_512,
        data_40_V_read => tmp_data_0_V_10_fu_516,
        data_41_V_read => tmp_data_1_V_10_fu_520,
        data_42_V_read => tmp_data_2_V_10_fu_524,
        data_43_V_read => tmp_data_3_V_10_fu_528,
        data_44_V_read => tmp_data_0_V_11_fu_532,
        data_45_V_read => tmp_data_1_V_11_fu_536,
        data_46_V_read => tmp_data_2_V_11_fu_540,
        data_47_V_read => tmp_data_3_V_11_fu_544,
        data_48_V_read => tmp_data_0_V_12_fu_548,
        data_49_V_read => tmp_data_1_V_12_fu_552,
        data_50_V_read => tmp_data_2_V_12_fu_556,
        data_51_V_read => tmp_data_3_V_12_fu_560,
        data_52_V_read => tmp_data_0_V_13_fu_564,
        data_53_V_read => tmp_data_1_V_13_fu_568,
        data_54_V_read => tmp_data_2_V_13_fu_572,
        data_55_V_read => tmp_data_3_V_13_fu_576,
        data_56_V_read => tmp_data_0_V_14_fu_580,
        data_57_V_read => tmp_data_1_V_14_fu_584,
        data_58_V_read => tmp_data_2_V_14_fu_588,
        data_59_V_read => tmp_data_3_V_14_fu_592,
        data_60_V_read => tmp_data_0_V_15_fu_596,
        data_61_V_read => tmp_data_1_V_15_fu_600,
        data_62_V_read => tmp_data_2_V_15_fu_604,
        data_63_V_read => tmp_data_3_V_15_fu_608,
        ap_return_0 => grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_0,
        ap_return_1 => grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_1,
        ap_return_2 => grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_2,
        ap_return_3 => grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_3,
        ap_return_4 => grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_4,
        ap_return_5 => grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_5,
        ap_return_6 => grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_6,
        ap_return_7 => grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_7,
        ap_return_8 => grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_8,
        ap_return_9 => grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_9,
        ap_return_10 => grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_10,
        ap_return_11 => grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_11,
        ap_return_12 => grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_12,
        ap_return_13 => grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_13,
        ap_return_14 => grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_14,
        ap_return_15 => grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_15);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_in_0_reg_676_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln36_fu_755_p2 = ap_const_lv1_0))) then 
                i_in_0_reg_676 <= i_in_fu_761_p2;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_in_0_reg_676 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                tmp_data_0_V16_reg_2144 <= grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_0;
                tmp_data_10_V_reg_2194 <= grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_10;
                tmp_data_11_V_reg_2199 <= grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_11;
                tmp_data_12_V_reg_2204 <= grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_12;
                tmp_data_13_V_reg_2209 <= grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_13;
                tmp_data_14_V_reg_2214 <= grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_14;
                tmp_data_15_V_reg_2219 <= grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_15;
                tmp_data_1_V16_reg_2149 <= grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_1;
                tmp_data_2_V16_reg_2154 <= grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_2;
                tmp_data_3_V16_reg_2159 <= grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_3;
                tmp_data_4_V_reg_2164 <= grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_4;
                tmp_data_5_V_reg_2169 <= grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_5;
                tmp_data_6_V_reg_2174 <= grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_6;
                tmp_data_7_V_reg_2179 <= grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_7;
                tmp_data_8_V_reg_2184 <= grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_8;
                tmp_data_9_V_reg_2189 <= grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1820 = ap_const_lv4_A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_10_fu_516 <= data_stream_V_data_0_V_dout;
                tmp_data_1_V_10_fu_520 <= data_stream_V_data_1_V_dout;
                tmp_data_2_V_10_fu_524 <= data_stream_V_data_2_V_dout;
                tmp_data_3_V_10_fu_528 <= data_stream_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1820 = ap_const_lv4_B) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_11_fu_532 <= data_stream_V_data_0_V_dout;
                tmp_data_1_V_11_fu_536 <= data_stream_V_data_1_V_dout;
                tmp_data_2_V_11_fu_540 <= data_stream_V_data_2_V_dout;
                tmp_data_3_V_11_fu_544 <= data_stream_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1820 = ap_const_lv4_C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_12_fu_548 <= data_stream_V_data_0_V_dout;
                tmp_data_1_V_12_fu_552 <= data_stream_V_data_1_V_dout;
                tmp_data_2_V_12_fu_556 <= data_stream_V_data_2_V_dout;
                tmp_data_3_V_12_fu_560 <= data_stream_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1820 = ap_const_lv4_D) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_13_fu_564 <= data_stream_V_data_0_V_dout;
                tmp_data_1_V_13_fu_568 <= data_stream_V_data_1_V_dout;
                tmp_data_2_V_13_fu_572 <= data_stream_V_data_2_V_dout;
                tmp_data_3_V_13_fu_576 <= data_stream_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1820 = ap_const_lv4_E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_14_fu_580 <= data_stream_V_data_0_V_dout;
                tmp_data_1_V_14_fu_584 <= data_stream_V_data_1_V_dout;
                tmp_data_2_V_14_fu_588 <= data_stream_V_data_2_V_dout;
                tmp_data_3_V_14_fu_592 <= data_stream_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1820 = ap_const_lv4_F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_15_fu_596 <= data_stream_V_data_0_V_dout;
                tmp_data_1_V_15_fu_600 <= data_stream_V_data_1_V_dout;
                tmp_data_2_V_15_fu_604 <= data_stream_V_data_2_V_dout;
                tmp_data_3_V_15_fu_608 <= data_stream_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1820 = ap_const_lv4_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_1_fu_372 <= data_stream_V_data_0_V_dout;
                tmp_data_1_V_1_fu_376 <= data_stream_V_data_1_V_dout;
                tmp_data_2_V_1_fu_380 <= data_stream_V_data_2_V_dout;
                tmp_data_3_V_1_fu_384 <= data_stream_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1820 = ap_const_lv4_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_2_fu_388 <= data_stream_V_data_0_V_dout;
                tmp_data_1_V_2_fu_392 <= data_stream_V_data_1_V_dout;
                tmp_data_2_V_2_fu_396 <= data_stream_V_data_2_V_dout;
                tmp_data_3_V_2_fu_400 <= data_stream_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1820 = ap_const_lv4_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_3_fu_404 <= data_stream_V_data_0_V_dout;
                tmp_data_1_V_3_fu_408 <= data_stream_V_data_1_V_dout;
                tmp_data_2_V_3_fu_412 <= data_stream_V_data_2_V_dout;
                tmp_data_3_V_3_fu_416 <= data_stream_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1820 = ap_const_lv4_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_4_fu_420 <= data_stream_V_data_0_V_dout;
                tmp_data_1_V_4_fu_424 <= data_stream_V_data_1_V_dout;
                tmp_data_2_V_4_fu_428 <= data_stream_V_data_2_V_dout;
                tmp_data_3_V_4_fu_432 <= data_stream_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1820 = ap_const_lv4_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_5_fu_436 <= data_stream_V_data_0_V_dout;
                tmp_data_1_V_5_fu_440 <= data_stream_V_data_1_V_dout;
                tmp_data_2_V_5_fu_444 <= data_stream_V_data_2_V_dout;
                tmp_data_3_V_5_fu_448 <= data_stream_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1820 = ap_const_lv4_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_6_fu_452 <= data_stream_V_data_0_V_dout;
                tmp_data_1_V_6_fu_456 <= data_stream_V_data_1_V_dout;
                tmp_data_2_V_6_fu_460 <= data_stream_V_data_2_V_dout;
                tmp_data_3_V_6_fu_464 <= data_stream_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1820 = ap_const_lv4_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_7_fu_468 <= data_stream_V_data_0_V_dout;
                tmp_data_1_V_7_fu_472 <= data_stream_V_data_1_V_dout;
                tmp_data_2_V_7_fu_476 <= data_stream_V_data_2_V_dout;
                tmp_data_3_V_7_fu_480 <= data_stream_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1820 = ap_const_lv4_8) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_8_fu_484 <= data_stream_V_data_0_V_dout;
                tmp_data_1_V_8_fu_488 <= data_stream_V_data_1_V_dout;
                tmp_data_2_V_8_fu_492 <= data_stream_V_data_2_V_dout;
                tmp_data_3_V_8_fu_496 <= data_stream_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1820 = ap_const_lv4_9) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_9_fu_500 <= data_stream_V_data_0_V_dout;
                tmp_data_1_V_9_fu_504 <= data_stream_V_data_1_V_dout;
                tmp_data_2_V_9_fu_508 <= data_stream_V_data_2_V_dout;
                tmp_data_3_V_9_fu_512 <= data_stream_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1820 = ap_const_lv4_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_0_V_fu_356 <= data_stream_V_data_0_V_dout;
                tmp_data_1_V_fu_360 <= data_stream_V_data_1_V_dout;
                tmp_data_2_V_fu_364 <= data_stream_V_data_2_V_dout;
                tmp_data_3_V_fu_368 <= data_stream_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln36_fu_755_p2 = ap_const_lv1_0))) then
                trunc_ln203_reg_1820 <= trunc_ln203_fu_767_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state17, icmp_ln36_fu_755_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, io_acc_block_signal_op345)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln36_fu_755_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln36_fu_755_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state16 <= ap_CS_fsm(14);
    ap_CS_fsm_state17 <= ap_CS_fsm(15);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, io_acc_block_signal_op177)
    begin
                ap_block_pp0_stage0_11001 <= ((io_acc_block_signal_op177 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, io_acc_block_signal_op177)
    begin
                ap_block_pp0_stage0_subdone <= ((io_acc_block_signal_op177 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(io_acc_block_signal_op177)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (io_acc_block_signal_op177 = ap_const_logic_0);
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln36_fu_755_p2)
    begin
        if ((icmp_ln36_fu_755_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    data_stream_V_data_0_V_blk_n_assign_proc : process(data_stream_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_stream_V_data_0_V_blk_n <= data_stream_V_data_0_V_empty_n;
        else 
            data_stream_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_stream_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_1_V_blk_n_assign_proc : process(data_stream_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_stream_V_data_1_V_blk_n <= data_stream_V_data_1_V_empty_n;
        else 
            data_stream_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_stream_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_2_V_blk_n_assign_proc : process(data_stream_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_stream_V_data_2_V_blk_n <= data_stream_V_data_2_V_empty_n;
        else 
            data_stream_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_stream_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_3_V_blk_n_assign_proc : process(data_stream_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_stream_V_data_3_V_blk_n <= data_stream_V_data_3_V_empty_n;
        else 
            data_stream_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_stream_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;

    i_in_fu_761_p2 <= std_logic_vector(unsigned(i_in_0_reg_676) + unsigned(ap_const_lv5_1));
    icmp_ln36_fu_755_p2 <= "1" when (i_in_0_reg_676 = ap_const_lv5_10) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op177 <= (data_stream_V_data_3_V_empty_n and data_stream_V_data_2_V_empty_n and data_stream_V_data_1_V_empty_n and data_stream_V_data_0_V_empty_n);
    io_acc_block_signal_op345 <= (res_stream_V_data_9_V_full_n and res_stream_V_data_8_V_full_n and res_stream_V_data_7_V_full_n and res_stream_V_data_6_V_full_n and res_stream_V_data_5_V_full_n and res_stream_V_data_4_V_full_n and res_stream_V_data_3_V_full_n and res_stream_V_data_2_V_full_n and res_stream_V_data_1_V_full_n and res_stream_V_data_15_V_full_n and res_stream_V_data_14_V_full_n and res_stream_V_data_13_V_full_n and res_stream_V_data_12_V_full_n and res_stream_V_data_11_V_full_n and res_stream_V_data_10_V_full_n and res_stream_V_data_0_V_full_n);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_stream_V_data_0_V_blk_n_assign_proc : process(res_stream_V_data_0_V_full_n, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            res_stream_V_data_0_V_blk_n <= res_stream_V_data_0_V_full_n;
        else 
            res_stream_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_0_V_din <= tmp_data_0_V16_reg_2144;

    res_stream_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            res_stream_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_10_V_blk_n_assign_proc : process(res_stream_V_data_10_V_full_n, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            res_stream_V_data_10_V_blk_n <= res_stream_V_data_10_V_full_n;
        else 
            res_stream_V_data_10_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_10_V_din <= tmp_data_10_V_reg_2194;

    res_stream_V_data_10_V_write_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            res_stream_V_data_10_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_10_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_11_V_blk_n_assign_proc : process(res_stream_V_data_11_V_full_n, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            res_stream_V_data_11_V_blk_n <= res_stream_V_data_11_V_full_n;
        else 
            res_stream_V_data_11_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_11_V_din <= tmp_data_11_V_reg_2199;

    res_stream_V_data_11_V_write_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            res_stream_V_data_11_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_11_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_12_V_blk_n_assign_proc : process(res_stream_V_data_12_V_full_n, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            res_stream_V_data_12_V_blk_n <= res_stream_V_data_12_V_full_n;
        else 
            res_stream_V_data_12_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_12_V_din <= tmp_data_12_V_reg_2204;

    res_stream_V_data_12_V_write_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            res_stream_V_data_12_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_12_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_13_V_blk_n_assign_proc : process(res_stream_V_data_13_V_full_n, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            res_stream_V_data_13_V_blk_n <= res_stream_V_data_13_V_full_n;
        else 
            res_stream_V_data_13_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_13_V_din <= tmp_data_13_V_reg_2209;

    res_stream_V_data_13_V_write_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            res_stream_V_data_13_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_13_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_14_V_blk_n_assign_proc : process(res_stream_V_data_14_V_full_n, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            res_stream_V_data_14_V_blk_n <= res_stream_V_data_14_V_full_n;
        else 
            res_stream_V_data_14_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_14_V_din <= tmp_data_14_V_reg_2214;

    res_stream_V_data_14_V_write_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            res_stream_V_data_14_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_14_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_15_V_blk_n_assign_proc : process(res_stream_V_data_15_V_full_n, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            res_stream_V_data_15_V_blk_n <= res_stream_V_data_15_V_full_n;
        else 
            res_stream_V_data_15_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_15_V_din <= tmp_data_15_V_reg_2219;

    res_stream_V_data_15_V_write_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            res_stream_V_data_15_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_15_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_1_V_blk_n_assign_proc : process(res_stream_V_data_1_V_full_n, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            res_stream_V_data_1_V_blk_n <= res_stream_V_data_1_V_full_n;
        else 
            res_stream_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_1_V_din <= tmp_data_1_V16_reg_2149;

    res_stream_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            res_stream_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_2_V_blk_n_assign_proc : process(res_stream_V_data_2_V_full_n, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            res_stream_V_data_2_V_blk_n <= res_stream_V_data_2_V_full_n;
        else 
            res_stream_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_2_V_din <= tmp_data_2_V16_reg_2154;

    res_stream_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            res_stream_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_3_V_blk_n_assign_proc : process(res_stream_V_data_3_V_full_n, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            res_stream_V_data_3_V_blk_n <= res_stream_V_data_3_V_full_n;
        else 
            res_stream_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_3_V_din <= tmp_data_3_V16_reg_2159;

    res_stream_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            res_stream_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_4_V_blk_n_assign_proc : process(res_stream_V_data_4_V_full_n, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            res_stream_V_data_4_V_blk_n <= res_stream_V_data_4_V_full_n;
        else 
            res_stream_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_4_V_din <= tmp_data_4_V_reg_2164;

    res_stream_V_data_4_V_write_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            res_stream_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_5_V_blk_n_assign_proc : process(res_stream_V_data_5_V_full_n, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            res_stream_V_data_5_V_blk_n <= res_stream_V_data_5_V_full_n;
        else 
            res_stream_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_5_V_din <= tmp_data_5_V_reg_2169;

    res_stream_V_data_5_V_write_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            res_stream_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_6_V_blk_n_assign_proc : process(res_stream_V_data_6_V_full_n, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            res_stream_V_data_6_V_blk_n <= res_stream_V_data_6_V_full_n;
        else 
            res_stream_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_6_V_din <= tmp_data_6_V_reg_2174;

    res_stream_V_data_6_V_write_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            res_stream_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_7_V_blk_n_assign_proc : process(res_stream_V_data_7_V_full_n, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            res_stream_V_data_7_V_blk_n <= res_stream_V_data_7_V_full_n;
        else 
            res_stream_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_7_V_din <= tmp_data_7_V_reg_2179;

    res_stream_V_data_7_V_write_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            res_stream_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_8_V_blk_n_assign_proc : process(res_stream_V_data_8_V_full_n, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            res_stream_V_data_8_V_blk_n <= res_stream_V_data_8_V_full_n;
        else 
            res_stream_V_data_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_8_V_din <= tmp_data_8_V_reg_2184;

    res_stream_V_data_8_V_write_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            res_stream_V_data_8_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_8_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_9_V_blk_n_assign_proc : process(res_stream_V_data_9_V_full_n, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            res_stream_V_data_9_V_blk_n <= res_stream_V_data_9_V_full_n;
        else 
            res_stream_V_data_9_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_9_V_din <= tmp_data_9_V_reg_2189;

    res_stream_V_data_9_V_write_assign_proc : process(ap_CS_fsm_state17, io_acc_block_signal_op345)
    begin
        if (((io_acc_block_signal_op345 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            res_stream_V_data_9_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_9_V_write <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln203_fu_767_p1 <= i_in_0_reg_676(4 - 1 downto 0);
end behav;
