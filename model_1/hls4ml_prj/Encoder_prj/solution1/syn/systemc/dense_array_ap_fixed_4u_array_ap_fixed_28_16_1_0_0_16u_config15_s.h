// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_array_ap_fixed_4u_array_ap_fixed_28_16_1_0_0_16u_config15_s_HH_
#define _dense_array_ap_fixed_4u_array_ap_fixed_28_16_1_0_0_16u_config15_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s.h"

namespace ap_rtl {

struct dense_array_ap_fixed_4u_array_ap_fixed_28_16_1_0_0_16u_config15_s : public sc_module {
    // Port declarations 70
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<28> > data_stream_V_data_0_V_dout;
    sc_in< sc_logic > data_stream_V_data_0_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_0_V_read;
    sc_in< sc_lv<28> > data_stream_V_data_1_V_dout;
    sc_in< sc_logic > data_stream_V_data_1_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_1_V_read;
    sc_in< sc_lv<28> > data_stream_V_data_2_V_dout;
    sc_in< sc_logic > data_stream_V_data_2_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_2_V_read;
    sc_in< sc_lv<28> > data_stream_V_data_3_V_dout;
    sc_in< sc_logic > data_stream_V_data_3_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_3_V_read;
    sc_out< sc_lv<28> > res_stream_V_data_0_V_din;
    sc_in< sc_logic > res_stream_V_data_0_V_full_n;
    sc_out< sc_logic > res_stream_V_data_0_V_write;
    sc_out< sc_lv<28> > res_stream_V_data_1_V_din;
    sc_in< sc_logic > res_stream_V_data_1_V_full_n;
    sc_out< sc_logic > res_stream_V_data_1_V_write;
    sc_out< sc_lv<28> > res_stream_V_data_2_V_din;
    sc_in< sc_logic > res_stream_V_data_2_V_full_n;
    sc_out< sc_logic > res_stream_V_data_2_V_write;
    sc_out< sc_lv<28> > res_stream_V_data_3_V_din;
    sc_in< sc_logic > res_stream_V_data_3_V_full_n;
    sc_out< sc_logic > res_stream_V_data_3_V_write;
    sc_out< sc_lv<28> > res_stream_V_data_4_V_din;
    sc_in< sc_logic > res_stream_V_data_4_V_full_n;
    sc_out< sc_logic > res_stream_V_data_4_V_write;
    sc_out< sc_lv<28> > res_stream_V_data_5_V_din;
    sc_in< sc_logic > res_stream_V_data_5_V_full_n;
    sc_out< sc_logic > res_stream_V_data_5_V_write;
    sc_out< sc_lv<28> > res_stream_V_data_6_V_din;
    sc_in< sc_logic > res_stream_V_data_6_V_full_n;
    sc_out< sc_logic > res_stream_V_data_6_V_write;
    sc_out< sc_lv<28> > res_stream_V_data_7_V_din;
    sc_in< sc_logic > res_stream_V_data_7_V_full_n;
    sc_out< sc_logic > res_stream_V_data_7_V_write;
    sc_out< sc_lv<28> > res_stream_V_data_8_V_din;
    sc_in< sc_logic > res_stream_V_data_8_V_full_n;
    sc_out< sc_logic > res_stream_V_data_8_V_write;
    sc_out< sc_lv<28> > res_stream_V_data_9_V_din;
    sc_in< sc_logic > res_stream_V_data_9_V_full_n;
    sc_out< sc_logic > res_stream_V_data_9_V_write;
    sc_out< sc_lv<28> > res_stream_V_data_10_V_din;
    sc_in< sc_logic > res_stream_V_data_10_V_full_n;
    sc_out< sc_logic > res_stream_V_data_10_V_write;
    sc_out< sc_lv<28> > res_stream_V_data_11_V_din;
    sc_in< sc_logic > res_stream_V_data_11_V_full_n;
    sc_out< sc_logic > res_stream_V_data_11_V_write;
    sc_out< sc_lv<28> > res_stream_V_data_12_V_din;
    sc_in< sc_logic > res_stream_V_data_12_V_full_n;
    sc_out< sc_logic > res_stream_V_data_12_V_write;
    sc_out< sc_lv<28> > res_stream_V_data_13_V_din;
    sc_in< sc_logic > res_stream_V_data_13_V_full_n;
    sc_out< sc_logic > res_stream_V_data_13_V_write;
    sc_out< sc_lv<28> > res_stream_V_data_14_V_din;
    sc_in< sc_logic > res_stream_V_data_14_V_full_n;
    sc_out< sc_logic > res_stream_V_data_14_V_write;
    sc_out< sc_lv<28> > res_stream_V_data_15_V_din;
    sc_in< sc_logic > res_stream_V_data_15_V_full_n;
    sc_out< sc_logic > res_stream_V_data_15_V_write;


    // Module declarations
    dense_array_ap_fixed_4u_array_ap_fixed_28_16_1_0_0_16u_config15_s(sc_module_name name);
    SC_HAS_PROCESS(dense_array_ap_fixed_4u_array_ap_fixed_28_16_1_0_0_16u_config15_s);

    ~dense_array_ap_fixed_4u_array_ap_fixed_28_16_1_0_0_16u_config15_s();

    sc_trace_file* mVcdFile;

    dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s* grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > data_stream_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > data_stream_V_data_1_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_2_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_3_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > res_stream_V_data_1_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_2_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_3_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_4_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_5_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_6_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_7_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_8_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_9_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_10_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_11_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_12_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_13_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_14_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_15_V_blk_n;
    sc_signal< sc_lv<5> > i_in_0_reg_676;
    sc_signal< sc_lv<1> > icmp_ln36_fu_755_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< sc_logic > io_acc_block_signal_op177;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<5> > i_in_fu_761_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<4> > trunc_ln203_fu_767_p1;
    sc_signal< sc_lv<4> > trunc_ln203_reg_1820;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<28> > tmp_data_0_V16_reg_2144;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<28> > tmp_data_1_V16_reg_2149;
    sc_signal< sc_lv<28> > tmp_data_2_V16_reg_2154;
    sc_signal< sc_lv<28> > tmp_data_3_V16_reg_2159;
    sc_signal< sc_lv<28> > tmp_data_4_V_reg_2164;
    sc_signal< sc_lv<28> > tmp_data_5_V_reg_2169;
    sc_signal< sc_lv<28> > tmp_data_6_V_reg_2174;
    sc_signal< sc_lv<28> > tmp_data_7_V_reg_2179;
    sc_signal< sc_lv<28> > tmp_data_8_V_reg_2184;
    sc_signal< sc_lv<28> > tmp_data_9_V_reg_2189;
    sc_signal< sc_lv<28> > tmp_data_10_V_reg_2194;
    sc_signal< sc_lv<28> > tmp_data_11_V_reg_2199;
    sc_signal< sc_lv<28> > tmp_data_12_V_reg_2204;
    sc_signal< sc_lv<28> > tmp_data_13_V_reg_2209;
    sc_signal< sc_lv<28> > tmp_data_14_V_reg_2214;
    sc_signal< sc_lv<28> > tmp_data_15_V_reg_2219;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<28> > grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_0;
    sc_signal< sc_lv<28> > grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_1;
    sc_signal< sc_lv<28> > grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_2;
    sc_signal< sc_lv<28> > grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_3;
    sc_signal< sc_lv<28> > grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_4;
    sc_signal< sc_lv<28> > grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_5;
    sc_signal< sc_lv<28> > grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_6;
    sc_signal< sc_lv<28> > grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_7;
    sc_signal< sc_lv<28> > grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_8;
    sc_signal< sc_lv<28> > grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_9;
    sc_signal< sc_lv<28> > grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_10;
    sc_signal< sc_lv<28> > grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_11;
    sc_signal< sc_lv<28> > grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_12;
    sc_signal< sc_lv<28> > grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_13;
    sc_signal< sc_lv<28> > grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_14;
    sc_signal< sc_lv<28> > grp_dense_wrapper_ap_fixed_28_16_1_0_0_ap_fixed_28_16_1_0_0_config15_s_fu_687_ap_return_15;
    sc_signal< sc_lv<28> > tmp_data_0_V_fu_356;
    sc_signal< sc_lv<28> > tmp_data_1_V_fu_360;
    sc_signal< sc_lv<28> > tmp_data_2_V_fu_364;
    sc_signal< sc_lv<28> > tmp_data_3_V_fu_368;
    sc_signal< sc_lv<28> > tmp_data_0_V_1_fu_372;
    sc_signal< sc_lv<28> > tmp_data_1_V_1_fu_376;
    sc_signal< sc_lv<28> > tmp_data_2_V_1_fu_380;
    sc_signal< sc_lv<28> > tmp_data_3_V_1_fu_384;
    sc_signal< sc_lv<28> > tmp_data_0_V_2_fu_388;
    sc_signal< sc_lv<28> > tmp_data_1_V_2_fu_392;
    sc_signal< sc_lv<28> > tmp_data_2_V_2_fu_396;
    sc_signal< sc_lv<28> > tmp_data_3_V_2_fu_400;
    sc_signal< sc_lv<28> > tmp_data_0_V_3_fu_404;
    sc_signal< sc_lv<28> > tmp_data_1_V_3_fu_408;
    sc_signal< sc_lv<28> > tmp_data_2_V_3_fu_412;
    sc_signal< sc_lv<28> > tmp_data_3_V_3_fu_416;
    sc_signal< sc_lv<28> > tmp_data_0_V_4_fu_420;
    sc_signal< sc_lv<28> > tmp_data_1_V_4_fu_424;
    sc_signal< sc_lv<28> > tmp_data_2_V_4_fu_428;
    sc_signal< sc_lv<28> > tmp_data_3_V_4_fu_432;
    sc_signal< sc_lv<28> > tmp_data_0_V_5_fu_436;
    sc_signal< sc_lv<28> > tmp_data_1_V_5_fu_440;
    sc_signal< sc_lv<28> > tmp_data_2_V_5_fu_444;
    sc_signal< sc_lv<28> > tmp_data_3_V_5_fu_448;
    sc_signal< sc_lv<28> > tmp_data_0_V_6_fu_452;
    sc_signal< sc_lv<28> > tmp_data_1_V_6_fu_456;
    sc_signal< sc_lv<28> > tmp_data_2_V_6_fu_460;
    sc_signal< sc_lv<28> > tmp_data_3_V_6_fu_464;
    sc_signal< sc_lv<28> > tmp_data_0_V_7_fu_468;
    sc_signal< sc_lv<28> > tmp_data_1_V_7_fu_472;
    sc_signal< sc_lv<28> > tmp_data_2_V_7_fu_476;
    sc_signal< sc_lv<28> > tmp_data_3_V_7_fu_480;
    sc_signal< sc_lv<28> > tmp_data_0_V_8_fu_484;
    sc_signal< sc_lv<28> > tmp_data_1_V_8_fu_488;
    sc_signal< sc_lv<28> > tmp_data_2_V_8_fu_492;
    sc_signal< sc_lv<28> > tmp_data_3_V_8_fu_496;
    sc_signal< sc_lv<28> > tmp_data_0_V_9_fu_500;
    sc_signal< sc_lv<28> > tmp_data_1_V_9_fu_504;
    sc_signal< sc_lv<28> > tmp_data_2_V_9_fu_508;
    sc_signal< sc_lv<28> > tmp_data_3_V_9_fu_512;
    sc_signal< sc_lv<28> > tmp_data_0_V_10_fu_516;
    sc_signal< sc_lv<28> > tmp_data_1_V_10_fu_520;
    sc_signal< sc_lv<28> > tmp_data_2_V_10_fu_524;
    sc_signal< sc_lv<28> > tmp_data_3_V_10_fu_528;
    sc_signal< sc_lv<28> > tmp_data_0_V_11_fu_532;
    sc_signal< sc_lv<28> > tmp_data_1_V_11_fu_536;
    sc_signal< sc_lv<28> > tmp_data_2_V_11_fu_540;
    sc_signal< sc_lv<28> > tmp_data_3_V_11_fu_544;
    sc_signal< sc_lv<28> > tmp_data_0_V_12_fu_548;
    sc_signal< sc_lv<28> > tmp_data_1_V_12_fu_552;
    sc_signal< sc_lv<28> > tmp_data_2_V_12_fu_556;
    sc_signal< sc_lv<28> > tmp_data_3_V_12_fu_560;
    sc_signal< sc_lv<28> > tmp_data_0_V_13_fu_564;
    sc_signal< sc_lv<28> > tmp_data_1_V_13_fu_568;
    sc_signal< sc_lv<28> > tmp_data_2_V_13_fu_572;
    sc_signal< sc_lv<28> > tmp_data_3_V_13_fu_576;
    sc_signal< sc_lv<28> > tmp_data_0_V_14_fu_580;
    sc_signal< sc_lv<28> > tmp_data_1_V_14_fu_584;
    sc_signal< sc_lv<28> > tmp_data_2_V_14_fu_588;
    sc_signal< sc_lv<28> > tmp_data_3_V_14_fu_592;
    sc_signal< sc_lv<28> > tmp_data_0_V_15_fu_596;
    sc_signal< sc_lv<28> > tmp_data_1_V_15_fu_600;
    sc_signal< sc_lv<28> > tmp_data_2_V_15_fu_604;
    sc_signal< sc_lv<28> > tmp_data_3_V_15_fu_608;
    sc_signal< sc_logic > io_acc_block_signal_op345;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_fsm_state1;
    static const sc_lv<16> ap_ST_fsm_pp0_stage0;
    static const sc_lv<16> ap_ST_fsm_state4;
    static const sc_lv<16> ap_ST_fsm_state5;
    static const sc_lv<16> ap_ST_fsm_state6;
    static const sc_lv<16> ap_ST_fsm_state7;
    static const sc_lv<16> ap_ST_fsm_state8;
    static const sc_lv<16> ap_ST_fsm_state9;
    static const sc_lv<16> ap_ST_fsm_state10;
    static const sc_lv<16> ap_ST_fsm_state11;
    static const sc_lv<16> ap_ST_fsm_state12;
    static const sc_lv<16> ap_ST_fsm_state13;
    static const sc_lv<16> ap_ST_fsm_state14;
    static const sc_lv<16> ap_ST_fsm_state15;
    static const sc_lv<16> ap_ST_fsm_state16;
    static const sc_lv<16> ap_ST_fsm_state17;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_data_stream_V_data_0_V_blk_n();
    void thread_data_stream_V_data_0_V_read();
    void thread_data_stream_V_data_1_V_blk_n();
    void thread_data_stream_V_data_1_V_read();
    void thread_data_stream_V_data_2_V_blk_n();
    void thread_data_stream_V_data_2_V_read();
    void thread_data_stream_V_data_3_V_blk_n();
    void thread_data_stream_V_data_3_V_read();
    void thread_i_in_fu_761_p2();
    void thread_icmp_ln36_fu_755_p2();
    void thread_internal_ap_ready();
    void thread_io_acc_block_signal_op177();
    void thread_io_acc_block_signal_op345();
    void thread_real_start();
    void thread_res_stream_V_data_0_V_blk_n();
    void thread_res_stream_V_data_0_V_din();
    void thread_res_stream_V_data_0_V_write();
    void thread_res_stream_V_data_10_V_blk_n();
    void thread_res_stream_V_data_10_V_din();
    void thread_res_stream_V_data_10_V_write();
    void thread_res_stream_V_data_11_V_blk_n();
    void thread_res_stream_V_data_11_V_din();
    void thread_res_stream_V_data_11_V_write();
    void thread_res_stream_V_data_12_V_blk_n();
    void thread_res_stream_V_data_12_V_din();
    void thread_res_stream_V_data_12_V_write();
    void thread_res_stream_V_data_13_V_blk_n();
    void thread_res_stream_V_data_13_V_din();
    void thread_res_stream_V_data_13_V_write();
    void thread_res_stream_V_data_14_V_blk_n();
    void thread_res_stream_V_data_14_V_din();
    void thread_res_stream_V_data_14_V_write();
    void thread_res_stream_V_data_15_V_blk_n();
    void thread_res_stream_V_data_15_V_din();
    void thread_res_stream_V_data_15_V_write();
    void thread_res_stream_V_data_1_V_blk_n();
    void thread_res_stream_V_data_1_V_din();
    void thread_res_stream_V_data_1_V_write();
    void thread_res_stream_V_data_2_V_blk_n();
    void thread_res_stream_V_data_2_V_din();
    void thread_res_stream_V_data_2_V_write();
    void thread_res_stream_V_data_3_V_blk_n();
    void thread_res_stream_V_data_3_V_din();
    void thread_res_stream_V_data_3_V_write();
    void thread_res_stream_V_data_4_V_blk_n();
    void thread_res_stream_V_data_4_V_din();
    void thread_res_stream_V_data_4_V_write();
    void thread_res_stream_V_data_5_V_blk_n();
    void thread_res_stream_V_data_5_V_din();
    void thread_res_stream_V_data_5_V_write();
    void thread_res_stream_V_data_6_V_blk_n();
    void thread_res_stream_V_data_6_V_din();
    void thread_res_stream_V_data_6_V_write();
    void thread_res_stream_V_data_7_V_blk_n();
    void thread_res_stream_V_data_7_V_din();
    void thread_res_stream_V_data_7_V_write();
    void thread_res_stream_V_data_8_V_blk_n();
    void thread_res_stream_V_data_8_V_din();
    void thread_res_stream_V_data_8_V_write();
    void thread_res_stream_V_data_9_V_blk_n();
    void thread_res_stream_V_data_9_V_din();
    void thread_res_stream_V_data_9_V_write();
    void thread_start_out();
    void thread_start_write();
    void thread_trunc_ln203_fu_767_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
