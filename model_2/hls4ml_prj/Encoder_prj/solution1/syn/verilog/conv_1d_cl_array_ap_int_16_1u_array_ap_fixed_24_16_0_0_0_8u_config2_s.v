// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_1d_cl_array_ap_int_16_1u_array_ap_fixed_24_16_0_0_0_8u_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_V_dout,
        data_V_data_V_empty_n,
        data_V_data_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write,
        res_V_data_5_V_din,
        res_V_data_5_V_full_n,
        res_V_data_5_V_write,
        res_V_data_6_V_din,
        res_V_data_6_V_full_n,
        res_V_data_6_V_write,
        res_V_data_7_V_din,
        res_V_data_7_V_full_n,
        res_V_data_7_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_data_V_dout;
input   data_V_data_V_empty_n;
output   data_V_data_V_read;
output  [23:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [23:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [23:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [23:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [23:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;
output  [23:0] res_V_data_5_V_din;
input   res_V_data_5_V_full_n;
output   res_V_data_5_V_write;
output  [23:0] res_V_data_6_V_din;
input   res_V_data_6_V_full_n;
output   res_V_data_6_V_write;
output  [23:0] res_V_data_7_V_din;
input   res_V_data_7_V_full_n;
output   res_V_data_7_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;
reg res_V_data_4_V_write;
reg res_V_data_5_V_write;
reg res_V_data_6_V_write;
reg res_V_data_7_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [15:0] kernel_data_V_3_2;
reg   [15:0] kernel_data_V_3_1;
reg   [31:0] sX;
reg   [31:0] pX;
reg   [15:0] kernel_data_V_3_0;
reg    data_V_data_V_blk_n;
wire    ap_CS_fsm_state2;
reg    res_V_data_0_V_blk_n;
wire    ap_CS_fsm_state6;
reg   [0:0] and_ln360_reg_5888;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg    res_V_data_4_V_blk_n;
reg    res_V_data_5_V_blk_n;
reg    res_V_data_6_V_blk_n;
reg    res_V_data_7_V_blk_n;
reg  signed [15:0] tmp_data_0_V_reg_5833;
reg   [15:0] kernel_data_V_3_2_load_reg_5851;
wire   [6:0] i_iw_1_fu_401_p2;
reg   [6:0] i_iw_1_reg_5856;
wire   [1:0] i_iw_fu_413_p2;
wire    ap_CS_fsm_state3;
reg   [31:0] sX_load_reg_5872;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln360_fu_451_p2;
reg   [0:0] icmp_ln360_reg_5877;
reg   [31:0] pX_load_reg_5882;
wire   [0:0] and_ln360_fu_477_p2;
wire  signed [23:0] select_ln340_2049_fu_741_p3;
reg  signed [23:0] select_ln340_2049_reg_5892;
reg  signed [15:0] kernel_data_V_3_1_load_1_reg_5898;
wire   [0:0] tmp_4102_fu_764_p3;
reg   [0:0] tmp_4102_reg_5908;
wire  signed [22:0] mul_ln731_fu_5670_p2;
reg  signed [22:0] mul_ln731_reg_5914;
wire   [0:0] and_ln785_512_fu_790_p2;
reg   [0:0] and_ln785_512_reg_5919;
reg   [0:0] tmp_4104_reg_5925;
wire  signed [23:0] select_ln340_2055_fu_1043_p3;
reg  signed [23:0] select_ln340_2055_reg_5931;
wire   [0:0] tmp_4117_fu_1051_p3;
reg   [0:0] tmp_4117_reg_5937;
wire  signed [23:0] mul_ln731_1_fu_5687_p2;
reg  signed [23:0] mul_ln731_1_reg_5943;
wire   [0:0] and_ln785_515_fu_1076_p2;
reg   [0:0] and_ln785_515_reg_5949;
reg   [0:0] tmp_4119_reg_5955;
wire  signed [23:0] select_ln340_2060_fu_1230_p3;
reg  signed [23:0] select_ln340_2060_reg_5961;
wire   [0:0] tmp_4142_fu_1241_p3;
reg   [0:0] tmp_4142_reg_5967;
wire  signed [23:0] mul_ln731_2_fu_5703_p2;
reg  signed [23:0] mul_ln731_2_reg_5973;
wire   [0:0] and_ln785_520_fu_1267_p2;
reg   [0:0] and_ln785_520_reg_5979;
reg   [0:0] tmp_4144_reg_5985;
wire   [0:0] tmp_4157_fu_1289_p3;
reg   [0:0] tmp_4157_reg_5991;
wire  signed [23:0] mul_ln731_4_fu_5719_p2;
reg  signed [23:0] mul_ln731_4_reg_5997;
wire   [0:0] and_ln785_523_fu_1315_p2;
reg   [0:0] and_ln785_523_reg_6003;
reg   [0:0] tmp_4159_reg_6009;
wire   [0:0] tmp_4172_fu_1337_p3;
reg   [0:0] tmp_4172_reg_6015;
wire  signed [23:0] mul_ln731_6_fu_5735_p2;
reg  signed [23:0] mul_ln731_6_reg_6021;
wire   [0:0] and_ln785_526_fu_1363_p2;
reg   [0:0] and_ln785_526_reg_6027;
reg   [0:0] tmp_4174_reg_6033;
wire   [0:0] tmp_4177_fu_1382_p3;
reg   [0:0] tmp_4177_reg_6039;
wire  signed [23:0] mul_ln731_7_fu_5752_p2;
reg  signed [23:0] mul_ln731_7_reg_6045;
wire   [0:0] and_ln785_527_fu_1407_p2;
reg   [0:0] and_ln785_527_reg_6051;
reg   [0:0] tmp_4179_reg_6057;
wire  signed [23:0] select_ln340_2085_fu_1631_p3;
reg  signed [23:0] select_ln340_2085_reg_6063;
wire   [0:0] tmp_4192_fu_1642_p3;
reg   [0:0] tmp_4192_reg_6069;
wire  signed [22:0] mul_ln731_9_fu_5768_p2;
reg  signed [22:0] mul_ln731_9_reg_6075;
wire   [0:0] and_ln785_530_fu_1668_p2;
reg   [0:0] and_ln785_530_reg_6080;
reg   [0:0] tmp_4194_reg_6086;
wire  signed [23:0] select_ln340_2091_fu_1883_p3;
reg  signed [23:0] select_ln340_2091_reg_6092;
wire   [0:0] tmp_4207_fu_1894_p3;
reg   [0:0] tmp_4207_reg_6098;
wire  signed [22:0] mul_ln731_10_fu_5784_p2;
reg  signed [22:0] mul_ln731_10_reg_6104;
wire   [0:0] and_ln785_533_fu_1920_p2;
reg   [0:0] and_ln785_533_reg_6109;
reg   [0:0] tmp_4209_reg_6115;
wire   [23:0] tmp_data_0_V_19_fu_2334_p3;
reg   [23:0] tmp_data_0_V_19_reg_6121;
wire    ap_CS_fsm_state5;
wire   [23:0] tmp_data_1_V_fu_2729_p3;
reg   [23:0] tmp_data_1_V_reg_6126;
wire  signed [23:0] select_ln340_2063_fu_3068_p3;
reg  signed [23:0] select_ln340_2063_reg_6131;
wire  signed [23:0] select_ln340_2064_fu_3175_p3;
reg  signed [23:0] select_ln340_2064_reg_6137;
wire  signed [23:0] select_ln340_2069_fu_3540_p3;
reg  signed [23:0] select_ln340_2069_reg_6143;
wire  signed [23:0] mul_ln731_3_fu_5800_p2;
reg  signed [23:0] mul_ln731_3_reg_6149;
wire   [0:0] and_ln785_522_fu_3577_p2;
reg   [0:0] and_ln785_522_reg_6155;
wire   [0:0] and_ln786_1569_fu_3602_p2;
reg   [0:0] and_ln786_1569_reg_6160;
wire   [0:0] or_ln340_2081_fu_3620_p2;
reg   [0:0] or_ln340_2081_reg_6166;
wire  signed [23:0] select_ln340_2075_fu_3985_p3;
reg  signed [23:0] select_ln340_2075_reg_6171;
wire  signed [23:0] mul_ln731_5_fu_5817_p2;
reg  signed [23:0] mul_ln731_5_reg_6177;
wire   [0:0] and_ln785_525_fu_4018_p2;
reg   [0:0] and_ln785_525_reg_6183;
wire   [0:0] and_ln786_1578_fu_4042_p2;
reg   [0:0] and_ln786_1578_reg_6188;
wire   [0:0] or_ln340_2090_fu_4060_p2;
reg   [0:0] or_ln340_2090_reg_6194;
wire  signed [23:0] select_ln340_2081_fu_4338_p3;
reg  signed [23:0] select_ln340_2081_reg_6199;
wire  signed [21:0] mul_ln731_8_fu_5825_p2;
reg  signed [21:0] mul_ln731_8_reg_6205;
wire   [0:0] and_ln785_528_fu_4383_p2;
reg   [0:0] and_ln785_528_reg_6210;
wire   [0:0] and_ln786_1587_fu_4408_p2;
reg   [0:0] and_ln786_1587_reg_6215;
wire   [0:0] or_ln340_2099_fu_4426_p2;
reg   [0:0] or_ln340_2099_reg_6221;
wire   [23:0] tmp_data_6_V_fu_4813_p3;
reg   [23:0] tmp_data_6_V_reg_6226;
wire   [23:0] tmp_data_7_V_fu_5176_p3;
reg   [23:0] tmp_data_7_V_reg_6231;
reg   [6:0] i_iw_0_i1_reg_360;
reg    ap_block_state1;
wire    io_acc_block_signal_op899;
reg    ap_block_state6;
wire   [0:0] icmp_ln64_fu_5656_p2;
reg   [1:0] i_iw_0_i_i_i_reg_372;
wire   [0:0] icmp_ln166_fu_407_p2;
wire   [31:0] select_ln391_fu_5636_p3;
reg   [31:0] ap_phi_mux_storemerge_i_i_phi_fu_386_p4;
wire   [0:0] icmp_ln384_fu_5615_p2;
wire   [15:0] select_ln180_fu_423_p3;
wire   [0:0] trunc_ln172_fu_419_p1;
wire   [31:0] add_ln389_fu_5620_p2;
wire   [30:0] tmp_4096_fu_461_p4;
wire   [0:0] icmp_ln360_1_fu_471_p2;
wire  signed [15:0] sext_ln1116_fu_487_p0;
wire  signed [15:0] sext_ln1118_fu_491_p0;
wire  signed [15:0] sext_ln1118_512_fu_495_p0;
wire  signed [15:0] sext_ln1118_513_fu_499_p0;
wire  signed [15:0] shl_ln_fu_503_p1;
wire  signed [19:0] shl_ln_fu_503_p3;
wire  signed [20:0] sext_ln1118_515_fu_515_p1;
wire  signed [20:0] sub_ln1118_fu_519_p2;
wire  signed [15:0] shl_ln1_fu_541_p1;
wire   [20:0] shl_ln1_fu_541_p3;
wire  signed [21:0] sext_ln731_fu_549_p1;
wire  signed [21:0] sub_ln731_fu_553_p2;
wire  signed [21:0] sext_ln1118_516_fu_525_p1;
wire   [21:0] or_ln785_fu_563_p2;
wire   [0:0] tmp_4097_fu_533_p3;
wire   [0:0] tmp_4098_fu_569_p3;
wire   [0:0] xor_ln785_fu_577_p2;
wire   [21:0] and_ln786_fu_589_p2;
wire   [0:0] tmp_4099_fu_595_p3;
wire   [0:0] xor_ln786_1047_fu_603_p2;
wire   [0:0] and_ln786_1536_fu_609_p2;
wire   [0:0] and_ln785_fu_583_p2;
wire   [0:0] xor_ln340_1048_fu_621_p2;
wire   [0:0] or_ln340_2119_fu_627_p2;
wire   [0:0] or_ln340_fu_615_p2;
wire  signed [23:0] sext_ln731_1_fu_559_p1;
wire   [0:0] or_ln340_2048_fu_633_p2;
wire   [23:0] select_ln340_fu_639_p3;
wire   [23:0] select_ln388_fu_647_p3;
wire  signed [23:0] select_ln340_2048_fu_655_p3;
wire  signed [24:0] sext_ln703_fu_663_p1;
wire   [24:0] add_ln1192_fu_667_p2;
wire   [23:0] acc_0_V_fu_681_p2;
wire   [0:0] tmp_4101_fu_687_p3;
wire   [0:0] tmp_4100_fu_673_p3;
wire   [0:0] xor_ln786_fu_695_p2;
wire   [0:0] xor_ln340_512_fu_713_p2;
wire   [0:0] xor_ln340_1024_fu_707_p2;
wire   [0:0] and_ln786_1537_fu_701_p2;
wire   [0:0] or_ln340_2049_fu_719_p2;
wire   [23:0] select_ln340_1024_fu_725_p3;
wire   [23:0] acc_0_V_63_fu_733_p3;
wire  signed [15:0] sext_ln1116_32_fu_749_p0;
wire  signed [15:0] sext_ln1118_518_fu_753_p0;
wire  signed [15:0] sext_ln1118_519_fu_757_p0;
wire  signed [21:0] mul_ln1118_fu_5662_p2;
wire  signed [22:0] sext_ln1118_521_fu_761_p1;
wire   [22:0] or_ln785_512_fu_771_p2;
wire   [0:0] tmp_4103_fu_776_p3;
wire   [0:0] xor_ln785_512_fu_784_p2;
wire   [22:0] and_ln786_1538_fu_796_p2;
wire  signed [21:0] sext_ln1118_512_fu_495_p1;
wire  signed [21:0] add_ln1118_fu_809_p2;
wire  signed [15:0] shl_ln731_2_fu_827_p1;
wire   [21:0] shl_ln731_2_fu_827_p3;
wire  signed [15:0] shl_ln731_3_fu_839_p1;
wire  signed [16:0] shl_ln731_3_fu_839_p3;
wire  signed [22:0] sext_ln731_5_fu_835_p1;
wire  signed [22:0] sext_ln731_7_fu_851_p1;
wire  signed [22:0] add_ln731_fu_855_p2;
wire  signed [22:0] sext_ln1118_527_fu_815_p1;
wire   [22:0] or_ln785_514_fu_865_p2;
wire   [0:0] tmp_4112_fu_819_p3;
wire   [0:0] tmp_4113_fu_871_p3;
wire   [0:0] xor_ln785_514_fu_879_p2;
wire   [22:0] and_ln786_1544_fu_891_p2;
wire   [0:0] tmp_4114_fu_897_p3;
wire   [0:0] xor_ln786_1050_fu_905_p2;
wire   [0:0] and_ln786_1545_fu_911_p2;
wire   [0:0] and_ln785_514_fu_885_p2;
wire   [0:0] xor_ln340_1050_fu_923_p2;
wire   [0:0] or_ln340_2122_fu_929_p2;
wire   [0:0] or_ln340_2056_fu_917_p2;
wire  signed [23:0] sext_ln731_8_fu_861_p1;
wire   [0:0] or_ln340_2057_fu_935_p2;
wire   [23:0] select_ln340_1029_fu_941_p3;
wire   [23:0] select_ln388_1029_fu_949_p3;
wire  signed [23:0] select_ln340_2054_fu_957_p3;
wire  signed [24:0] sext_ln703_1028_fu_965_p1;
wire   [24:0] add_ln1192_514_fu_969_p2;
wire   [23:0] acc_1_V_fu_983_p2;
wire   [0:0] tmp_4116_fu_989_p3;
wire   [0:0] tmp_4115_fu_975_p3;
wire   [0:0] xor_ln786_1026_fu_997_p2;
wire   [0:0] xor_ln340_518_fu_1015_p2;
wire   [0:0] xor_ln340_1027_fu_1009_p2;
wire   [0:0] and_ln786_1546_fu_1003_p2;
wire   [0:0] or_ln340_2058_fu_1021_p2;
wire   [23:0] select_ln340_1030_fu_1027_p3;
wire   [23:0] acc_1_V_63_fu_1035_p3;
wire  signed [23:0] mul_ln1118_512_fu_5678_p2;
wire   [23:0] or_ln785_515_fu_1058_p2;
wire   [0:0] tmp_4118_fu_1062_p3;
wire   [0:0] xor_ln785_515_fu_1070_p2;
wire   [23:0] and_ln786_1547_fu_1082_p2;
wire  signed [15:0] shl_ln1118_3_fu_1094_p1;
wire  signed [18:0] shl_ln1118_3_fu_1094_p3;
wire  signed [21:0] sext_ln1118_531_fu_1106_p1;
wire  signed [21:0] sub_ln1118_2_fu_1110_p2;
wire  signed [22:0] sext_ln1118_514_fu_511_p1;
wire  signed [22:0] sub_ln731_2_fu_1128_p2;
wire  signed [22:0] sext_ln1118_532_fu_1116_p1;
wire   [22:0] or_ln785_517_fu_1138_p2;
wire   [0:0] tmp_4127_fu_1120_p3;
wire   [0:0] tmp_4128_fu_1144_p3;
wire   [0:0] xor_ln785_517_fu_1152_p2;
wire   [22:0] and_ln786_1553_fu_1164_p2;
wire   [0:0] tmp_4129_fu_1170_p3;
wire   [0:0] xor_ln786_1053_fu_1178_p2;
wire   [0:0] and_ln786_1554_fu_1184_p2;
wire   [0:0] and_ln785_517_fu_1158_p2;
wire   [0:0] xor_ln340_1053_fu_1196_p2;
wire   [0:0] or_ln340_2125_fu_1202_p2;
wire   [0:0] or_ln340_2065_fu_1190_p2;
wire  signed [23:0] sext_ln731_13_fu_1134_p1;
wire   [0:0] or_ln340_2066_fu_1208_p2;
wire   [23:0] select_ln340_1035_fu_1214_p3;
wire   [23:0] select_ln388_1035_fu_1222_p3;
wire  signed [22:0] mul_ln1118_513_fu_5695_p2;
wire  signed [23:0] sext_ln1118_535_fu_1238_p1;
wire   [23:0] or_ln785_520_fu_1248_p2;
wire   [0:0] tmp_4143_fu_1253_p3;
wire   [0:0] xor_ln785_520_fu_1261_p2;
wire   [23:0] and_ln786_1562_fu_1273_p2;
wire  signed [22:0] mul_ln1118_515_fu_5711_p2;
wire  signed [23:0] sext_ln1118_538_fu_1286_p1;
wire   [23:0] or_ln785_523_fu_1296_p2;
wire   [0:0] tmp_4158_fu_1301_p3;
wire   [0:0] xor_ln785_523_fu_1309_p2;
wire   [23:0] and_ln786_1571_fu_1321_p2;
wire  signed [22:0] mul_ln1118_517_fu_5727_p2;
wire  signed [23:0] sext_ln1118_540_fu_1334_p1;
wire   [23:0] or_ln785_526_fu_1344_p2;
wire   [0:0] tmp_4173_fu_1349_p3;
wire   [0:0] xor_ln785_526_fu_1357_p2;
wire   [23:0] and_ln786_1580_fu_1369_p2;
wire  signed [23:0] mul_ln1118_518_fu_5743_p2;
wire   [23:0] or_ln785_527_fu_1389_p2;
wire   [0:0] tmp_4178_fu_1393_p3;
wire   [0:0] xor_ln785_527_fu_1401_p2;
wire   [23:0] and_ln786_1583_fu_1413_p2;
wire  signed [20:0] sext_ln1118_513_fu_499_p1;
wire  signed [20:0] add_ln1118_2_fu_1425_p2;
wire  signed [21:0] sext_ln731_6_fu_847_p1;
wire  signed [21:0] add_ln731_2_fu_1443_p2;
wire  signed [21:0] sext_ln1118_542_fu_1431_p1;
wire   [21:0] or_ln785_529_fu_1453_p2;
wire   [0:0] tmp_4187_fu_1435_p3;
wire   [0:0] tmp_4188_fu_1459_p3;
wire   [0:0] xor_ln785_529_fu_1467_p2;
wire   [21:0] and_ln786_1589_fu_1479_p2;
wire   [0:0] tmp_4189_fu_1485_p3;
wire   [0:0] xor_ln786_1065_fu_1493_p2;
wire   [0:0] and_ln786_1590_fu_1499_p2;
wire   [0:0] and_ln785_529_fu_1473_p2;
wire   [0:0] xor_ln340_1065_fu_1511_p2;
wire   [0:0] or_ln340_2137_fu_1517_p2;
wire   [0:0] or_ln340_2101_fu_1505_p2;
wire  signed [23:0] sext_ln731_22_fu_1449_p1;
wire   [0:0] or_ln340_2102_fu_1523_p2;
wire   [23:0] select_ln340_1059_fu_1529_p3;
wire   [23:0] select_ln388_1059_fu_1537_p3;
wire  signed [23:0] select_ln340_2084_fu_1545_p3;
wire  signed [24:0] sext_ln703_1053_fu_1553_p1;
wire   [24:0] add_ln1192_529_fu_1557_p2;
wire   [23:0] acc_6_V_fu_1571_p2;
wire   [0:0] tmp_4191_fu_1577_p3;
wire   [0:0] tmp_4190_fu_1563_p3;
wire   [0:0] xor_ln786_1041_fu_1585_p2;
wire   [0:0] xor_ln340_548_fu_1603_p2;
wire   [0:0] xor_ln340_1042_fu_1597_p2;
wire   [0:0] and_ln786_1591_fu_1591_p2;
wire   [0:0] or_ln340_2103_fu_1609_p2;
wire   [23:0] select_ln340_1060_fu_1615_p3;
wire   [23:0] acc_6_V_63_fu_1623_p3;
wire  signed [21:0] mul_ln1118_520_fu_5760_p2;
wire  signed [22:0] sext_ln1118_543_fu_1639_p1;
wire   [22:0] or_ln785_530_fu_1649_p2;
wire   [0:0] tmp_4193_fu_1654_p3;
wire   [0:0] xor_ln785_530_fu_1662_p2;
wire   [22:0] and_ln786_1592_fu_1674_p2;
wire  signed [19:0] sext_ln1118_530_fu_1102_p1;
wire  signed [19:0] sub_ln1118_6_fu_1687_p2;
wire  signed [20:0] sext_ln700_1_fu_1693_p1;
wire   [20:0] or_ln785_532_fu_1705_p2;
wire   [0:0] tmp_4202_fu_1697_p3;
wire   [0:0] tmp_4203_fu_1711_p3;
wire   [0:0] xor_ln785_532_fu_1719_p2;
wire   [20:0] and_ln786_1598_fu_1731_p2;
wire   [0:0] tmp_4204_fu_1737_p3;
wire   [0:0] xor_ln786_1068_fu_1745_p2;
wire   [0:0] and_ln786_1599_fu_1751_p2;
wire   [0:0] and_ln785_532_fu_1725_p2;
wire   [0:0] xor_ln340_1068_fu_1763_p2;
wire   [0:0] or_ln340_2140_fu_1769_p2;
wire   [0:0] or_ln340_2110_fu_1757_p2;
wire  signed [23:0] sext_ln1118_517_fu_529_p1;
wire   [0:0] or_ln340_2111_fu_1775_p2;
wire   [23:0] select_ln340_1065_fu_1781_p3;
wire   [23:0] select_ln388_1065_fu_1789_p3;
wire  signed [23:0] select_ln340_2090_fu_1797_p3;
wire  signed [24:0] sext_ln703_1058_fu_1805_p1;
wire   [24:0] add_ln1192_532_fu_1809_p2;
wire   [23:0] acc_7_V_fu_1823_p2;
wire   [0:0] tmp_4206_fu_1829_p3;
wire   [0:0] tmp_4205_fu_1815_p3;
wire   [0:0] xor_ln786_1044_fu_1837_p2;
wire   [0:0] xor_ln340_554_fu_1855_p2;
wire   [0:0] xor_ln340_1045_fu_1849_p2;
wire   [0:0] and_ln786_1600_fu_1843_p2;
wire   [0:0] or_ln340_2112_fu_1861_p2;
wire   [23:0] select_ln340_1066_fu_1867_p3;
wire   [23:0] acc_7_V_63_fu_1875_p3;
wire  signed [21:0] mul_ln1118_521_fu_5776_p2;
wire  signed [22:0] sext_ln1118_545_fu_1891_p1;
wire   [22:0] or_ln785_533_fu_1901_p2;
wire   [0:0] tmp_4208_fu_1906_p3;
wire   [0:0] xor_ln785_533_fu_1914_p2;
wire   [22:0] and_ln786_1601_fu_1926_p2;
wire   [0:0] xor_ln786_1048_fu_1945_p2;
wire   [0:0] and_ln786_1539_fu_1950_p2;
wire   [0:0] xor_ln340_fu_1960_p2;
wire   [0:0] or_ln340_2120_fu_1965_p2;
wire   [0:0] or_ln340_2050_fu_1955_p2;
wire  signed [23:0] sext_ln731_2_fu_1942_p1;
wire   [0:0] or_ln340_2051_fu_1970_p2;
wire   [23:0] select_ln340_1025_fu_1975_p3;
wire   [23:0] select_ln388_1025_fu_1983_p3;
wire  signed [23:0] select_ln340_2050_fu_1991_p3;
wire  signed [24:0] sext_ln703_1024_fu_1999_p1;
wire  signed [24:0] sext_ln703_1025_fu_2002_p1;
wire   [24:0] add_ln1192_512_fu_2006_p2;
wire   [23:0] acc_0_V_64_fu_2020_p2;
wire   [0:0] tmp_4106_fu_2025_p3;
wire   [0:0] tmp_4105_fu_2012_p3;
wire   [0:0] xor_ln786_1024_fu_2033_p2;
wire   [0:0] xor_ln340_514_fu_2051_p2;
wire   [0:0] xor_ln340_1025_fu_2045_p2;
wire   [0:0] and_ln786_1540_fu_2039_p2;
wire   [0:0] or_ln340_2052_fu_2057_p2;
wire   [23:0] select_ln340_1026_fu_2063_p3;
wire   [23:0] acc_0_V_65_fu_2071_p3;
wire   [18:0] shl_ln1118_1_fu_2102_p3;
wire  signed [19:0] sext_ln1118_526_fu_2109_p1;
wire  signed [19:0] sub_ln1118_1_fu_2113_p2;
wire   [19:0] shl_ln731_1_fu_2131_p3;
wire  signed [20:0] sext_ln731_3_fu_2138_p1;
wire  signed [20:0] sub_ln731_1_fu_2142_p2;
wire  signed [20:0] sext_ln700_fu_2119_p1;
wire   [20:0] or_ln785_513_fu_2152_p2;
wire   [0:0] tmp_4107_fu_2123_p3;
wire   [0:0] tmp_4108_fu_2158_p3;
wire   [0:0] xor_ln785_513_fu_2166_p2;
wire   [20:0] and_ln786_1541_fu_2178_p2;
wire   [0:0] tmp_4109_fu_2184_p3;
wire   [0:0] xor_ln786_1049_fu_2192_p2;
wire   [0:0] and_ln786_1542_fu_2198_p2;
wire   [0:0] and_ln785_513_fu_2172_p2;
wire   [0:0] xor_ln340_1049_fu_2210_p2;
wire   [0:0] or_ln340_2121_fu_2216_p2;
wire   [0:0] or_ln340_2053_fu_2204_p2;
wire  signed [23:0] sext_ln731_4_fu_2148_p1;
wire   [0:0] or_ln340_2054_fu_2222_p2;
wire   [23:0] select_ln340_1027_fu_2228_p3;
wire   [23:0] select_ln388_1027_fu_2236_p3;
wire  signed [23:0] select_ln340_2051_fu_2079_p3;
wire  signed [23:0] select_ln340_2052_fu_2244_p3;
wire  signed [24:0] sext_ln703_1026_fu_2252_p1;
wire  signed [24:0] sext_ln703_1027_fu_2256_p1;
wire   [24:0] add_ln1192_513_fu_2260_p2;
wire   [23:0] acc_0_V_66_fu_2274_p2;
wire   [0:0] tmp_4111_fu_2280_p3;
wire   [0:0] tmp_4110_fu_2266_p3;
wire   [0:0] xor_ln786_1025_fu_2288_p2;
wire   [0:0] xor_ln340_516_fu_2306_p2;
wire   [0:0] xor_ln340_1026_fu_2300_p2;
wire   [0:0] and_ln786_1543_fu_2294_p2;
wire   [0:0] or_ln340_2055_fu_2312_p2;
wire   [23:0] select_ln340_1028_fu_2318_p3;
wire   [23:0] acc_0_V_67_fu_2326_p3;
wire   [0:0] xor_ln786_1051_fu_2342_p2;
wire   [0:0] and_ln786_1548_fu_2347_p2;
wire   [0:0] xor_ln340_1051_fu_2357_p2;
wire   [0:0] or_ln340_2123_fu_2362_p2;
wire   [0:0] or_ln340_2059_fu_2352_p2;
wire   [0:0] or_ln340_2060_fu_2367_p2;
wire   [23:0] select_ln340_1031_fu_2372_p3;
wire   [23:0] select_ln388_1031_fu_2379_p3;
wire  signed [23:0] select_ln340_2056_fu_2386_p3;
wire  signed [24:0] sext_ln703_1029_fu_2394_p1;
wire  signed [24:0] sext_ln703_1030_fu_2397_p1;
wire   [24:0] add_ln1192_515_fu_2401_p2;
wire   [23:0] acc_1_V_64_fu_2415_p2;
wire   [0:0] tmp_4121_fu_2420_p3;
wire   [0:0] tmp_4120_fu_2407_p3;
wire   [0:0] xor_ln786_1027_fu_2428_p2;
wire   [0:0] xor_ln340_520_fu_2446_p2;
wire   [0:0] xor_ln340_1028_fu_2440_p2;
wire   [0:0] and_ln786_1549_fu_2434_p2;
wire   [0:0] or_ln340_2061_fu_2452_p2;
wire   [23:0] select_ln340_1032_fu_2458_p3;
wire   [23:0] acc_1_V_65_fu_2466_p3;
wire   [21:0] shl_ln1118_2_fu_2482_p3;
wire  signed [22:0] sext_ln1118_528_fu_2489_p1;
wire  signed [22:0] sext_ln1118_524_fu_2096_p1;
wire  signed [22:0] add_ln1118_1_fu_2493_p2;
wire   [22:0] shl_ln731_4_fu_2511_p3;
wire  signed [16:0] shl_ln731_5_fu_2522_p3;
wire  signed [23:0] sext_ln731_9_fu_2518_p1;
wire  signed [23:0] sext_ln731_12_fu_2537_p1;
wire   [23:0] add_ln731_1_fu_2541_p2;
wire  signed [23:0] sext_ln1118_529_fu_2499_p1;
wire   [23:0] or_ln785_516_fu_2547_p2;
wire   [0:0] tmp_4122_fu_2503_p3;
wire   [0:0] tmp_4123_fu_2553_p3;
wire   [0:0] xor_ln785_516_fu_2561_p2;
wire   [23:0] and_ln786_1550_fu_2573_p2;
wire   [0:0] tmp_4124_fu_2579_p3;
wire   [0:0] xor_ln786_1052_fu_2587_p2;
wire   [0:0] and_ln786_1551_fu_2593_p2;
wire   [0:0] and_ln785_516_fu_2567_p2;
wire   [0:0] xor_ln340_1052_fu_2605_p2;
wire   [0:0] or_ln340_2124_fu_2611_p2;
wire   [0:0] or_ln340_2062_fu_2599_p2;
wire   [0:0] or_ln340_2063_fu_2617_p2;
wire   [23:0] select_ln340_1033_fu_2623_p3;
wire   [23:0] select_ln388_1033_fu_2631_p3;
wire  signed [23:0] select_ln340_2057_fu_2474_p3;
wire  signed [23:0] select_ln340_2058_fu_2639_p3;
wire  signed [24:0] sext_ln703_1031_fu_2647_p1;
wire  signed [24:0] sext_ln703_1032_fu_2651_p1;
wire   [24:0] add_ln1192_516_fu_2655_p2;
wire   [23:0] acc_1_V_66_fu_2669_p2;
wire   [0:0] tmp_4126_fu_2675_p3;
wire   [0:0] tmp_4125_fu_2661_p3;
wire   [0:0] xor_ln786_1028_fu_2683_p2;
wire   [0:0] xor_ln340_522_fu_2701_p2;
wire   [0:0] xor_ln340_1029_fu_2695_p2;
wire   [0:0] and_ln786_1552_fu_2689_p2;
wire   [0:0] or_ln340_2064_fu_2707_p2;
wire   [23:0] select_ln340_1034_fu_2713_p3;
wire   [23:0] acc_1_V_67_fu_2721_p3;
wire  signed [24:0] sext_ln703_1033_fu_2737_p1;
wire   [24:0] add_ln1192_517_fu_2740_p2;
wire   [23:0] acc_2_V_fu_2754_p2;
wire   [0:0] tmp_4131_fu_2759_p3;
wire   [0:0] tmp_4130_fu_2746_p3;
wire   [0:0] xor_ln786_1029_fu_2767_p2;
wire   [0:0] xor_ln340_524_fu_2785_p2;
wire   [0:0] xor_ln340_1030_fu_2779_p2;
wire   [0:0] and_ln786_1555_fu_2773_p2;
wire   [0:0] or_ln340_2067_fu_2791_p2;
wire   [23:0] select_ln340_1036_fu_2797_p3;
wire   [23:0] acc_2_V_63_fu_2805_p3;
wire  signed [19:0] shl_ln1118_4_fu_2821_p3;
wire  signed [20:0] sext_ln1118_533_fu_2828_p1;
wire  signed [20:0] sext_ln1118_520_fu_1939_p1;
wire  signed [20:0] sub_ln1118_3_fu_2832_p2;
wire   [20:0] shl_ln731_6_fu_2850_p3;
wire  signed [16:0] shl_ln731_7_fu_2861_p3;
wire  signed [21:0] sext_ln731_14_fu_2857_p1;
wire  signed [21:0] sext_ln731_16_fu_2872_p1;
wire  signed [21:0] sub_ln731_3_fu_2876_p2;
wire  signed [21:0] sext_ln1118_534_fu_2838_p1;
wire   [21:0] or_ln785_518_fu_2886_p2;
wire   [0:0] tmp_4132_fu_2842_p3;
wire   [0:0] tmp_4133_fu_2892_p3;
wire   [0:0] xor_ln785_518_fu_2900_p2;
wire   [21:0] and_ln786_1556_fu_2912_p2;
wire   [0:0] tmp_4134_fu_2918_p3;
wire   [0:0] xor_ln786_1054_fu_2926_p2;
wire   [0:0] and_ln786_1557_fu_2932_p2;
wire   [0:0] and_ln785_518_fu_2906_p2;
wire   [0:0] xor_ln340_1054_fu_2944_p2;
wire   [0:0] or_ln340_2126_fu_2950_p2;
wire   [0:0] or_ln340_2068_fu_2938_p2;
wire  signed [23:0] sext_ln731_17_fu_2882_p1;
wire   [0:0] or_ln340_2069_fu_2956_p2;
wire   [23:0] select_ln340_1037_fu_2962_p3;
wire   [23:0] select_ln388_1037_fu_2970_p3;
wire  signed [23:0] select_ln340_2061_fu_2813_p3;
wire  signed [23:0] select_ln340_2062_fu_2978_p3;
wire  signed [24:0] sext_ln703_1034_fu_2986_p1;
wire  signed [24:0] sext_ln703_1035_fu_2990_p1;
wire   [24:0] add_ln1192_518_fu_2994_p2;
wire   [23:0] acc_2_V_64_fu_3008_p2;
wire   [0:0] tmp_4136_fu_3014_p3;
wire   [0:0] tmp_4135_fu_3000_p3;
wire   [0:0] xor_ln786_1030_fu_3022_p2;
wire   [0:0] xor_ln340_526_fu_3040_p2;
wire   [0:0] xor_ln340_1031_fu_3034_p2;
wire   [0:0] and_ln786_1558_fu_3028_p2;
wire   [0:0] or_ln340_2070_fu_3046_p2;
wire   [23:0] select_ln340_1038_fu_3052_p3;
wire   [23:0] acc_2_V_65_fu_3060_p3;
wire  signed [16:0] sext_ln1118_523_fu_2093_p1;
wire   [16:0] or_ln785_519_fu_3083_p2;
wire   [0:0] tmp_4137_fu_3076_p3;
wire   [0:0] tmp_4138_fu_3089_p3;
wire   [0:0] xor_ln785_519_fu_3097_p2;
wire   [16:0] and_ln786_1559_fu_3109_p2;
wire   [0:0] tmp_4139_fu_3115_p3;
wire   [0:0] xor_ln786_1055_fu_3123_p2;
wire   [0:0] and_ln786_1560_fu_3129_p2;
wire   [0:0] and_ln785_519_fu_3103_p2;
wire   [0:0] xor_ln340_1055_fu_3141_p2;
wire   [0:0] or_ln340_2127_fu_3147_p2;
wire   [0:0] or_ln340_2071_fu_3135_p2;
wire   [0:0] or_ln340_2072_fu_3153_p2;
wire   [23:0] select_ln340_1039_fu_3159_p3;
wire   [23:0] select_ln388_1039_fu_3167_p3;
wire   [0:0] xor_ln786_1056_fu_3183_p2;
wire   [0:0] and_ln786_1563_fu_3188_p2;
wire   [0:0] xor_ln340_1056_fu_3198_p2;
wire   [0:0] or_ln340_2128_fu_3203_p2;
wire   [0:0] or_ln340_2074_fu_3193_p2;
wire   [0:0] or_ln340_2075_fu_3208_p2;
wire   [23:0] select_ln340_1041_fu_3213_p3;
wire   [23:0] select_ln388_1041_fu_3220_p3;
wire  signed [23:0] select_ln340_2066_fu_3227_p3;
wire  signed [24:0] sext_ln703_1038_fu_3235_p1;
wire   [24:0] add_ln1192_520_fu_3239_p2;
wire   [23:0] acc_3_V_fu_3253_p2;
wire   [0:0] tmp_4146_fu_3259_p3;
wire   [0:0] tmp_4145_fu_3245_p3;
wire   [0:0] xor_ln786_1032_fu_3267_p2;
wire   [0:0] xor_ln340_530_fu_3285_p2;
wire   [0:0] xor_ln340_1033_fu_3279_p2;
wire   [0:0] and_ln786_1564_fu_3273_p2;
wire   [0:0] or_ln340_2076_fu_3291_p2;
wire   [23:0] select_ln340_1042_fu_3297_p3;
wire   [23:0] acc_3_V_63_fu_3305_p3;
wire  signed [19:0] sext_ln1118_547_fu_3321_p1;
wire   [20:0] sub_ln1118_7_fu_3324_p2;
wire   [19:0] sub_ln1118_8_fu_3330_p2;
wire  signed [21:0] sub_ln731_4_fu_3348_p2;
wire  signed [21:0] sext_ln1118_536_fu_3336_p1;
wire   [21:0] or_ln785_521_fu_3358_p2;
wire   [0:0] tmp_4147_fu_3340_p3;
wire   [0:0] tmp_4148_fu_3364_p3;
wire   [0:0] xor_ln785_521_fu_3372_p2;
wire   [21:0] and_ln786_1565_fu_3384_p2;
wire   [0:0] tmp_4149_fu_3390_p3;
wire   [0:0] xor_ln786_1057_fu_3398_p2;
wire   [0:0] and_ln786_1566_fu_3404_p2;
wire   [0:0] and_ln785_521_fu_3378_p2;
wire   [0:0] xor_ln340_1057_fu_3416_p2;
wire   [0:0] or_ln340_2129_fu_3422_p2;
wire   [0:0] or_ln340_2077_fu_3410_p2;
wire  signed [23:0] sext_ln731_18_fu_3354_p1;
wire   [0:0] or_ln340_2078_fu_3428_p2;
wire   [23:0] select_ln340_1043_fu_3434_p3;
wire   [23:0] select_ln388_1043_fu_3442_p3;
wire  signed [23:0] select_ln340_2067_fu_3313_p3;
wire  signed [23:0] select_ln340_2068_fu_3450_p3;
wire  signed [24:0] sext_ln703_1039_fu_3458_p1;
wire  signed [24:0] sext_ln703_1040_fu_3462_p1;
wire   [24:0] add_ln1192_521_fu_3466_p2;
wire   [23:0] acc_3_V_64_fu_3480_p2;
wire   [0:0] tmp_4151_fu_3486_p3;
wire   [0:0] tmp_4150_fu_3472_p3;
wire   [0:0] xor_ln786_1033_fu_3494_p2;
wire   [0:0] xor_ln340_532_fu_3512_p2;
wire   [0:0] xor_ln340_1034_fu_3506_p2;
wire   [0:0] and_ln786_1567_fu_3500_p2;
wire   [0:0] or_ln340_2079_fu_3518_p2;
wire   [23:0] select_ln340_1044_fu_3524_p3;
wire   [23:0] acc_3_V_65_fu_3532_p3;
wire  signed [22:0] mul_ln1118_514_fu_5792_p2;
wire  signed [23:0] sext_ln1118_537_fu_3548_p1;
wire   [23:0] or_ln785_522_fu_3558_p2;
wire   [0:0] tmp_4152_fu_3551_p3;
wire   [0:0] tmp_4153_fu_3563_p3;
wire   [0:0] xor_ln785_522_fu_3571_p2;
wire   [23:0] and_ln786_1568_fu_3583_p2;
wire   [0:0] tmp_4154_fu_3588_p3;
wire   [0:0] xor_ln786_1058_fu_3596_p2;
wire   [0:0] xor_ln340_1058_fu_3608_p2;
wire   [0:0] or_ln340_2130_fu_3614_p2;
wire   [0:0] xor_ln786_1059_fu_3626_p2;
wire   [0:0] and_ln786_1572_fu_3631_p2;
wire   [0:0] xor_ln340_1059_fu_3641_p2;
wire   [0:0] or_ln340_2131_fu_3646_p2;
wire   [0:0] or_ln340_2083_fu_3636_p2;
wire   [0:0] or_ln340_2084_fu_3651_p2;
wire   [23:0] select_ln340_1047_fu_3656_p3;
wire   [23:0] select_ln388_1047_fu_3663_p3;
wire  signed [23:0] select_ln340_2072_fu_3670_p3;
wire  signed [24:0] sext_ln703_1043_fu_3678_p1;
wire   [24:0] add_ln1192_523_fu_3682_p2;
wire   [23:0] acc_4_V_fu_3696_p2;
wire   [0:0] tmp_4161_fu_3702_p3;
wire   [0:0] tmp_4160_fu_3688_p3;
wire   [0:0] xor_ln786_1035_fu_3710_p2;
wire   [0:0] xor_ln340_536_fu_3728_p2;
wire   [0:0] xor_ln340_1036_fu_3722_p2;
wire   [0:0] and_ln786_1573_fu_3716_p2;
wire   [0:0] or_ln340_2085_fu_3734_p2;
wire   [23:0] select_ln340_1048_fu_3740_p3;
wire   [23:0] acc_4_V_63_fu_3748_p3;
wire  signed [20:0] sext_ln731_15_fu_2868_p1;
wire  signed [20:0] sub_ln1118_4_fu_3764_p2;
wire   [17:0] shl_ln731_8_fu_3782_p3;
wire  signed [21:0] sext_ln731_19_fu_3789_p1;
wire  signed [21:0] sub_ln731_5_fu_3793_p2;
wire  signed [21:0] sext_ln1118_539_fu_3770_p1;
wire   [21:0] or_ln785_524_fu_3803_p2;
wire   [0:0] tmp_4162_fu_3774_p3;
wire   [0:0] tmp_4163_fu_3809_p3;
wire   [0:0] xor_ln785_524_fu_3817_p2;
wire   [21:0] and_ln786_1574_fu_3829_p2;
wire   [0:0] tmp_4164_fu_3835_p3;
wire   [0:0] xor_ln786_1060_fu_3843_p2;
wire   [0:0] and_ln786_1575_fu_3849_p2;
wire   [0:0] and_ln785_524_fu_3823_p2;
wire   [0:0] xor_ln340_1060_fu_3861_p2;
wire   [0:0] or_ln340_2132_fu_3867_p2;
wire   [0:0] or_ln340_2086_fu_3855_p2;
wire  signed [23:0] sext_ln731_20_fu_3799_p1;
wire   [0:0] or_ln340_2087_fu_3873_p2;
wire   [23:0] select_ln340_1049_fu_3879_p3;
wire   [23:0] select_ln388_1049_fu_3887_p3;
wire  signed [23:0] select_ln340_2073_fu_3756_p3;
wire  signed [23:0] select_ln340_2074_fu_3895_p3;
wire  signed [24:0] sext_ln703_1044_fu_3903_p1;
wire  signed [24:0] sext_ln703_1045_fu_3907_p1;
wire   [24:0] add_ln1192_524_fu_3911_p2;
wire   [23:0] acc_4_V_64_fu_3925_p2;
wire   [0:0] tmp_4166_fu_3931_p3;
wire   [0:0] tmp_4165_fu_3917_p3;
wire   [0:0] xor_ln786_1036_fu_3939_p2;
wire   [0:0] xor_ln340_538_fu_3957_p2;
wire   [0:0] xor_ln340_1037_fu_3951_p2;
wire   [0:0] and_ln786_1576_fu_3945_p2;
wire   [0:0] or_ln340_2088_fu_3963_p2;
wire   [23:0] select_ln340_1050_fu_3969_p3;
wire   [23:0] acc_4_V_65_fu_3977_p3;
wire  signed [23:0] mul_ln1118_516_fu_5808_p2;
wire   [23:0] or_ln785_525_fu_4000_p2;
wire   [0:0] tmp_4167_fu_3993_p3;
wire   [0:0] tmp_4168_fu_4004_p3;
wire   [0:0] xor_ln785_525_fu_4012_p2;
wire   [23:0] and_ln786_1577_fu_4024_p2;
wire   [0:0] tmp_4169_fu_4028_p3;
wire   [0:0] xor_ln786_1061_fu_4036_p2;
wire   [0:0] xor_ln340_1061_fu_4048_p2;
wire   [0:0] or_ln340_2133_fu_4054_p2;
wire   [0:0] xor_ln786_1062_fu_4066_p2;
wire   [0:0] and_ln786_1581_fu_4071_p2;
wire   [0:0] xor_ln340_1062_fu_4081_p2;
wire   [0:0] or_ln340_2134_fu_4086_p2;
wire   [0:0] or_ln340_2092_fu_4076_p2;
wire   [0:0] or_ln340_2093_fu_4091_p2;
wire   [23:0] select_ln340_1053_fu_4096_p3;
wire   [23:0] select_ln388_1053_fu_4103_p3;
wire  signed [23:0] select_ln340_2078_fu_4110_p3;
wire  signed [24:0] sext_ln703_1048_fu_4118_p1;
wire   [24:0] add_ln1192_526_fu_4122_p2;
wire   [23:0] acc_5_V_fu_4136_p2;
wire   [0:0] tmp_4176_fu_4142_p3;
wire   [0:0] tmp_4175_fu_4128_p3;
wire   [0:0] xor_ln786_1038_fu_4150_p2;
wire   [0:0] xor_ln340_542_fu_4168_p2;
wire   [0:0] xor_ln340_1039_fu_4162_p2;
wire   [0:0] and_ln786_1582_fu_4156_p2;
wire   [0:0] or_ln340_2094_fu_4174_p2;
wire   [23:0] select_ln340_1054_fu_4180_p3;
wire   [23:0] acc_5_V_63_fu_4188_p3;
wire   [0:0] xor_ln786_1063_fu_4204_p2;
wire   [0:0] and_ln786_1584_fu_4209_p2;
wire   [0:0] xor_ln340_1063_fu_4219_p2;
wire   [0:0] or_ln340_2135_fu_4224_p2;
wire   [0:0] or_ln340_2095_fu_4214_p2;
wire   [0:0] or_ln340_2096_fu_4229_p2;
wire   [23:0] select_ln340_1055_fu_4234_p3;
wire   [23:0] select_ln388_1055_fu_4241_p3;
wire  signed [23:0] select_ln340_2079_fu_4196_p3;
wire  signed [23:0] select_ln340_2080_fu_4248_p3;
wire  signed [24:0] sext_ln703_1049_fu_4256_p1;
wire  signed [24:0] sext_ln703_1050_fu_4260_p1;
wire   [24:0] add_ln1192_527_fu_4264_p2;
wire   [23:0] acc_5_V_64_fu_4278_p2;
wire   [0:0] tmp_4181_fu_4284_p3;
wire   [0:0] tmp_4180_fu_4270_p3;
wire   [0:0] xor_ln786_1039_fu_4292_p2;
wire   [0:0] xor_ln340_544_fu_4310_p2;
wire   [0:0] xor_ln340_1040_fu_4304_p2;
wire   [0:0] and_ln786_1585_fu_4298_p2;
wire   [0:0] or_ln340_2097_fu_4316_p2;
wire   [23:0] select_ln340_1056_fu_4322_p3;
wire   [23:0] acc_5_V_65_fu_4330_p3;
wire  signed [15:0] mul_ln1118_519_fu_4346_p1;
wire  signed [20:0] mul_ln1118_519_fu_4346_p2;
wire  signed [21:0] sext_ln1118_541_fu_4352_p1;
wire   [21:0] or_ln785_528_fu_4364_p2;
wire   [0:0] tmp_4182_fu_4356_p3;
wire   [0:0] tmp_4183_fu_4369_p3;
wire   [0:0] xor_ln785_528_fu_4377_p2;
wire   [21:0] and_ln786_1586_fu_4389_p2;
wire   [0:0] tmp_4184_fu_4394_p3;
wire   [0:0] xor_ln786_1064_fu_4402_p2;
wire   [0:0] xor_ln340_1064_fu_4414_p2;
wire   [0:0] or_ln340_2136_fu_4420_p2;
wire   [0:0] xor_ln786_1066_fu_4435_p2;
wire   [0:0] and_ln786_1593_fu_4440_p2;
wire   [0:0] xor_ln340_1066_fu_4450_p2;
wire   [0:0] or_ln340_2138_fu_4455_p2;
wire   [0:0] or_ln340_2104_fu_4445_p2;
wire  signed [23:0] sext_ln731_23_fu_4432_p1;
wire   [0:0] or_ln340_2105_fu_4460_p2;
wire   [23:0] select_ln340_1061_fu_4465_p3;
wire   [23:0] select_ln388_1061_fu_4473_p3;
wire  signed [23:0] select_ln340_2086_fu_4481_p3;
wire  signed [24:0] sext_ln703_1054_fu_4489_p1;
wire  signed [24:0] sext_ln703_1055_fu_4492_p1;
wire   [24:0] add_ln1192_530_fu_4496_p2;
wire   [23:0] acc_6_V_64_fu_4510_p2;
wire   [0:0] tmp_4196_fu_4515_p3;
wire   [0:0] tmp_4195_fu_4502_p3;
wire   [0:0] xor_ln786_1042_fu_4523_p2;
wire   [0:0] xor_ln340_550_fu_4541_p2;
wire   [0:0] xor_ln340_1043_fu_4535_p2;
wire   [0:0] and_ln786_1594_fu_4529_p2;
wire   [0:0] or_ln340_2106_fu_4547_p2;
wire   [23:0] select_ln340_1062_fu_4553_p3;
wire   [23:0] acc_6_V_65_fu_4561_p3;
wire  signed [20:0] sext_ln731_11_fu_2533_p1;
wire  signed [20:0] sub_ln1118_5_fu_4577_p2;
wire   [20:0] shl_ln731_9_fu_4595_p3;
wire  signed [17:0] shl_ln731_s_fu_4606_p3;
wire  signed [21:0] sext_ln731_24_fu_4602_p1;
wire  signed [21:0] sext_ln731_26_fu_4617_p1;
wire  signed [21:0] sub_ln731_6_fu_4621_p2;
wire  signed [21:0] sext_ln1118_544_fu_4583_p1;
wire   [21:0] or_ln785_531_fu_4631_p2;
wire   [0:0] tmp_4197_fu_4587_p3;
wire   [0:0] tmp_4198_fu_4637_p3;
wire   [0:0] xor_ln785_531_fu_4645_p2;
wire   [21:0] and_ln786_1595_fu_4657_p2;
wire   [0:0] tmp_4199_fu_4663_p3;
wire   [0:0] xor_ln786_1067_fu_4671_p2;
wire   [0:0] and_ln786_1596_fu_4677_p2;
wire   [0:0] and_ln785_531_fu_4651_p2;
wire   [0:0] xor_ln340_1067_fu_4689_p2;
wire   [0:0] or_ln340_2139_fu_4695_p2;
wire   [0:0] or_ln340_2107_fu_4683_p2;
wire  signed [23:0] sext_ln731_27_fu_4627_p1;
wire   [0:0] or_ln340_2108_fu_4701_p2;
wire   [23:0] select_ln340_1063_fu_4707_p3;
wire   [23:0] select_ln388_1063_fu_4715_p3;
wire  signed [23:0] select_ln340_2087_fu_4569_p3;
wire  signed [23:0] select_ln340_2088_fu_4723_p3;
wire  signed [24:0] sext_ln703_1056_fu_4731_p1;
wire  signed [24:0] sext_ln703_1057_fu_4735_p1;
wire   [24:0] add_ln1192_531_fu_4739_p2;
wire   [23:0] acc_6_V_66_fu_4753_p2;
wire   [0:0] tmp_4201_fu_4759_p3;
wire   [0:0] tmp_4200_fu_4745_p3;
wire   [0:0] xor_ln786_1043_fu_4767_p2;
wire   [0:0] xor_ln340_552_fu_4785_p2;
wire   [0:0] xor_ln340_1044_fu_4779_p2;
wire   [0:0] and_ln786_1597_fu_4773_p2;
wire   [0:0] or_ln340_2109_fu_4791_p2;
wire   [23:0] select_ln340_1064_fu_4797_p3;
wire   [23:0] acc_6_V_67_fu_4805_p3;
wire   [0:0] xor_ln786_1069_fu_4824_p2;
wire   [0:0] and_ln786_1602_fu_4829_p2;
wire   [0:0] xor_ln340_1069_fu_4839_p2;
wire   [0:0] or_ln340_2141_fu_4844_p2;
wire   [0:0] or_ln340_2113_fu_4834_p2;
wire  signed [23:0] sext_ln731_28_fu_4821_p1;
wire   [0:0] or_ln340_2114_fu_4849_p2;
wire   [23:0] select_ln340_1067_fu_4854_p3;
wire   [23:0] select_ln388_1067_fu_4862_p3;
wire  signed [23:0] select_ln340_2092_fu_4870_p3;
wire  signed [24:0] sext_ln703_1059_fu_4878_p1;
wire  signed [24:0] sext_ln703_1060_fu_4881_p1;
wire   [24:0] add_ln1192_533_fu_4885_p2;
wire   [23:0] acc_7_V_64_fu_4899_p2;
wire   [0:0] tmp_4211_fu_4904_p3;
wire   [0:0] tmp_4210_fu_4891_p3;
wire   [0:0] xor_ln786_1045_fu_4912_p2;
wire   [0:0] xor_ln340_556_fu_4930_p2;
wire   [0:0] xor_ln340_1046_fu_4924_p2;
wire   [0:0] and_ln786_1603_fu_4918_p2;
wire   [0:0] or_ln340_2115_fu_4936_p2;
wire   [23:0] select_ln340_1068_fu_4942_p3;
wire   [23:0] acc_7_V_65_fu_4950_p3;
wire  signed [21:0] sext_ln731_10_fu_2529_p1;
wire  signed [21:0] add_ln1118_3_fu_4966_p2;
wire  signed [22:0] sext_ln731_25_fu_4613_p1;
wire  signed [22:0] add_ln731_3_fu_4984_p2;
wire  signed [22:0] sext_ln1118_546_fu_4972_p1;
wire   [22:0] or_ln785_534_fu_4994_p2;
wire   [0:0] tmp_4212_fu_4976_p3;
wire   [0:0] tmp_4213_fu_5000_p3;
wire   [0:0] xor_ln785_534_fu_5008_p2;
wire   [22:0] and_ln786_1604_fu_5020_p2;
wire   [0:0] tmp_4214_fu_5026_p3;
wire   [0:0] xor_ln786_1070_fu_5034_p2;
wire   [0:0] and_ln786_1605_fu_5040_p2;
wire   [0:0] and_ln785_534_fu_5014_p2;
wire   [0:0] xor_ln340_1070_fu_5052_p2;
wire   [0:0] or_ln340_2142_fu_5058_p2;
wire   [0:0] or_ln340_2116_fu_5046_p2;
wire  signed [23:0] sext_ln731_29_fu_4990_p1;
wire   [0:0] or_ln340_2117_fu_5064_p2;
wire   [23:0] select_ln340_1069_fu_5070_p3;
wire   [23:0] select_ln388_1069_fu_5078_p3;
wire  signed [23:0] select_ln340_2093_fu_4958_p3;
wire  signed [23:0] select_ln340_2094_fu_5086_p3;
wire  signed [24:0] sext_ln703_1061_fu_5094_p1;
wire  signed [24:0] sext_ln703_1062_fu_5098_p1;
wire   [24:0] add_ln1192_534_fu_5102_p2;
wire   [23:0] acc_7_V_66_fu_5116_p2;
wire   [0:0] tmp_4216_fu_5122_p3;
wire   [0:0] tmp_4215_fu_5108_p3;
wire   [0:0] xor_ln786_1046_fu_5130_p2;
wire   [0:0] xor_ln340_558_fu_5148_p2;
wire   [0:0] xor_ln340_1047_fu_5142_p2;
wire   [0:0] and_ln786_1606_fu_5136_p2;
wire   [0:0] or_ln340_2118_fu_5154_p2;
wire   [23:0] select_ln340_1070_fu_5160_p3;
wire   [23:0] acc_7_V_67_fu_5168_p3;
wire  signed [24:0] sext_ln703_1036_fu_5184_p1;
wire  signed [24:0] sext_ln703_1037_fu_5187_p1;
wire   [24:0] add_ln1192_519_fu_5190_p2;
wire   [23:0] acc_2_V_66_fu_5204_p2;
wire   [0:0] tmp_4141_fu_5208_p3;
wire   [0:0] tmp_4140_fu_5196_p3;
wire   [0:0] xor_ln786_1031_fu_5216_p2;
wire   [0:0] xor_ln340_528_fu_5234_p2;
wire   [0:0] xor_ln340_1032_fu_5228_p2;
wire   [0:0] and_ln786_1561_fu_5222_p2;
wire   [0:0] or_ln340_2073_fu_5240_p2;
wire   [23:0] select_ln340_1040_fu_5246_p3;
wire   [23:0] acc_2_V_67_fu_5254_p3;
wire   [0:0] or_ln340_2080_fu_5271_p2;
wire   [23:0] select_ln340_1045_fu_5275_p3;
wire   [23:0] select_ln388_1045_fu_5282_p3;
wire  signed [23:0] select_ln340_2070_fu_5288_p3;
wire  signed [24:0] sext_ln703_1041_fu_5295_p1;
wire  signed [24:0] sext_ln703_1042_fu_5298_p1;
wire   [24:0] add_ln1192_522_fu_5302_p2;
wire   [23:0] acc_3_V_66_fu_5316_p2;
wire   [0:0] tmp_4156_fu_5321_p3;
wire   [0:0] tmp_4155_fu_5308_p3;
wire   [0:0] xor_ln786_1034_fu_5329_p2;
wire   [0:0] xor_ln340_534_fu_5347_p2;
wire   [0:0] xor_ln340_1035_fu_5341_p2;
wire   [0:0] and_ln786_1570_fu_5335_p2;
wire   [0:0] or_ln340_2082_fu_5353_p2;
wire   [23:0] select_ln340_1046_fu_5359_p3;
wire   [23:0] acc_3_V_67_fu_5367_p3;
wire   [0:0] or_ln340_2089_fu_5384_p2;
wire   [23:0] select_ln340_1051_fu_5388_p3;
wire   [23:0] select_ln388_1051_fu_5395_p3;
wire  signed [23:0] select_ln340_2076_fu_5401_p3;
wire  signed [24:0] sext_ln703_1046_fu_5408_p1;
wire  signed [24:0] sext_ln703_1047_fu_5411_p1;
wire   [24:0] add_ln1192_525_fu_5415_p2;
wire   [23:0] acc_4_V_66_fu_5429_p2;
wire   [0:0] tmp_4171_fu_5434_p3;
wire   [0:0] tmp_4170_fu_5421_p3;
wire   [0:0] xor_ln786_1037_fu_5442_p2;
wire   [0:0] xor_ln340_540_fu_5460_p2;
wire   [0:0] xor_ln340_1038_fu_5454_p2;
wire   [0:0] and_ln786_1579_fu_5448_p2;
wire   [0:0] or_ln340_2091_fu_5466_p2;
wire   [23:0] select_ln340_1052_fu_5472_p3;
wire   [23:0] acc_4_V_67_fu_5480_p3;
wire   [0:0] or_ln340_2098_fu_5500_p2;
wire  signed [23:0] sext_ln731_21_fu_5497_p1;
wire   [23:0] select_ln340_1057_fu_5504_p3;
wire   [23:0] select_ln388_1057_fu_5512_p3;
wire  signed [23:0] select_ln340_2082_fu_5519_p3;
wire  signed [24:0] sext_ln703_1051_fu_5526_p1;
wire  signed [24:0] sext_ln703_1052_fu_5529_p1;
wire   [24:0] add_ln1192_528_fu_5533_p2;
wire   [23:0] acc_5_V_66_fu_5547_p2;
wire   [0:0] tmp_4186_fu_5552_p3;
wire   [0:0] tmp_4185_fu_5539_p3;
wire   [0:0] xor_ln786_1040_fu_5560_p2;
wire   [0:0] xor_ln340_546_fu_5578_p2;
wire   [0:0] xor_ln340_1041_fu_5572_p2;
wire   [0:0] and_ln786_1588_fu_5566_p2;
wire   [0:0] or_ln340_2100_fu_5584_p2;
wire   [23:0] select_ln340_1058_fu_5590_p3;
wire   [23:0] acc_5_V_67_fu_5598_p3;
wire   [31:0] add_ln391_fu_5631_p2;
wire  signed [5:0] mul_ln1118_fu_5662_p0;
wire  signed [15:0] mul_ln1118_fu_5662_p1;
wire  signed [21:0] sext_ln1118_519_fu_757_p1;
wire  signed [6:0] mul_ln731_fu_5670_p0;
wire  signed [15:0] mul_ln731_fu_5670_p1;
wire  signed [22:0] sext_ln1118_518_fu_753_p1;
wire  signed [7:0] mul_ln1118_512_fu_5678_p0;
wire  signed [15:0] mul_ln1118_512_fu_5678_p1;
wire  signed [23:0] sext_ln1116_32_fu_749_p1;
wire  signed [8:0] mul_ln731_1_fu_5687_p0;
wire  signed [15:0] mul_ln731_1_fu_5687_p1;
wire  signed [6:0] mul_ln1118_513_fu_5695_p0;
wire  signed [15:0] mul_ln1118_513_fu_5695_p1;
wire  signed [22:0] sext_ln1118_fu_491_p1;
wire  signed [7:0] mul_ln731_2_fu_5703_p0;
wire  signed [15:0] mul_ln731_2_fu_5703_p1;
wire  signed [23:0] sext_ln1116_fu_487_p1;
wire   [6:0] mul_ln1118_515_fu_5711_p0;
wire  signed [15:0] mul_ln1118_515_fu_5711_p1;
wire   [7:0] mul_ln731_4_fu_5719_p0;
wire  signed [15:0] mul_ln731_4_fu_5719_p1;
wire   [6:0] mul_ln1118_517_fu_5727_p0;
wire  signed [15:0] mul_ln1118_517_fu_5727_p1;
wire   [7:0] mul_ln731_6_fu_5735_p0;
wire  signed [15:0] mul_ln731_6_fu_5735_p1;
wire   [7:0] mul_ln1118_518_fu_5743_p0;
wire  signed [15:0] mul_ln1118_518_fu_5743_p1;
wire   [8:0] mul_ln731_7_fu_5752_p0;
wire  signed [15:0] mul_ln731_7_fu_5752_p1;
wire  signed [5:0] mul_ln1118_520_fu_5760_p0;
wire  signed [15:0] mul_ln1118_520_fu_5760_p1;
wire  signed [6:0] mul_ln731_9_fu_5768_p0;
wire  signed [15:0] mul_ln731_9_fu_5768_p1;
wire  signed [5:0] mul_ln1118_521_fu_5776_p0;
wire  signed [15:0] mul_ln1118_521_fu_5776_p1;
wire  signed [6:0] mul_ln731_10_fu_5784_p0;
wire  signed [15:0] mul_ln731_10_fu_5784_p1;
wire   [6:0] mul_ln1118_514_fu_5792_p0;
wire  signed [15:0] mul_ln1118_514_fu_5792_p1;
wire   [7:0] mul_ln731_3_fu_5800_p0;
wire  signed [15:0] mul_ln731_3_fu_5800_p1;
wire  signed [23:0] sext_ln1116_33_fu_2087_p1;
wire  signed [7:0] mul_ln1118_516_fu_5808_p0;
wire  signed [15:0] mul_ln1118_516_fu_5808_p1;
wire  signed [8:0] mul_ln731_5_fu_5817_p0;
wire  signed [15:0] mul_ln731_5_fu_5817_p1;
wire   [5:0] mul_ln731_8_fu_5825_p0;
reg   [5:0] ap_NS_fsm;
reg    ap_condition_274;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 kernel_data_V_3_2 = 16'd0;
#0 kernel_data_V_3_1 = 16'd0;
#0 sX = 32'd0;
#0 pX = 32'd0;
#0 kernel_data_V_3_0 = 16'd0;
end

Encoder_mul_mul_6s_16s_22_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 22 ))
Encoder_mul_mul_6s_16s_22_1_1_U4(
    .din0(mul_ln1118_fu_5662_p0),
    .din1(mul_ln1118_fu_5662_p1),
    .dout(mul_ln1118_fu_5662_p2)
);

Encoder_mul_mul_7s_16s_23_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 23 ))
Encoder_mul_mul_7s_16s_23_1_1_U5(
    .din0(mul_ln731_fu_5670_p0),
    .din1(mul_ln731_fu_5670_p1),
    .dout(mul_ln731_fu_5670_p2)
);

Encoder_mul_mul_8s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
Encoder_mul_mul_8s_16s_24_1_1_U6(
    .din0(mul_ln1118_512_fu_5678_p0),
    .din1(mul_ln1118_512_fu_5678_p1),
    .dout(mul_ln1118_512_fu_5678_p2)
);

Encoder_mul_mul_9s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
Encoder_mul_mul_9s_16s_24_1_1_U7(
    .din0(mul_ln731_1_fu_5687_p0),
    .din1(mul_ln731_1_fu_5687_p1),
    .dout(mul_ln731_1_fu_5687_p2)
);

Encoder_mul_mul_7s_16s_23_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 23 ))
Encoder_mul_mul_7s_16s_23_1_1_U8(
    .din0(mul_ln1118_513_fu_5695_p0),
    .din1(mul_ln1118_513_fu_5695_p1),
    .dout(mul_ln1118_513_fu_5695_p2)
);

Encoder_mul_mul_8s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
Encoder_mul_mul_8s_16s_24_1_1_U9(
    .din0(mul_ln731_2_fu_5703_p0),
    .din1(mul_ln731_2_fu_5703_p1),
    .dout(mul_ln731_2_fu_5703_p2)
);

Encoder_mul_mul_7ns_16s_23_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 23 ))
Encoder_mul_mul_7ns_16s_23_1_1_U10(
    .din0(mul_ln1118_515_fu_5711_p0),
    .din1(mul_ln1118_515_fu_5711_p1),
    .dout(mul_ln1118_515_fu_5711_p2)
);

Encoder_mul_mul_8ns_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
Encoder_mul_mul_8ns_16s_24_1_1_U11(
    .din0(mul_ln731_4_fu_5719_p0),
    .din1(mul_ln731_4_fu_5719_p1),
    .dout(mul_ln731_4_fu_5719_p2)
);

Encoder_mul_mul_7ns_16s_23_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 23 ))
Encoder_mul_mul_7ns_16s_23_1_1_U12(
    .din0(mul_ln1118_517_fu_5727_p0),
    .din1(mul_ln1118_517_fu_5727_p1),
    .dout(mul_ln1118_517_fu_5727_p2)
);

Encoder_mul_mul_8ns_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
Encoder_mul_mul_8ns_16s_24_1_1_U13(
    .din0(mul_ln731_6_fu_5735_p0),
    .din1(mul_ln731_6_fu_5735_p1),
    .dout(mul_ln731_6_fu_5735_p2)
);

Encoder_mul_mul_8ns_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
Encoder_mul_mul_8ns_16s_24_1_1_U14(
    .din0(mul_ln1118_518_fu_5743_p0),
    .din1(mul_ln1118_518_fu_5743_p1),
    .dout(mul_ln1118_518_fu_5743_p2)
);

Encoder_mul_mul_9ns_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
Encoder_mul_mul_9ns_16s_24_1_1_U15(
    .din0(mul_ln731_7_fu_5752_p0),
    .din1(mul_ln731_7_fu_5752_p1),
    .dout(mul_ln731_7_fu_5752_p2)
);

Encoder_mul_mul_6s_16s_22_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 22 ))
Encoder_mul_mul_6s_16s_22_1_1_U16(
    .din0(mul_ln1118_520_fu_5760_p0),
    .din1(mul_ln1118_520_fu_5760_p1),
    .dout(mul_ln1118_520_fu_5760_p2)
);

Encoder_mul_mul_7s_16s_23_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 23 ))
Encoder_mul_mul_7s_16s_23_1_1_U17(
    .din0(mul_ln731_9_fu_5768_p0),
    .din1(mul_ln731_9_fu_5768_p1),
    .dout(mul_ln731_9_fu_5768_p2)
);

Encoder_mul_mul_6s_16s_22_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 22 ))
Encoder_mul_mul_6s_16s_22_1_1_U18(
    .din0(mul_ln1118_521_fu_5776_p0),
    .din1(mul_ln1118_521_fu_5776_p1),
    .dout(mul_ln1118_521_fu_5776_p2)
);

Encoder_mul_mul_7s_16s_23_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 23 ))
Encoder_mul_mul_7s_16s_23_1_1_U19(
    .din0(mul_ln731_10_fu_5784_p0),
    .din1(mul_ln731_10_fu_5784_p1),
    .dout(mul_ln731_10_fu_5784_p2)
);

Encoder_mul_mul_7ns_16s_23_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 23 ))
Encoder_mul_mul_7ns_16s_23_1_1_U20(
    .din0(mul_ln1118_514_fu_5792_p0),
    .din1(mul_ln1118_514_fu_5792_p1),
    .dout(mul_ln1118_514_fu_5792_p2)
);

Encoder_mul_mul_8ns_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
Encoder_mul_mul_8ns_16s_24_1_1_U21(
    .din0(mul_ln731_3_fu_5800_p0),
    .din1(mul_ln731_3_fu_5800_p1),
    .dout(mul_ln731_3_fu_5800_p2)
);

Encoder_mul_mul_8s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
Encoder_mul_mul_8s_16s_24_1_1_U22(
    .din0(mul_ln1118_516_fu_5808_p0),
    .din1(mul_ln1118_516_fu_5808_p1),
    .dout(mul_ln1118_516_fu_5808_p2)
);

Encoder_mul_mul_9s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
Encoder_mul_mul_9s_16s_24_1_1_U23(
    .din0(mul_ln731_5_fu_5817_p0),
    .din1(mul_ln731_5_fu_5817_p1),
    .dout(mul_ln731_5_fu_5817_p2)
);

Encoder_mul_mul_6ns_16s_22_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 22 ))
Encoder_mul_mul_6ns_16s_22_1_1_U24(
    .din0(mul_ln731_8_fu_5825_p0),
    .din1(tmp_data_0_V_reg_5833),
    .dout(mul_ln731_8_fu_5825_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0)) & (icmp_ln64_fu_5656_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0)) & (icmp_ln64_fu_5656_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        i_iw_0_i1_reg_360 <= i_iw_1_reg_5856;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_iw_0_i1_reg_360 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln166_fu_407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_iw_0_i_i_i_reg_372 <= i_iw_fu_413_p2;
    end else if (((data_V_data_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_iw_0_i_i_i_reg_372 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_274)) begin
        if ((icmp_ln384_fu_5615_p2 == 1'd1)) begin
            pX <= 32'd0;
        end else if ((icmp_ln384_fu_5615_p2 == 1'd0)) begin
            pX <= add_ln389_fu_5620_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        and_ln360_reg_5888 <= and_ln360_fu_477_p2;
        icmp_ln360_reg_5877 <= icmp_ln360_fu_451_p2;
        kernel_data_V_3_2 <= tmp_data_0_V_reg_5833;
        pX_load_reg_5882 <= pX;
        sX_load_reg_5872 <= sX;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln360_fu_477_p2) & (1'b1 == ap_CS_fsm_state4))) begin
        and_ln785_512_reg_5919 <= and_ln785_512_fu_790_p2;
        and_ln785_515_reg_5949 <= and_ln785_515_fu_1076_p2;
        and_ln785_520_reg_5979 <= and_ln785_520_fu_1267_p2;
        and_ln785_523_reg_6003 <= and_ln785_523_fu_1315_p2;
        and_ln785_526_reg_6027 <= and_ln785_526_fu_1363_p2;
        and_ln785_527_reg_6051 <= and_ln785_527_fu_1407_p2;
        and_ln785_530_reg_6080 <= and_ln785_530_fu_1668_p2;
        and_ln785_533_reg_6109 <= and_ln785_533_fu_1920_p2;
        kernel_data_V_3_1_load_1_reg_5898 <= kernel_data_V_3_1;
        mul_ln731_10_reg_6104 <= mul_ln731_10_fu_5784_p2;
        mul_ln731_1_reg_5943 <= mul_ln731_1_fu_5687_p2;
        mul_ln731_2_reg_5973 <= mul_ln731_2_fu_5703_p2;
        mul_ln731_4_reg_5997 <= mul_ln731_4_fu_5719_p2;
        mul_ln731_6_reg_6021 <= mul_ln731_6_fu_5735_p2;
        mul_ln731_7_reg_6045 <= mul_ln731_7_fu_5752_p2;
        mul_ln731_9_reg_6075 <= mul_ln731_9_fu_5768_p2;
        mul_ln731_reg_5914 <= mul_ln731_fu_5670_p2;
        select_ln340_2049_reg_5892 <= select_ln340_2049_fu_741_p3;
        select_ln340_2055_reg_5931 <= select_ln340_2055_fu_1043_p3;
        select_ln340_2060_reg_5961 <= select_ln340_2060_fu_1230_p3;
        select_ln340_2085_reg_6063 <= select_ln340_2085_fu_1631_p3;
        select_ln340_2091_reg_6092 <= select_ln340_2091_fu_1883_p3;
        tmp_4102_reg_5908 <= mul_ln1118_fu_5662_p2[32'd20];
        tmp_4104_reg_5925 <= and_ln786_1538_fu_796_p2[32'd22];
        tmp_4117_reg_5937 <= mul_ln1118_512_fu_5678_p2[32'd22];
        tmp_4119_reg_5955 <= and_ln786_1547_fu_1082_p2[32'd23];
        tmp_4142_reg_5967 <= mul_ln1118_513_fu_5695_p2[32'd21];
        tmp_4144_reg_5985 <= and_ln786_1562_fu_1273_p2[32'd23];
        tmp_4157_reg_5991 <= mul_ln1118_515_fu_5711_p2[32'd21];
        tmp_4159_reg_6009 <= and_ln786_1571_fu_1321_p2[32'd23];
        tmp_4172_reg_6015 <= mul_ln1118_517_fu_5727_p2[32'd21];
        tmp_4174_reg_6033 <= and_ln786_1580_fu_1369_p2[32'd23];
        tmp_4177_reg_6039 <= mul_ln1118_518_fu_5743_p2[32'd22];
        tmp_4179_reg_6057 <= and_ln786_1583_fu_1413_p2[32'd23];
        tmp_4192_reg_6069 <= mul_ln1118_520_fu_5760_p2[32'd20];
        tmp_4194_reg_6086 <= and_ln786_1592_fu_1674_p2[32'd22];
        tmp_4207_reg_6098 <= mul_ln1118_521_fu_5776_p2[32'd20];
        tmp_4209_reg_6115 <= and_ln786_1601_fu_1926_p2[32'd22];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        and_ln785_522_reg_6155 <= and_ln785_522_fu_3577_p2;
        and_ln785_525_reg_6183 <= and_ln785_525_fu_4018_p2;
        and_ln785_528_reg_6210 <= and_ln785_528_fu_4383_p2;
        and_ln786_1569_reg_6160 <= and_ln786_1569_fu_3602_p2;
        and_ln786_1578_reg_6188 <= and_ln786_1578_fu_4042_p2;
        and_ln786_1587_reg_6215 <= and_ln786_1587_fu_4408_p2;
        mul_ln731_3_reg_6149 <= mul_ln731_3_fu_5800_p2;
        mul_ln731_5_reg_6177 <= mul_ln731_5_fu_5817_p2;
        mul_ln731_8_reg_6205 <= mul_ln731_8_fu_5825_p2;
        or_ln340_2081_reg_6166 <= or_ln340_2081_fu_3620_p2;
        or_ln340_2090_reg_6194 <= or_ln340_2090_fu_4060_p2;
        or_ln340_2099_reg_6221 <= or_ln340_2099_fu_4426_p2;
        select_ln340_2063_reg_6131 <= select_ln340_2063_fu_3068_p3;
        select_ln340_2064_reg_6137 <= select_ln340_2064_fu_3175_p3;
        select_ln340_2069_reg_6143 <= select_ln340_2069_fu_3540_p3;
        select_ln340_2075_reg_6171 <= select_ln340_2075_fu_3985_p3;
        select_ln340_2081_reg_6199 <= select_ln340_2081_fu_4338_p3;
        tmp_data_0_V_19_reg_6121 <= tmp_data_0_V_19_fu_2334_p3;
        tmp_data_1_V_reg_6126 <= tmp_data_1_V_fu_2729_p3;
        tmp_data_6_V_reg_6226 <= tmp_data_6_V_fu_4813_p3;
        tmp_data_7_V_reg_6231 <= tmp_data_7_V_fu_5176_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_data_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_iw_1_reg_5856 <= i_iw_1_fu_401_p2;
        kernel_data_V_3_2_load_reg_5851 <= kernel_data_V_3_2;
        tmp_data_0_V_reg_5833 <= data_V_data_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln172_fu_419_p1 == 1'd0) & (icmp_ln166_fu_407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        kernel_data_V_3_0 <= select_ln180_fu_423_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln172_fu_419_p1 == 1'd1) & (icmp_ln166_fu_407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        kernel_data_V_3_1 <= select_ln180_fu_423_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        sX <= ap_phi_mux_storemerge_i_i_phi_fu_386_p4;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0)) & (icmp_ln64_fu_5656_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        if ((icmp_ln384_fu_5615_p2 == 1'd1)) begin
            ap_phi_mux_storemerge_i_i_phi_fu_386_p4 = 32'd0;
        end else if ((icmp_ln384_fu_5615_p2 == 1'd0)) begin
            ap_phi_mux_storemerge_i_i_phi_fu_386_p4 = select_ln391_fu_5636_p3;
        end else begin
            ap_phi_mux_storemerge_i_i_phi_fu_386_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge_i_i_phi_fu_386_p4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_V_blk_n = data_V_data_V_empty_n;
    end else begin
        data_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data_V_data_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        data_V_data_V_read = 1'b1;
    end else begin
        data_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0)) & (icmp_ln64_fu_5656_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_5888) & (1'b1 == ap_CS_fsm_state6))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0)) & (1'd1 == and_ln360_reg_5888) & (1'b1 == ap_CS_fsm_state6))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_5888) & (1'b1 == ap_CS_fsm_state6))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0)) & (1'd1 == and_ln360_reg_5888) & (1'b1 == ap_CS_fsm_state6))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_5888) & (1'b1 == ap_CS_fsm_state6))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0)) & (1'd1 == and_ln360_reg_5888) & (1'b1 == ap_CS_fsm_state6))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_5888) & (1'b1 == ap_CS_fsm_state6))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0)) & (1'd1 == and_ln360_reg_5888) & (1'b1 == ap_CS_fsm_state6))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_5888) & (1'b1 == ap_CS_fsm_state6))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0)) & (1'd1 == and_ln360_reg_5888) & (1'b1 == ap_CS_fsm_state6))) begin
        res_V_data_4_V_write = 1'b1;
    end else begin
        res_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_5888) & (1'b1 == ap_CS_fsm_state6))) begin
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n;
    end else begin
        res_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0)) & (1'd1 == and_ln360_reg_5888) & (1'b1 == ap_CS_fsm_state6))) begin
        res_V_data_5_V_write = 1'b1;
    end else begin
        res_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_5888) & (1'b1 == ap_CS_fsm_state6))) begin
        res_V_data_6_V_blk_n = res_V_data_6_V_full_n;
    end else begin
        res_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0)) & (1'd1 == and_ln360_reg_5888) & (1'b1 == ap_CS_fsm_state6))) begin
        res_V_data_6_V_write = 1'b1;
    end else begin
        res_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_5888) & (1'b1 == ap_CS_fsm_state6))) begin
        res_V_data_7_V_blk_n = res_V_data_7_V_full_n;
    end else begin
        res_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0)) & (1'd1 == and_ln360_reg_5888) & (1'b1 == ap_CS_fsm_state6))) begin
        res_V_data_7_V_write = 1'b1;
    end else begin
        res_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((data_V_data_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln166_fu_407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == and_ln360_fu_477_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if ((~((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0)) & (icmp_ln64_fu_5656_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0)) & (icmp_ln64_fu_5656_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_63_fu_733_p3 = ((and_ln786_1537_fu_701_p2[0:0] === 1'b1) ? 24'd8388608 : acc_0_V_fu_681_p2);

assign acc_0_V_64_fu_2020_p2 = ($signed(select_ln340_2050_fu_1991_p3) + $signed(select_ln340_2049_reg_5892));

assign acc_0_V_65_fu_2071_p3 = ((and_ln786_1540_fu_2039_p2[0:0] === 1'b1) ? 24'd8388608 : acc_0_V_64_fu_2020_p2);

assign acc_0_V_66_fu_2274_p2 = ($signed(select_ln340_2052_fu_2244_p3) + $signed(select_ln340_2051_fu_2079_p3));

assign acc_0_V_67_fu_2326_p3 = ((and_ln786_1543_fu_2294_p2[0:0] === 1'b1) ? 24'd8388608 : acc_0_V_66_fu_2274_p2);

assign acc_0_V_fu_681_p2 = ($signed(24'd16777206) + $signed(select_ln340_2048_fu_655_p3));

assign acc_1_V_63_fu_1035_p3 = ((and_ln786_1546_fu_1003_p2[0:0] === 1'b1) ? 24'd8388608 : acc_1_V_fu_983_p2);

assign acc_1_V_64_fu_2415_p2 = ($signed(select_ln340_2056_fu_2386_p3) + $signed(select_ln340_2055_reg_5931));

assign acc_1_V_65_fu_2466_p3 = ((and_ln786_1549_fu_2434_p2[0:0] === 1'b1) ? 24'd8388608 : acc_1_V_64_fu_2415_p2);

assign acc_1_V_66_fu_2669_p2 = ($signed(select_ln340_2058_fu_2639_p3) + $signed(select_ln340_2057_fu_2474_p3));

assign acc_1_V_67_fu_2721_p3 = ((and_ln786_1552_fu_2689_p2[0:0] === 1'b1) ? 24'd8388608 : acc_1_V_66_fu_2669_p2);

assign acc_1_V_fu_983_p2 = ($signed(24'd16777178) + $signed(select_ln340_2054_fu_957_p3));

assign acc_2_V_63_fu_2805_p3 = ((and_ln786_1555_fu_2773_p2[0:0] === 1'b1) ? 24'd8388608 : acc_2_V_fu_2754_p2);

assign acc_2_V_64_fu_3008_p2 = ($signed(select_ln340_2062_fu_2978_p3) + $signed(select_ln340_2061_fu_2813_p3));

assign acc_2_V_65_fu_3060_p3 = ((and_ln786_1558_fu_3028_p2[0:0] === 1'b1) ? 24'd8388608 : acc_2_V_64_fu_3008_p2);

assign acc_2_V_66_fu_5204_p2 = ($signed(select_ln340_2064_reg_6137) + $signed(select_ln340_2063_reg_6131));

assign acc_2_V_67_fu_5254_p3 = ((and_ln786_1561_fu_5222_p2[0:0] === 1'b1) ? 24'd8388608 : acc_2_V_66_fu_5204_p2);

assign acc_2_V_fu_2754_p2 = ($signed(24'd16777178) + $signed(select_ln340_2060_reg_5961));

assign acc_3_V_63_fu_3305_p3 = ((and_ln786_1564_fu_3273_p2[0:0] === 1'b1) ? 24'd8388608 : acc_3_V_fu_3253_p2);

assign acc_3_V_64_fu_3480_p2 = ($signed(select_ln340_2068_fu_3450_p3) + $signed(select_ln340_2067_fu_3313_p3));

assign acc_3_V_65_fu_3532_p3 = ((and_ln786_1567_fu_3500_p2[0:0] === 1'b1) ? 24'd8388608 : acc_3_V_64_fu_3480_p2);

assign acc_3_V_66_fu_5316_p2 = ($signed(select_ln340_2070_fu_5288_p3) + $signed(select_ln340_2069_reg_6143));

assign acc_3_V_67_fu_5367_p3 = ((and_ln786_1570_fu_5335_p2[0:0] === 1'b1) ? 24'd8388608 : acc_3_V_66_fu_5316_p2);

assign acc_3_V_fu_3253_p2 = ($signed(24'd16777206) + $signed(select_ln340_2066_fu_3227_p3));

assign acc_4_V_63_fu_3748_p3 = ((and_ln786_1573_fu_3716_p2[0:0] === 1'b1) ? 24'd8388608 : acc_4_V_fu_3696_p2);

assign acc_4_V_64_fu_3925_p2 = ($signed(select_ln340_2074_fu_3895_p3) + $signed(select_ln340_2073_fu_3756_p3));

assign acc_4_V_65_fu_3977_p3 = ((and_ln786_1576_fu_3945_p2[0:0] === 1'b1) ? 24'd8388608 : acc_4_V_64_fu_3925_p2);

assign acc_4_V_66_fu_5429_p2 = ($signed(select_ln340_2076_fu_5401_p3) + $signed(select_ln340_2075_reg_6171));

assign acc_4_V_67_fu_5480_p3 = ((and_ln786_1579_fu_5448_p2[0:0] === 1'b1) ? 24'd8388608 : acc_4_V_66_fu_5429_p2);

assign acc_4_V_fu_3696_p2 = ($signed(24'd16777182) + $signed(select_ln340_2072_fu_3670_p3));

assign acc_5_V_63_fu_4188_p3 = ((and_ln786_1582_fu_4156_p2[0:0] === 1'b1) ? 24'd8388608 : acc_5_V_fu_4136_p2);

assign acc_5_V_64_fu_4278_p2 = ($signed(select_ln340_2080_fu_4248_p3) + $signed(select_ln340_2079_fu_4196_p3));

assign acc_5_V_65_fu_4330_p3 = ((and_ln786_1585_fu_4298_p2[0:0] === 1'b1) ? 24'd8388608 : acc_5_V_64_fu_4278_p2);

assign acc_5_V_66_fu_5547_p2 = ($signed(select_ln340_2082_fu_5519_p3) + $signed(select_ln340_2081_reg_6199));

assign acc_5_V_67_fu_5598_p3 = ((and_ln786_1588_fu_5566_p2[0:0] === 1'b1) ? 24'd8388608 : acc_5_V_66_fu_5547_p2);

assign acc_5_V_fu_4136_p2 = ($signed(24'd8) + $signed(select_ln340_2078_fu_4110_p3));

assign acc_6_V_63_fu_1623_p3 = ((and_ln786_1591_fu_1591_p2[0:0] === 1'b1) ? 24'd8388608 : acc_6_V_fu_1571_p2);

assign acc_6_V_64_fu_4510_p2 = ($signed(select_ln340_2086_fu_4481_p3) + $signed(select_ln340_2085_reg_6063));

assign acc_6_V_65_fu_4561_p3 = ((and_ln786_1594_fu_4529_p2[0:0] === 1'b1) ? 24'd8388608 : acc_6_V_64_fu_4510_p2);

assign acc_6_V_66_fu_4753_p2 = ($signed(select_ln340_2088_fu_4723_p3) + $signed(select_ln340_2087_fu_4569_p3));

assign acc_6_V_67_fu_4805_p3 = ((and_ln786_1597_fu_4773_p2[0:0] === 1'b1) ? 24'd8388608 : acc_6_V_66_fu_4753_p2);

assign acc_6_V_fu_1571_p2 = ($signed(24'd16777186) + $signed(select_ln340_2084_fu_1545_p3));

assign acc_7_V_63_fu_1875_p3 = ((and_ln786_1600_fu_1843_p2[0:0] === 1'b1) ? 24'd8388608 : acc_7_V_fu_1823_p2);

assign acc_7_V_64_fu_4899_p2 = ($signed(select_ln340_2092_fu_4870_p3) + $signed(select_ln340_2091_reg_6092));

assign acc_7_V_65_fu_4950_p3 = ((and_ln786_1603_fu_4918_p2[0:0] === 1'b1) ? 24'd8388608 : acc_7_V_64_fu_4899_p2);

assign acc_7_V_66_fu_5116_p2 = ($signed(select_ln340_2094_fu_5086_p3) + $signed(select_ln340_2093_fu_4958_p3));

assign acc_7_V_67_fu_5168_p3 = ((and_ln786_1606_fu_5136_p2[0:0] === 1'b1) ? 24'd8388608 : acc_7_V_66_fu_5116_p2);

assign acc_7_V_fu_1823_p2 = ($signed(24'd16777214) + $signed(select_ln340_2090_fu_1797_p3));

assign add_ln1118_1_fu_2493_p2 = ($signed(sext_ln1118_528_fu_2489_p1) + $signed(sext_ln1118_524_fu_2096_p1));

assign add_ln1118_2_fu_1425_p2 = ($signed(sext_ln1118_515_fu_515_p1) + $signed(sext_ln1118_513_fu_499_p1));

assign add_ln1118_3_fu_4966_p2 = ($signed(sext_ln731_24_fu_4602_p1) + $signed(sext_ln731_10_fu_2529_p1));

assign add_ln1118_fu_809_p2 = ($signed(sext_ln731_fu_549_p1) + $signed(sext_ln1118_512_fu_495_p1));

assign add_ln1192_512_fu_2006_p2 = ($signed(sext_ln703_1024_fu_1999_p1) + $signed(sext_ln703_1025_fu_2002_p1));

assign add_ln1192_513_fu_2260_p2 = ($signed(sext_ln703_1026_fu_2252_p1) + $signed(sext_ln703_1027_fu_2256_p1));

assign add_ln1192_514_fu_969_p2 = ($signed(25'd33554394) + $signed(sext_ln703_1028_fu_965_p1));

assign add_ln1192_515_fu_2401_p2 = ($signed(sext_ln703_1029_fu_2394_p1) + $signed(sext_ln703_1030_fu_2397_p1));

assign add_ln1192_516_fu_2655_p2 = ($signed(sext_ln703_1031_fu_2647_p1) + $signed(sext_ln703_1032_fu_2651_p1));

assign add_ln1192_517_fu_2740_p2 = ($signed(25'd33554394) + $signed(sext_ln703_1033_fu_2737_p1));

assign add_ln1192_518_fu_2994_p2 = ($signed(sext_ln703_1034_fu_2986_p1) + $signed(sext_ln703_1035_fu_2990_p1));

assign add_ln1192_519_fu_5190_p2 = ($signed(sext_ln703_1036_fu_5184_p1) + $signed(sext_ln703_1037_fu_5187_p1));

assign add_ln1192_520_fu_3239_p2 = ($signed(25'd33554422) + $signed(sext_ln703_1038_fu_3235_p1));

assign add_ln1192_521_fu_3466_p2 = ($signed(sext_ln703_1039_fu_3458_p1) + $signed(sext_ln703_1040_fu_3462_p1));

assign add_ln1192_522_fu_5302_p2 = ($signed(sext_ln703_1041_fu_5295_p1) + $signed(sext_ln703_1042_fu_5298_p1));

assign add_ln1192_523_fu_3682_p2 = ($signed(25'd33554398) + $signed(sext_ln703_1043_fu_3678_p1));

assign add_ln1192_524_fu_3911_p2 = ($signed(sext_ln703_1044_fu_3903_p1) + $signed(sext_ln703_1045_fu_3907_p1));

assign add_ln1192_525_fu_5415_p2 = ($signed(sext_ln703_1046_fu_5408_p1) + $signed(sext_ln703_1047_fu_5411_p1));

assign add_ln1192_526_fu_4122_p2 = ($signed(25'd8) + $signed(sext_ln703_1048_fu_4118_p1));

assign add_ln1192_527_fu_4264_p2 = ($signed(sext_ln703_1049_fu_4256_p1) + $signed(sext_ln703_1050_fu_4260_p1));

assign add_ln1192_528_fu_5533_p2 = ($signed(sext_ln703_1051_fu_5526_p1) + $signed(sext_ln703_1052_fu_5529_p1));

assign add_ln1192_529_fu_1557_p2 = ($signed(25'd33554402) + $signed(sext_ln703_1053_fu_1553_p1));

assign add_ln1192_530_fu_4496_p2 = ($signed(sext_ln703_1054_fu_4489_p1) + $signed(sext_ln703_1055_fu_4492_p1));

assign add_ln1192_531_fu_4739_p2 = ($signed(sext_ln703_1056_fu_4731_p1) + $signed(sext_ln703_1057_fu_4735_p1));

assign add_ln1192_532_fu_1809_p2 = ($signed(25'd33554430) + $signed(sext_ln703_1058_fu_1805_p1));

assign add_ln1192_533_fu_4885_p2 = ($signed(sext_ln703_1059_fu_4878_p1) + $signed(sext_ln703_1060_fu_4881_p1));

assign add_ln1192_534_fu_5102_p2 = ($signed(sext_ln703_1061_fu_5094_p1) + $signed(sext_ln703_1062_fu_5098_p1));

assign add_ln1192_fu_667_p2 = ($signed(25'd33554422) + $signed(sext_ln703_fu_663_p1));

assign add_ln389_fu_5620_p2 = (pX_load_reg_5882 + 32'd1);

assign add_ln391_fu_5631_p2 = (sX_load_reg_5872 + 32'd1);

assign add_ln731_1_fu_2541_p2 = ($signed(sext_ln731_9_fu_2518_p1) + $signed(sext_ln731_12_fu_2537_p1));

assign add_ln731_2_fu_1443_p2 = ($signed(sext_ln731_fu_549_p1) + $signed(sext_ln731_6_fu_847_p1));

assign add_ln731_3_fu_4984_p2 = ($signed(sext_ln1118_528_fu_2489_p1) + $signed(sext_ln731_25_fu_4613_p1));

assign add_ln731_fu_855_p2 = ($signed(sext_ln731_5_fu_835_p1) + $signed(sext_ln731_7_fu_851_p1));

assign and_ln360_fu_477_p2 = (icmp_ln360_fu_451_p2 & icmp_ln360_1_fu_471_p2);

assign and_ln785_512_fu_790_p2 = (xor_ln785_512_fu_784_p2 & tmp_4103_fu_776_p3);

assign and_ln785_513_fu_2172_p2 = (xor_ln785_513_fu_2166_p2 & tmp_4108_fu_2158_p3);

assign and_ln785_514_fu_885_p2 = (xor_ln785_514_fu_879_p2 & tmp_4113_fu_871_p3);

assign and_ln785_515_fu_1076_p2 = (xor_ln785_515_fu_1070_p2 & tmp_4118_fu_1062_p3);

assign and_ln785_516_fu_2567_p2 = (xor_ln785_516_fu_2561_p2 & tmp_4123_fu_2553_p3);

assign and_ln785_517_fu_1158_p2 = (xor_ln785_517_fu_1152_p2 & tmp_4128_fu_1144_p3);

assign and_ln785_518_fu_2906_p2 = (xor_ln785_518_fu_2900_p2 & tmp_4133_fu_2892_p3);

assign and_ln785_519_fu_3103_p2 = (xor_ln785_519_fu_3097_p2 & tmp_4138_fu_3089_p3);

assign and_ln785_520_fu_1267_p2 = (xor_ln785_520_fu_1261_p2 & tmp_4143_fu_1253_p3);

assign and_ln785_521_fu_3378_p2 = (xor_ln785_521_fu_3372_p2 & tmp_4148_fu_3364_p3);

assign and_ln785_522_fu_3577_p2 = (xor_ln785_522_fu_3571_p2 & tmp_4153_fu_3563_p3);

assign and_ln785_523_fu_1315_p2 = (xor_ln785_523_fu_1309_p2 & tmp_4158_fu_1301_p3);

assign and_ln785_524_fu_3823_p2 = (xor_ln785_524_fu_3817_p2 & tmp_4163_fu_3809_p3);

assign and_ln785_525_fu_4018_p2 = (xor_ln785_525_fu_4012_p2 & tmp_4168_fu_4004_p3);

assign and_ln785_526_fu_1363_p2 = (xor_ln785_526_fu_1357_p2 & tmp_4173_fu_1349_p3);

assign and_ln785_527_fu_1407_p2 = (xor_ln785_527_fu_1401_p2 & tmp_4178_fu_1393_p3);

assign and_ln785_528_fu_4383_p2 = (xor_ln785_528_fu_4377_p2 & tmp_4183_fu_4369_p3);

assign and_ln785_529_fu_1473_p2 = (xor_ln785_529_fu_1467_p2 & tmp_4188_fu_1459_p3);

assign and_ln785_530_fu_1668_p2 = (xor_ln785_530_fu_1662_p2 & tmp_4193_fu_1654_p3);

assign and_ln785_531_fu_4651_p2 = (xor_ln785_531_fu_4645_p2 & tmp_4198_fu_4637_p3);

assign and_ln785_532_fu_1725_p2 = (xor_ln785_532_fu_1719_p2 & tmp_4203_fu_1711_p3);

assign and_ln785_533_fu_1920_p2 = (xor_ln785_533_fu_1914_p2 & tmp_4208_fu_1906_p3);

assign and_ln785_534_fu_5014_p2 = (xor_ln785_534_fu_5008_p2 & tmp_4213_fu_5000_p3);

assign and_ln785_fu_583_p2 = (xor_ln785_fu_577_p2 & tmp_4098_fu_569_p3);

assign and_ln786_1536_fu_609_p2 = (xor_ln786_1047_fu_603_p2 & tmp_4097_fu_533_p3);

assign and_ln786_1537_fu_701_p2 = (xor_ln786_fu_695_p2 & tmp_4100_fu_673_p3);

assign and_ln786_1538_fu_796_p2 = (sext_ln1118_521_fu_761_p1 & mul_ln731_fu_5670_p2);

assign and_ln786_1539_fu_1950_p2 = (xor_ln786_1048_fu_1945_p2 & tmp_4102_reg_5908);

assign and_ln786_1540_fu_2039_p2 = (xor_ln786_1024_fu_2033_p2 & tmp_4105_fu_2012_p3);

assign and_ln786_1541_fu_2178_p2 = (sub_ln731_1_fu_2142_p2 & sext_ln700_fu_2119_p1);

assign and_ln786_1542_fu_2198_p2 = (xor_ln786_1049_fu_2192_p2 & tmp_4107_fu_2123_p3);

assign and_ln786_1543_fu_2294_p2 = (xor_ln786_1025_fu_2288_p2 & tmp_4110_fu_2266_p3);

assign and_ln786_1544_fu_891_p2 = (sext_ln1118_527_fu_815_p1 & add_ln731_fu_855_p2);

assign and_ln786_1545_fu_911_p2 = (xor_ln786_1050_fu_905_p2 & tmp_4112_fu_819_p3);

assign and_ln786_1546_fu_1003_p2 = (xor_ln786_1026_fu_997_p2 & tmp_4115_fu_975_p3);

assign and_ln786_1547_fu_1082_p2 = (mul_ln731_1_fu_5687_p2 & mul_ln1118_512_fu_5678_p2);

assign and_ln786_1548_fu_2347_p2 = (xor_ln786_1051_fu_2342_p2 & tmp_4117_reg_5937);

assign and_ln786_1549_fu_2434_p2 = (xor_ln786_1027_fu_2428_p2 & tmp_4120_fu_2407_p3);

assign and_ln786_1550_fu_2573_p2 = (sext_ln1118_529_fu_2499_p1 & add_ln731_1_fu_2541_p2);

assign and_ln786_1551_fu_2593_p2 = (xor_ln786_1052_fu_2587_p2 & tmp_4122_fu_2503_p3);

assign and_ln786_1552_fu_2689_p2 = (xor_ln786_1028_fu_2683_p2 & tmp_4125_fu_2661_p3);

assign and_ln786_1553_fu_1164_p2 = (sub_ln731_2_fu_1128_p2 & sext_ln1118_532_fu_1116_p1);

assign and_ln786_1554_fu_1184_p2 = (xor_ln786_1053_fu_1178_p2 & tmp_4127_fu_1120_p3);

assign and_ln786_1555_fu_2773_p2 = (xor_ln786_1029_fu_2767_p2 & tmp_4130_fu_2746_p3);

assign and_ln786_1556_fu_2912_p2 = (sub_ln731_3_fu_2876_p2 & sext_ln1118_534_fu_2838_p1);

assign and_ln786_1557_fu_2932_p2 = (xor_ln786_1054_fu_2926_p2 & tmp_4132_fu_2842_p3);

assign and_ln786_1558_fu_3028_p2 = (xor_ln786_1030_fu_3022_p2 & tmp_4135_fu_3000_p3);

assign and_ln786_1559_fu_3109_p2 = (shl_ln731_5_fu_2522_p3 & sext_ln1118_523_fu_2093_p1);

assign and_ln786_1560_fu_3129_p2 = (xor_ln786_1055_fu_3123_p2 & tmp_4137_fu_3076_p3);

assign and_ln786_1561_fu_5222_p2 = (xor_ln786_1031_fu_5216_p2 & tmp_4140_fu_5196_p3);

assign and_ln786_1562_fu_1273_p2 = (sext_ln1118_535_fu_1238_p1 & mul_ln731_2_fu_5703_p2);

assign and_ln786_1563_fu_3188_p2 = (xor_ln786_1056_fu_3183_p2 & tmp_4142_reg_5967);

assign and_ln786_1564_fu_3273_p2 = (xor_ln786_1032_fu_3267_p2 & tmp_4145_fu_3245_p3);

assign and_ln786_1565_fu_3384_p2 = (sub_ln731_4_fu_3348_p2 & sext_ln1118_536_fu_3336_p1);

assign and_ln786_1566_fu_3404_p2 = (xor_ln786_1057_fu_3398_p2 & tmp_4147_fu_3340_p3);

assign and_ln786_1567_fu_3500_p2 = (xor_ln786_1033_fu_3494_p2 & tmp_4150_fu_3472_p3);

assign and_ln786_1568_fu_3583_p2 = (sext_ln1118_537_fu_3548_p1 & mul_ln731_3_fu_5800_p2);

assign and_ln786_1569_fu_3602_p2 = (xor_ln786_1058_fu_3596_p2 & tmp_4152_fu_3551_p3);

assign and_ln786_1570_fu_5335_p2 = (xor_ln786_1034_fu_5329_p2 & tmp_4155_fu_5308_p3);

assign and_ln786_1571_fu_1321_p2 = (sext_ln1118_538_fu_1286_p1 & mul_ln731_4_fu_5719_p2);

assign and_ln786_1572_fu_3631_p2 = (xor_ln786_1059_fu_3626_p2 & tmp_4157_reg_5991);

assign and_ln786_1573_fu_3716_p2 = (xor_ln786_1035_fu_3710_p2 & tmp_4160_fu_3688_p3);

assign and_ln786_1574_fu_3829_p2 = (sub_ln731_5_fu_3793_p2 & sext_ln1118_539_fu_3770_p1);

assign and_ln786_1575_fu_3849_p2 = (xor_ln786_1060_fu_3843_p2 & tmp_4162_fu_3774_p3);

assign and_ln786_1576_fu_3945_p2 = (xor_ln786_1036_fu_3939_p2 & tmp_4165_fu_3917_p3);

assign and_ln786_1577_fu_4024_p2 = (mul_ln731_5_fu_5817_p2 & mul_ln1118_516_fu_5808_p2);

assign and_ln786_1578_fu_4042_p2 = (xor_ln786_1061_fu_4036_p2 & tmp_4167_fu_3993_p3);

assign and_ln786_1579_fu_5448_p2 = (xor_ln786_1037_fu_5442_p2 & tmp_4170_fu_5421_p3);

assign and_ln786_1580_fu_1369_p2 = (sext_ln1118_540_fu_1334_p1 & mul_ln731_6_fu_5735_p2);

assign and_ln786_1581_fu_4071_p2 = (xor_ln786_1062_fu_4066_p2 & tmp_4172_reg_6015);

assign and_ln786_1582_fu_4156_p2 = (xor_ln786_1038_fu_4150_p2 & tmp_4175_fu_4128_p3);

assign and_ln786_1583_fu_1413_p2 = (mul_ln731_7_fu_5752_p2 & mul_ln1118_518_fu_5743_p2);

assign and_ln786_1584_fu_4209_p2 = (xor_ln786_1063_fu_4204_p2 & tmp_4177_reg_6039);

assign and_ln786_1585_fu_4298_p2 = (xor_ln786_1039_fu_4292_p2 & tmp_4180_fu_4270_p3);

assign and_ln786_1586_fu_4389_p2 = (sext_ln1118_541_fu_4352_p1 & mul_ln731_8_fu_5825_p2);

assign and_ln786_1587_fu_4408_p2 = (xor_ln786_1064_fu_4402_p2 & tmp_4182_fu_4356_p3);

assign and_ln786_1588_fu_5566_p2 = (xor_ln786_1040_fu_5560_p2 & tmp_4185_fu_5539_p3);

assign and_ln786_1589_fu_1479_p2 = (sext_ln1118_542_fu_1431_p1 & add_ln731_2_fu_1443_p2);

assign and_ln786_1590_fu_1499_p2 = (xor_ln786_1065_fu_1493_p2 & tmp_4187_fu_1435_p3);

assign and_ln786_1591_fu_1591_p2 = (xor_ln786_1041_fu_1585_p2 & tmp_4190_fu_1563_p3);

assign and_ln786_1592_fu_1674_p2 = (sext_ln1118_543_fu_1639_p1 & mul_ln731_9_fu_5768_p2);

assign and_ln786_1593_fu_4440_p2 = (xor_ln786_1066_fu_4435_p2 & tmp_4192_reg_6069);

assign and_ln786_1594_fu_4529_p2 = (xor_ln786_1042_fu_4523_p2 & tmp_4195_fu_4502_p3);

assign and_ln786_1595_fu_4657_p2 = (sub_ln731_6_fu_4621_p2 & sext_ln1118_544_fu_4583_p1);

assign and_ln786_1596_fu_4677_p2 = (xor_ln786_1067_fu_4671_p2 & tmp_4197_fu_4587_p3);

assign and_ln786_1597_fu_4773_p2 = (xor_ln786_1043_fu_4767_p2 & tmp_4200_fu_4745_p3);

assign and_ln786_1598_fu_1731_p2 = (sub_ln1118_fu_519_p2 & sext_ln700_1_fu_1693_p1);

assign and_ln786_1599_fu_1751_p2 = (xor_ln786_1068_fu_1745_p2 & tmp_4202_fu_1697_p3);

assign and_ln786_1600_fu_1843_p2 = (xor_ln786_1044_fu_1837_p2 & tmp_4205_fu_1815_p3);

assign and_ln786_1601_fu_1926_p2 = (sext_ln1118_545_fu_1891_p1 & mul_ln731_10_fu_5784_p2);

assign and_ln786_1602_fu_4829_p2 = (xor_ln786_1069_fu_4824_p2 & tmp_4207_reg_6098);

assign and_ln786_1603_fu_4918_p2 = (xor_ln786_1045_fu_4912_p2 & tmp_4210_fu_4891_p3);

assign and_ln786_1604_fu_5020_p2 = (sext_ln1118_546_fu_4972_p1 & add_ln731_3_fu_4984_p2);

assign and_ln786_1605_fu_5040_p2 = (xor_ln786_1070_fu_5034_p2 & tmp_4212_fu_4976_p3);

assign and_ln786_1606_fu_5136_p2 = (xor_ln786_1046_fu_5130_p2 & tmp_4215_fu_5108_p3);

assign and_ln786_fu_589_p2 = (sub_ln731_fu_553_p2 & sext_ln1118_516_fu_525_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state6 = ((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0));
end

always @ (*) begin
    ap_condition_274 = (~((1'd1 == and_ln360_reg_5888) & (io_acc_block_signal_op899 == 1'b0)) & (1'b1 == ap_CS_fsm_state6));
end

assign ap_ready = internal_ap_ready;

assign i_iw_1_fu_401_p2 = (i_iw_0_i1_reg_360 + 7'd1);

assign i_iw_fu_413_p2 = (i_iw_0_i_i_i_reg_372 + 2'd1);

assign icmp_ln166_fu_407_p2 = ((i_iw_0_i_i_i_reg_372 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln360_1_fu_471_p2 = (($signed(tmp_4096_fu_461_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln360_fu_451_p2 = ((sX == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln384_fu_5615_p2 = ((pX_load_reg_5882 == 32'd65) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_5656_p2 = ((i_iw_0_i1_reg_360 == 7'd65) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op899 = (res_V_data_7_V_full_n & res_V_data_6_V_full_n & res_V_data_5_V_full_n & res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign mul_ln1118_512_fu_5678_p0 = 24'd16777124;

assign mul_ln1118_512_fu_5678_p1 = sext_ln1116_32_fu_749_p1;

assign mul_ln1118_513_fu_5695_p0 = 23'd8388551;

assign mul_ln1118_513_fu_5695_p1 = sext_ln1118_fu_491_p1;

assign mul_ln1118_514_fu_5792_p0 = 23'd51;

assign mul_ln1118_514_fu_5792_p1 = sext_ln1118_524_fu_2096_p1;

assign mul_ln1118_515_fu_5711_p0 = 23'd61;

assign mul_ln1118_515_fu_5711_p1 = sext_ln1118_fu_491_p1;

assign mul_ln1118_516_fu_5808_p0 = 24'd16777141;

assign mul_ln1118_516_fu_5808_p1 = sext_ln1116_33_fu_2087_p1;

assign mul_ln1118_517_fu_5727_p0 = 23'd46;

assign mul_ln1118_517_fu_5727_p1 = sext_ln1118_fu_491_p1;

assign mul_ln1118_518_fu_5743_p0 = 24'd86;

assign mul_ln1118_518_fu_5743_p1 = sext_ln1116_32_fu_749_p1;

assign mul_ln1118_519_fu_4346_p1 = tmp_data_0_V_reg_5833;

assign mul_ln1118_519_fu_4346_p2 = ($signed({{1'b0}, {21'd11}}) * $signed(mul_ln1118_519_fu_4346_p1));

assign mul_ln1118_520_fu_5760_p0 = 22'd4194279;

assign mul_ln1118_520_fu_5760_p1 = sext_ln1118_519_fu_757_p1;

assign mul_ln1118_521_fu_5776_p0 = 22'd4194281;

assign mul_ln1118_521_fu_5776_p1 = sext_ln1118_519_fu_757_p1;

assign mul_ln1118_fu_5662_p0 = 22'd4194283;

assign mul_ln1118_fu_5662_p1 = sext_ln1118_519_fu_757_p1;

assign mul_ln731_10_fu_5784_p0 = 23'd8388562;

assign mul_ln731_10_fu_5784_p1 = sext_ln1118_518_fu_753_p1;

assign mul_ln731_1_fu_5687_p0 = 24'd16777032;

assign mul_ln731_1_fu_5687_p1 = sext_ln1116_32_fu_749_p1;

assign mul_ln731_2_fu_5703_p0 = 24'd16777102;

assign mul_ln731_2_fu_5703_p1 = sext_ln1116_fu_487_p1;

assign mul_ln731_3_fu_5800_p0 = 24'd102;

assign mul_ln731_3_fu_5800_p1 = sext_ln1116_33_fu_2087_p1;

assign mul_ln731_4_fu_5719_p0 = 24'd122;

assign mul_ln731_4_fu_5719_p1 = sext_ln1116_fu_487_p1;

assign mul_ln731_5_fu_5817_p0 = 24'd16777066;

assign mul_ln731_5_fu_5817_p1 = sext_ln1116_33_fu_2087_p1;

assign mul_ln731_6_fu_5735_p0 = 24'd92;

assign mul_ln731_6_fu_5735_p1 = sext_ln1116_fu_487_p1;

assign mul_ln731_7_fu_5752_p0 = 24'd172;

assign mul_ln731_7_fu_5752_p1 = sext_ln1116_32_fu_749_p1;

assign mul_ln731_8_fu_5825_p0 = 22'd22;

assign mul_ln731_9_fu_5768_p0 = 23'd8388558;

assign mul_ln731_9_fu_5768_p1 = sext_ln1118_518_fu_753_p1;

assign mul_ln731_fu_5670_p0 = 23'd8388566;

assign mul_ln731_fu_5670_p1 = sext_ln1118_518_fu_753_p1;

assign or_ln340_2048_fu_633_p2 = (or_ln340_2119_fu_627_p2 | and_ln785_fu_583_p2);

assign or_ln340_2049_fu_719_p2 = (xor_ln340_512_fu_713_p2 | tmp_4101_fu_687_p3);

assign or_ln340_2050_fu_1955_p2 = (and_ln786_1539_fu_1950_p2 | and_ln785_512_reg_5919);

assign or_ln340_2051_fu_1970_p2 = (or_ln340_2120_fu_1965_p2 | and_ln785_512_reg_5919);

assign or_ln340_2052_fu_2057_p2 = (xor_ln340_514_fu_2051_p2 | tmp_4106_fu_2025_p3);

assign or_ln340_2053_fu_2204_p2 = (and_ln786_1542_fu_2198_p2 | and_ln785_513_fu_2172_p2);

assign or_ln340_2054_fu_2222_p2 = (or_ln340_2121_fu_2216_p2 | and_ln785_513_fu_2172_p2);

assign or_ln340_2055_fu_2312_p2 = (xor_ln340_516_fu_2306_p2 | tmp_4111_fu_2280_p3);

assign or_ln340_2056_fu_917_p2 = (and_ln786_1545_fu_911_p2 | and_ln785_514_fu_885_p2);

assign or_ln340_2057_fu_935_p2 = (or_ln340_2122_fu_929_p2 | and_ln785_514_fu_885_p2);

assign or_ln340_2058_fu_1021_p2 = (xor_ln340_518_fu_1015_p2 | tmp_4116_fu_989_p3);

assign or_ln340_2059_fu_2352_p2 = (and_ln786_1548_fu_2347_p2 | and_ln785_515_reg_5949);

assign or_ln340_2060_fu_2367_p2 = (or_ln340_2123_fu_2362_p2 | and_ln785_515_reg_5949);

assign or_ln340_2061_fu_2452_p2 = (xor_ln340_520_fu_2446_p2 | tmp_4121_fu_2420_p3);

assign or_ln340_2062_fu_2599_p2 = (and_ln786_1551_fu_2593_p2 | and_ln785_516_fu_2567_p2);

assign or_ln340_2063_fu_2617_p2 = (or_ln340_2124_fu_2611_p2 | and_ln785_516_fu_2567_p2);

assign or_ln340_2064_fu_2707_p2 = (xor_ln340_522_fu_2701_p2 | tmp_4126_fu_2675_p3);

assign or_ln340_2065_fu_1190_p2 = (and_ln786_1554_fu_1184_p2 | and_ln785_517_fu_1158_p2);

assign or_ln340_2066_fu_1208_p2 = (or_ln340_2125_fu_1202_p2 | and_ln785_517_fu_1158_p2);

assign or_ln340_2067_fu_2791_p2 = (xor_ln340_524_fu_2785_p2 | tmp_4131_fu_2759_p3);

assign or_ln340_2068_fu_2938_p2 = (and_ln786_1557_fu_2932_p2 | and_ln785_518_fu_2906_p2);

assign or_ln340_2069_fu_2956_p2 = (or_ln340_2126_fu_2950_p2 | and_ln785_518_fu_2906_p2);

assign or_ln340_2070_fu_3046_p2 = (xor_ln340_526_fu_3040_p2 | tmp_4136_fu_3014_p3);

assign or_ln340_2071_fu_3135_p2 = (and_ln786_1560_fu_3129_p2 | and_ln785_519_fu_3103_p2);

assign or_ln340_2072_fu_3153_p2 = (or_ln340_2127_fu_3147_p2 | and_ln785_519_fu_3103_p2);

assign or_ln340_2073_fu_5240_p2 = (xor_ln340_528_fu_5234_p2 | tmp_4141_fu_5208_p3);

assign or_ln340_2074_fu_3193_p2 = (and_ln786_1563_fu_3188_p2 | and_ln785_520_reg_5979);

assign or_ln340_2075_fu_3208_p2 = (or_ln340_2128_fu_3203_p2 | and_ln785_520_reg_5979);

assign or_ln340_2076_fu_3291_p2 = (xor_ln340_530_fu_3285_p2 | tmp_4146_fu_3259_p3);

assign or_ln340_2077_fu_3410_p2 = (and_ln786_1566_fu_3404_p2 | and_ln785_521_fu_3378_p2);

assign or_ln340_2078_fu_3428_p2 = (or_ln340_2129_fu_3422_p2 | and_ln785_521_fu_3378_p2);

assign or_ln340_2079_fu_3518_p2 = (xor_ln340_532_fu_3512_p2 | tmp_4151_fu_3486_p3);

assign or_ln340_2080_fu_5271_p2 = (and_ln786_1569_reg_6160 | and_ln785_522_reg_6155);

assign or_ln340_2081_fu_3620_p2 = (or_ln340_2130_fu_3614_p2 | and_ln785_522_fu_3577_p2);

assign or_ln340_2082_fu_5353_p2 = (xor_ln340_534_fu_5347_p2 | tmp_4156_fu_5321_p3);

assign or_ln340_2083_fu_3636_p2 = (and_ln786_1572_fu_3631_p2 | and_ln785_523_reg_6003);

assign or_ln340_2084_fu_3651_p2 = (or_ln340_2131_fu_3646_p2 | and_ln785_523_reg_6003);

assign or_ln340_2085_fu_3734_p2 = (xor_ln340_536_fu_3728_p2 | tmp_4161_fu_3702_p3);

assign or_ln340_2086_fu_3855_p2 = (and_ln786_1575_fu_3849_p2 | and_ln785_524_fu_3823_p2);

assign or_ln340_2087_fu_3873_p2 = (or_ln340_2132_fu_3867_p2 | and_ln785_524_fu_3823_p2);

assign or_ln340_2088_fu_3963_p2 = (xor_ln340_538_fu_3957_p2 | tmp_4166_fu_3931_p3);

assign or_ln340_2089_fu_5384_p2 = (and_ln786_1578_reg_6188 | and_ln785_525_reg_6183);

assign or_ln340_2090_fu_4060_p2 = (or_ln340_2133_fu_4054_p2 | and_ln785_525_fu_4018_p2);

assign or_ln340_2091_fu_5466_p2 = (xor_ln340_540_fu_5460_p2 | tmp_4171_fu_5434_p3);

assign or_ln340_2092_fu_4076_p2 = (and_ln786_1581_fu_4071_p2 | and_ln785_526_reg_6027);

assign or_ln340_2093_fu_4091_p2 = (or_ln340_2134_fu_4086_p2 | and_ln785_526_reg_6027);

assign or_ln340_2094_fu_4174_p2 = (xor_ln340_542_fu_4168_p2 | tmp_4176_fu_4142_p3);

assign or_ln340_2095_fu_4214_p2 = (and_ln786_1584_fu_4209_p2 | and_ln785_527_reg_6051);

assign or_ln340_2096_fu_4229_p2 = (or_ln340_2135_fu_4224_p2 | and_ln785_527_reg_6051);

assign or_ln340_2097_fu_4316_p2 = (xor_ln340_544_fu_4310_p2 | tmp_4181_fu_4284_p3);

assign or_ln340_2098_fu_5500_p2 = (and_ln786_1587_reg_6215 | and_ln785_528_reg_6210);

assign or_ln340_2099_fu_4426_p2 = (or_ln340_2136_fu_4420_p2 | and_ln785_528_fu_4383_p2);

assign or_ln340_2100_fu_5584_p2 = (xor_ln340_546_fu_5578_p2 | tmp_4186_fu_5552_p3);

assign or_ln340_2101_fu_1505_p2 = (and_ln786_1590_fu_1499_p2 | and_ln785_529_fu_1473_p2);

assign or_ln340_2102_fu_1523_p2 = (or_ln340_2137_fu_1517_p2 | and_ln785_529_fu_1473_p2);

assign or_ln340_2103_fu_1609_p2 = (xor_ln340_548_fu_1603_p2 | tmp_4191_fu_1577_p3);

assign or_ln340_2104_fu_4445_p2 = (and_ln786_1593_fu_4440_p2 | and_ln785_530_reg_6080);

assign or_ln340_2105_fu_4460_p2 = (or_ln340_2138_fu_4455_p2 | and_ln785_530_reg_6080);

assign or_ln340_2106_fu_4547_p2 = (xor_ln340_550_fu_4541_p2 | tmp_4196_fu_4515_p3);

assign or_ln340_2107_fu_4683_p2 = (and_ln786_1596_fu_4677_p2 | and_ln785_531_fu_4651_p2);

assign or_ln340_2108_fu_4701_p2 = (or_ln340_2139_fu_4695_p2 | and_ln785_531_fu_4651_p2);

assign or_ln340_2109_fu_4791_p2 = (xor_ln340_552_fu_4785_p2 | tmp_4201_fu_4759_p3);

assign or_ln340_2110_fu_1757_p2 = (and_ln786_1599_fu_1751_p2 | and_ln785_532_fu_1725_p2);

assign or_ln340_2111_fu_1775_p2 = (or_ln340_2140_fu_1769_p2 | and_ln785_532_fu_1725_p2);

assign or_ln340_2112_fu_1861_p2 = (xor_ln340_554_fu_1855_p2 | tmp_4206_fu_1829_p3);

assign or_ln340_2113_fu_4834_p2 = (and_ln786_1602_fu_4829_p2 | and_ln785_533_reg_6109);

assign or_ln340_2114_fu_4849_p2 = (or_ln340_2141_fu_4844_p2 | and_ln785_533_reg_6109);

assign or_ln340_2115_fu_4936_p2 = (xor_ln340_556_fu_4930_p2 | tmp_4211_fu_4904_p3);

assign or_ln340_2116_fu_5046_p2 = (and_ln786_1605_fu_5040_p2 | and_ln785_534_fu_5014_p2);

assign or_ln340_2117_fu_5064_p2 = (or_ln340_2142_fu_5058_p2 | and_ln785_534_fu_5014_p2);

assign or_ln340_2118_fu_5154_p2 = (xor_ln340_558_fu_5148_p2 | tmp_4216_fu_5122_p3);

assign or_ln340_2119_fu_627_p2 = (xor_ln340_1048_fu_621_p2 | tmp_4099_fu_595_p3);

assign or_ln340_2120_fu_1965_p2 = (xor_ln340_fu_1960_p2 | tmp_4104_reg_5925);

assign or_ln340_2121_fu_2216_p2 = (xor_ln340_1049_fu_2210_p2 | tmp_4109_fu_2184_p3);

assign or_ln340_2122_fu_929_p2 = (xor_ln340_1050_fu_923_p2 | tmp_4114_fu_897_p3);

assign or_ln340_2123_fu_2362_p2 = (xor_ln340_1051_fu_2357_p2 | tmp_4119_reg_5955);

assign or_ln340_2124_fu_2611_p2 = (xor_ln340_1052_fu_2605_p2 | tmp_4124_fu_2579_p3);

assign or_ln340_2125_fu_1202_p2 = (xor_ln340_1053_fu_1196_p2 | tmp_4129_fu_1170_p3);

assign or_ln340_2126_fu_2950_p2 = (xor_ln340_1054_fu_2944_p2 | tmp_4134_fu_2918_p3);

assign or_ln340_2127_fu_3147_p2 = (xor_ln340_1055_fu_3141_p2 | tmp_4139_fu_3115_p3);

assign or_ln340_2128_fu_3203_p2 = (xor_ln340_1056_fu_3198_p2 | tmp_4144_reg_5985);

assign or_ln340_2129_fu_3422_p2 = (xor_ln340_1057_fu_3416_p2 | tmp_4149_fu_3390_p3);

assign or_ln340_2130_fu_3614_p2 = (xor_ln340_1058_fu_3608_p2 | tmp_4154_fu_3588_p3);

assign or_ln340_2131_fu_3646_p2 = (xor_ln340_1059_fu_3641_p2 | tmp_4159_reg_6009);

assign or_ln340_2132_fu_3867_p2 = (xor_ln340_1060_fu_3861_p2 | tmp_4164_fu_3835_p3);

assign or_ln340_2133_fu_4054_p2 = (xor_ln340_1061_fu_4048_p2 | tmp_4169_fu_4028_p3);

assign or_ln340_2134_fu_4086_p2 = (xor_ln340_1062_fu_4081_p2 | tmp_4174_reg_6033);

assign or_ln340_2135_fu_4224_p2 = (xor_ln340_1063_fu_4219_p2 | tmp_4179_reg_6057);

assign or_ln340_2136_fu_4420_p2 = (xor_ln340_1064_fu_4414_p2 | tmp_4184_fu_4394_p3);

assign or_ln340_2137_fu_1517_p2 = (xor_ln340_1065_fu_1511_p2 | tmp_4189_fu_1485_p3);

assign or_ln340_2138_fu_4455_p2 = (xor_ln340_1066_fu_4450_p2 | tmp_4194_reg_6086);

assign or_ln340_2139_fu_4695_p2 = (xor_ln340_1067_fu_4689_p2 | tmp_4199_fu_4663_p3);

assign or_ln340_2140_fu_1769_p2 = (xor_ln340_1068_fu_1763_p2 | tmp_4204_fu_1737_p3);

assign or_ln340_2141_fu_4844_p2 = (xor_ln340_1069_fu_4839_p2 | tmp_4209_reg_6115);

assign or_ln340_2142_fu_5058_p2 = (xor_ln340_1070_fu_5052_p2 | tmp_4214_fu_5026_p3);

assign or_ln340_fu_615_p2 = (and_ln786_1536_fu_609_p2 | and_ln785_fu_583_p2);

assign or_ln785_512_fu_771_p2 = (sext_ln1118_521_fu_761_p1 | mul_ln731_fu_5670_p2);

assign or_ln785_513_fu_2152_p2 = (sub_ln731_1_fu_2142_p2 | sext_ln700_fu_2119_p1);

assign or_ln785_514_fu_865_p2 = (sext_ln1118_527_fu_815_p1 | add_ln731_fu_855_p2);

assign or_ln785_515_fu_1058_p2 = (mul_ln731_1_fu_5687_p2 | mul_ln1118_512_fu_5678_p2);

assign or_ln785_516_fu_2547_p2 = (sext_ln1118_529_fu_2499_p1 | add_ln731_1_fu_2541_p2);

assign or_ln785_517_fu_1138_p2 = (sub_ln731_2_fu_1128_p2 | sext_ln1118_532_fu_1116_p1);

assign or_ln785_518_fu_2886_p2 = (sub_ln731_3_fu_2876_p2 | sext_ln1118_534_fu_2838_p1);

assign or_ln785_519_fu_3083_p2 = (shl_ln731_5_fu_2522_p3 | sext_ln1118_523_fu_2093_p1);

assign or_ln785_520_fu_1248_p2 = (sext_ln1118_535_fu_1238_p1 | mul_ln731_2_fu_5703_p2);

assign or_ln785_521_fu_3358_p2 = (sub_ln731_4_fu_3348_p2 | sext_ln1118_536_fu_3336_p1);

assign or_ln785_522_fu_3558_p2 = (sext_ln1118_537_fu_3548_p1 | mul_ln731_3_fu_5800_p2);

assign or_ln785_523_fu_1296_p2 = (sext_ln1118_538_fu_1286_p1 | mul_ln731_4_fu_5719_p2);

assign or_ln785_524_fu_3803_p2 = (sub_ln731_5_fu_3793_p2 | sext_ln1118_539_fu_3770_p1);

assign or_ln785_525_fu_4000_p2 = (mul_ln731_5_fu_5817_p2 | mul_ln1118_516_fu_5808_p2);

assign or_ln785_526_fu_1344_p2 = (sext_ln1118_540_fu_1334_p1 | mul_ln731_6_fu_5735_p2);

assign or_ln785_527_fu_1389_p2 = (mul_ln731_7_fu_5752_p2 | mul_ln1118_518_fu_5743_p2);

assign or_ln785_528_fu_4364_p2 = (sext_ln1118_541_fu_4352_p1 | mul_ln731_8_fu_5825_p2);

assign or_ln785_529_fu_1453_p2 = (sext_ln1118_542_fu_1431_p1 | add_ln731_2_fu_1443_p2);

assign or_ln785_530_fu_1649_p2 = (sext_ln1118_543_fu_1639_p1 | mul_ln731_9_fu_5768_p2);

assign or_ln785_531_fu_4631_p2 = (sub_ln731_6_fu_4621_p2 | sext_ln1118_544_fu_4583_p1);

assign or_ln785_532_fu_1705_p2 = (sub_ln1118_fu_519_p2 | sext_ln700_1_fu_1693_p1);

assign or_ln785_533_fu_1901_p2 = (sext_ln1118_545_fu_1891_p1 | mul_ln731_10_fu_5784_p2);

assign or_ln785_534_fu_4994_p2 = (sext_ln1118_546_fu_4972_p1 | add_ln731_3_fu_4984_p2);

assign or_ln785_fu_563_p2 = (sub_ln731_fu_553_p2 | sext_ln1118_516_fu_525_p1);

assign res_V_data_0_V_din = tmp_data_0_V_19_reg_6121;

assign res_V_data_1_V_din = tmp_data_1_V_reg_6126;

assign res_V_data_2_V_din = ((or_ln340_2073_fu_5240_p2[0:0] === 1'b1) ? select_ln340_1040_fu_5246_p3 : acc_2_V_67_fu_5254_p3);

assign res_V_data_3_V_din = ((or_ln340_2082_fu_5353_p2[0:0] === 1'b1) ? select_ln340_1046_fu_5359_p3 : acc_3_V_67_fu_5367_p3);

assign res_V_data_4_V_din = ((or_ln340_2091_fu_5466_p2[0:0] === 1'b1) ? select_ln340_1052_fu_5472_p3 : acc_4_V_67_fu_5480_p3);

assign res_V_data_5_V_din = ((or_ln340_2100_fu_5584_p2[0:0] === 1'b1) ? select_ln340_1058_fu_5590_p3 : acc_5_V_67_fu_5598_p3);

assign res_V_data_6_V_din = tmp_data_6_V_reg_6226;

assign res_V_data_7_V_din = tmp_data_7_V_reg_6231;

assign select_ln180_fu_423_p3 = ((trunc_ln172_fu_419_p1[0:0] === 1'b1) ? kernel_data_V_3_2_load_reg_5851 : kernel_data_V_3_1);

assign select_ln340_1024_fu_725_p3 = ((xor_ln340_1024_fu_707_p2[0:0] === 1'b1) ? 24'd8388607 : acc_0_V_fu_681_p2);

assign select_ln340_1025_fu_1975_p3 = ((or_ln340_2050_fu_1955_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln731_2_fu_1942_p1);

assign select_ln340_1026_fu_2063_p3 = ((xor_ln340_1025_fu_2045_p2[0:0] === 1'b1) ? 24'd8388607 : acc_0_V_64_fu_2020_p2);

assign select_ln340_1027_fu_2228_p3 = ((or_ln340_2053_fu_2204_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln731_4_fu_2148_p1);

assign select_ln340_1028_fu_2318_p3 = ((xor_ln340_1026_fu_2300_p2[0:0] === 1'b1) ? 24'd8388607 : acc_0_V_66_fu_2274_p2);

assign select_ln340_1029_fu_941_p3 = ((or_ln340_2056_fu_917_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln731_8_fu_861_p1);

assign select_ln340_1030_fu_1027_p3 = ((xor_ln340_1027_fu_1009_p2[0:0] === 1'b1) ? 24'd8388607 : acc_1_V_fu_983_p2);

assign select_ln340_1031_fu_2372_p3 = ((or_ln340_2059_fu_2352_p2[0:0] === 1'b1) ? 24'd8388607 : mul_ln731_1_reg_5943);

assign select_ln340_1032_fu_2458_p3 = ((xor_ln340_1028_fu_2440_p2[0:0] === 1'b1) ? 24'd8388607 : acc_1_V_64_fu_2415_p2);

assign select_ln340_1033_fu_2623_p3 = ((or_ln340_2062_fu_2599_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln731_1_fu_2541_p2);

assign select_ln340_1034_fu_2713_p3 = ((xor_ln340_1029_fu_2695_p2[0:0] === 1'b1) ? 24'd8388607 : acc_1_V_66_fu_2669_p2);

assign select_ln340_1035_fu_1214_p3 = ((or_ln340_2065_fu_1190_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln731_13_fu_1134_p1);

assign select_ln340_1036_fu_2797_p3 = ((xor_ln340_1030_fu_2779_p2[0:0] === 1'b1) ? 24'd8388607 : acc_2_V_fu_2754_p2);

assign select_ln340_1037_fu_2962_p3 = ((or_ln340_2068_fu_2938_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln731_17_fu_2882_p1);

assign select_ln340_1038_fu_3052_p3 = ((xor_ln340_1031_fu_3034_p2[0:0] === 1'b1) ? 24'd8388607 : acc_2_V_64_fu_3008_p2);

assign select_ln340_1039_fu_3159_p3 = ((or_ln340_2071_fu_3135_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln731_12_fu_2537_p1);

assign select_ln340_1040_fu_5246_p3 = ((xor_ln340_1032_fu_5228_p2[0:0] === 1'b1) ? 24'd8388607 : acc_2_V_66_fu_5204_p2);

assign select_ln340_1041_fu_3213_p3 = ((or_ln340_2074_fu_3193_p2[0:0] === 1'b1) ? 24'd8388607 : mul_ln731_2_reg_5973);

assign select_ln340_1042_fu_3297_p3 = ((xor_ln340_1033_fu_3279_p2[0:0] === 1'b1) ? 24'd8388607 : acc_3_V_fu_3253_p2);

assign select_ln340_1043_fu_3434_p3 = ((or_ln340_2077_fu_3410_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln731_18_fu_3354_p1);

assign select_ln340_1044_fu_3524_p3 = ((xor_ln340_1034_fu_3506_p2[0:0] === 1'b1) ? 24'd8388607 : acc_3_V_64_fu_3480_p2);

assign select_ln340_1045_fu_5275_p3 = ((or_ln340_2080_fu_5271_p2[0:0] === 1'b1) ? 24'd8388607 : mul_ln731_3_reg_6149);

assign select_ln340_1046_fu_5359_p3 = ((xor_ln340_1035_fu_5341_p2[0:0] === 1'b1) ? 24'd8388607 : acc_3_V_66_fu_5316_p2);

assign select_ln340_1047_fu_3656_p3 = ((or_ln340_2083_fu_3636_p2[0:0] === 1'b1) ? 24'd8388607 : mul_ln731_4_reg_5997);

assign select_ln340_1048_fu_3740_p3 = ((xor_ln340_1036_fu_3722_p2[0:0] === 1'b1) ? 24'd8388607 : acc_4_V_fu_3696_p2);

assign select_ln340_1049_fu_3879_p3 = ((or_ln340_2086_fu_3855_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln731_20_fu_3799_p1);

assign select_ln340_1050_fu_3969_p3 = ((xor_ln340_1037_fu_3951_p2[0:0] === 1'b1) ? 24'd8388607 : acc_4_V_64_fu_3925_p2);

assign select_ln340_1051_fu_5388_p3 = ((or_ln340_2089_fu_5384_p2[0:0] === 1'b1) ? 24'd8388607 : mul_ln731_5_reg_6177);

assign select_ln340_1052_fu_5472_p3 = ((xor_ln340_1038_fu_5454_p2[0:0] === 1'b1) ? 24'd8388607 : acc_4_V_66_fu_5429_p2);

assign select_ln340_1053_fu_4096_p3 = ((or_ln340_2092_fu_4076_p2[0:0] === 1'b1) ? 24'd8388607 : mul_ln731_6_reg_6021);

assign select_ln340_1054_fu_4180_p3 = ((xor_ln340_1039_fu_4162_p2[0:0] === 1'b1) ? 24'd8388607 : acc_5_V_fu_4136_p2);

assign select_ln340_1055_fu_4234_p3 = ((or_ln340_2095_fu_4214_p2[0:0] === 1'b1) ? 24'd8388607 : mul_ln731_7_reg_6045);

assign select_ln340_1056_fu_4322_p3 = ((xor_ln340_1040_fu_4304_p2[0:0] === 1'b1) ? 24'd8388607 : acc_5_V_64_fu_4278_p2);

assign select_ln340_1057_fu_5504_p3 = ((or_ln340_2098_fu_5500_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln731_21_fu_5497_p1);

assign select_ln340_1058_fu_5590_p3 = ((xor_ln340_1041_fu_5572_p2[0:0] === 1'b1) ? 24'd8388607 : acc_5_V_66_fu_5547_p2);

assign select_ln340_1059_fu_1529_p3 = ((or_ln340_2101_fu_1505_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln731_22_fu_1449_p1);

assign select_ln340_1060_fu_1615_p3 = ((xor_ln340_1042_fu_1597_p2[0:0] === 1'b1) ? 24'd8388607 : acc_6_V_fu_1571_p2);

assign select_ln340_1061_fu_4465_p3 = ((or_ln340_2104_fu_4445_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln731_23_fu_4432_p1);

assign select_ln340_1062_fu_4553_p3 = ((xor_ln340_1043_fu_4535_p2[0:0] === 1'b1) ? 24'd8388607 : acc_6_V_64_fu_4510_p2);

assign select_ln340_1063_fu_4707_p3 = ((or_ln340_2107_fu_4683_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln731_27_fu_4627_p1);

assign select_ln340_1064_fu_4797_p3 = ((xor_ln340_1044_fu_4779_p2[0:0] === 1'b1) ? 24'd8388607 : acc_6_V_66_fu_4753_p2);

assign select_ln340_1065_fu_1781_p3 = ((or_ln340_2110_fu_1757_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln1118_517_fu_529_p1);

assign select_ln340_1066_fu_1867_p3 = ((xor_ln340_1045_fu_1849_p2[0:0] === 1'b1) ? 24'd8388607 : acc_7_V_fu_1823_p2);

assign select_ln340_1067_fu_4854_p3 = ((or_ln340_2113_fu_4834_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln731_28_fu_4821_p1);

assign select_ln340_1068_fu_4942_p3 = ((xor_ln340_1046_fu_4924_p2[0:0] === 1'b1) ? 24'd8388607 : acc_7_V_64_fu_4899_p2);

assign select_ln340_1069_fu_5070_p3 = ((or_ln340_2116_fu_5046_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln731_29_fu_4990_p1);

assign select_ln340_1070_fu_5160_p3 = ((xor_ln340_1047_fu_5142_p2[0:0] === 1'b1) ? 24'd8388607 : acc_7_V_66_fu_5116_p2);

assign select_ln340_2048_fu_655_p3 = ((or_ln340_2048_fu_633_p2[0:0] === 1'b1) ? select_ln340_fu_639_p3 : select_ln388_fu_647_p3);

assign select_ln340_2049_fu_741_p3 = ((or_ln340_2049_fu_719_p2[0:0] === 1'b1) ? select_ln340_1024_fu_725_p3 : acc_0_V_63_fu_733_p3);

assign select_ln340_2050_fu_1991_p3 = ((or_ln340_2051_fu_1970_p2[0:0] === 1'b1) ? select_ln340_1025_fu_1975_p3 : select_ln388_1025_fu_1983_p3);

assign select_ln340_2051_fu_2079_p3 = ((or_ln340_2052_fu_2057_p2[0:0] === 1'b1) ? select_ln340_1026_fu_2063_p3 : acc_0_V_65_fu_2071_p3);

assign select_ln340_2052_fu_2244_p3 = ((or_ln340_2054_fu_2222_p2[0:0] === 1'b1) ? select_ln340_1027_fu_2228_p3 : select_ln388_1027_fu_2236_p3);

assign select_ln340_2054_fu_957_p3 = ((or_ln340_2057_fu_935_p2[0:0] === 1'b1) ? select_ln340_1029_fu_941_p3 : select_ln388_1029_fu_949_p3);

assign select_ln340_2055_fu_1043_p3 = ((or_ln340_2058_fu_1021_p2[0:0] === 1'b1) ? select_ln340_1030_fu_1027_p3 : acc_1_V_63_fu_1035_p3);

assign select_ln340_2056_fu_2386_p3 = ((or_ln340_2060_fu_2367_p2[0:0] === 1'b1) ? select_ln340_1031_fu_2372_p3 : select_ln388_1031_fu_2379_p3);

assign select_ln340_2057_fu_2474_p3 = ((or_ln340_2061_fu_2452_p2[0:0] === 1'b1) ? select_ln340_1032_fu_2458_p3 : acc_1_V_65_fu_2466_p3);

assign select_ln340_2058_fu_2639_p3 = ((or_ln340_2063_fu_2617_p2[0:0] === 1'b1) ? select_ln340_1033_fu_2623_p3 : select_ln388_1033_fu_2631_p3);

assign select_ln340_2060_fu_1230_p3 = ((or_ln340_2066_fu_1208_p2[0:0] === 1'b1) ? select_ln340_1035_fu_1214_p3 : select_ln388_1035_fu_1222_p3);

assign select_ln340_2061_fu_2813_p3 = ((or_ln340_2067_fu_2791_p2[0:0] === 1'b1) ? select_ln340_1036_fu_2797_p3 : acc_2_V_63_fu_2805_p3);

assign select_ln340_2062_fu_2978_p3 = ((or_ln340_2069_fu_2956_p2[0:0] === 1'b1) ? select_ln340_1037_fu_2962_p3 : select_ln388_1037_fu_2970_p3);

assign select_ln340_2063_fu_3068_p3 = ((or_ln340_2070_fu_3046_p2[0:0] === 1'b1) ? select_ln340_1038_fu_3052_p3 : acc_2_V_65_fu_3060_p3);

assign select_ln340_2064_fu_3175_p3 = ((or_ln340_2072_fu_3153_p2[0:0] === 1'b1) ? select_ln340_1039_fu_3159_p3 : select_ln388_1039_fu_3167_p3);

assign select_ln340_2066_fu_3227_p3 = ((or_ln340_2075_fu_3208_p2[0:0] === 1'b1) ? select_ln340_1041_fu_3213_p3 : select_ln388_1041_fu_3220_p3);

assign select_ln340_2067_fu_3313_p3 = ((or_ln340_2076_fu_3291_p2[0:0] === 1'b1) ? select_ln340_1042_fu_3297_p3 : acc_3_V_63_fu_3305_p3);

assign select_ln340_2068_fu_3450_p3 = ((or_ln340_2078_fu_3428_p2[0:0] === 1'b1) ? select_ln340_1043_fu_3434_p3 : select_ln388_1043_fu_3442_p3);

assign select_ln340_2069_fu_3540_p3 = ((or_ln340_2079_fu_3518_p2[0:0] === 1'b1) ? select_ln340_1044_fu_3524_p3 : acc_3_V_65_fu_3532_p3);

assign select_ln340_2070_fu_5288_p3 = ((or_ln340_2081_reg_6166[0:0] === 1'b1) ? select_ln340_1045_fu_5275_p3 : select_ln388_1045_fu_5282_p3);

assign select_ln340_2072_fu_3670_p3 = ((or_ln340_2084_fu_3651_p2[0:0] === 1'b1) ? select_ln340_1047_fu_3656_p3 : select_ln388_1047_fu_3663_p3);

assign select_ln340_2073_fu_3756_p3 = ((or_ln340_2085_fu_3734_p2[0:0] === 1'b1) ? select_ln340_1048_fu_3740_p3 : acc_4_V_63_fu_3748_p3);

assign select_ln340_2074_fu_3895_p3 = ((or_ln340_2087_fu_3873_p2[0:0] === 1'b1) ? select_ln340_1049_fu_3879_p3 : select_ln388_1049_fu_3887_p3);

assign select_ln340_2075_fu_3985_p3 = ((or_ln340_2088_fu_3963_p2[0:0] === 1'b1) ? select_ln340_1050_fu_3969_p3 : acc_4_V_65_fu_3977_p3);

assign select_ln340_2076_fu_5401_p3 = ((or_ln340_2090_reg_6194[0:0] === 1'b1) ? select_ln340_1051_fu_5388_p3 : select_ln388_1051_fu_5395_p3);

assign select_ln340_2078_fu_4110_p3 = ((or_ln340_2093_fu_4091_p2[0:0] === 1'b1) ? select_ln340_1053_fu_4096_p3 : select_ln388_1053_fu_4103_p3);

assign select_ln340_2079_fu_4196_p3 = ((or_ln340_2094_fu_4174_p2[0:0] === 1'b1) ? select_ln340_1054_fu_4180_p3 : acc_5_V_63_fu_4188_p3);

assign select_ln340_2080_fu_4248_p3 = ((or_ln340_2096_fu_4229_p2[0:0] === 1'b1) ? select_ln340_1055_fu_4234_p3 : select_ln388_1055_fu_4241_p3);

assign select_ln340_2081_fu_4338_p3 = ((or_ln340_2097_fu_4316_p2[0:0] === 1'b1) ? select_ln340_1056_fu_4322_p3 : acc_5_V_65_fu_4330_p3);

assign select_ln340_2082_fu_5519_p3 = ((or_ln340_2099_reg_6221[0:0] === 1'b1) ? select_ln340_1057_fu_5504_p3 : select_ln388_1057_fu_5512_p3);

assign select_ln340_2084_fu_1545_p3 = ((or_ln340_2102_fu_1523_p2[0:0] === 1'b1) ? select_ln340_1059_fu_1529_p3 : select_ln388_1059_fu_1537_p3);

assign select_ln340_2085_fu_1631_p3 = ((or_ln340_2103_fu_1609_p2[0:0] === 1'b1) ? select_ln340_1060_fu_1615_p3 : acc_6_V_63_fu_1623_p3);

assign select_ln340_2086_fu_4481_p3 = ((or_ln340_2105_fu_4460_p2[0:0] === 1'b1) ? select_ln340_1061_fu_4465_p3 : select_ln388_1061_fu_4473_p3);

assign select_ln340_2087_fu_4569_p3 = ((or_ln340_2106_fu_4547_p2[0:0] === 1'b1) ? select_ln340_1062_fu_4553_p3 : acc_6_V_65_fu_4561_p3);

assign select_ln340_2088_fu_4723_p3 = ((or_ln340_2108_fu_4701_p2[0:0] === 1'b1) ? select_ln340_1063_fu_4707_p3 : select_ln388_1063_fu_4715_p3);

assign select_ln340_2090_fu_1797_p3 = ((or_ln340_2111_fu_1775_p2[0:0] === 1'b1) ? select_ln340_1065_fu_1781_p3 : select_ln388_1065_fu_1789_p3);

assign select_ln340_2091_fu_1883_p3 = ((or_ln340_2112_fu_1861_p2[0:0] === 1'b1) ? select_ln340_1066_fu_1867_p3 : acc_7_V_63_fu_1875_p3);

assign select_ln340_2092_fu_4870_p3 = ((or_ln340_2114_fu_4849_p2[0:0] === 1'b1) ? select_ln340_1067_fu_4854_p3 : select_ln388_1067_fu_4862_p3);

assign select_ln340_2093_fu_4958_p3 = ((or_ln340_2115_fu_4936_p2[0:0] === 1'b1) ? select_ln340_1068_fu_4942_p3 : acc_7_V_65_fu_4950_p3);

assign select_ln340_2094_fu_5086_p3 = ((or_ln340_2117_fu_5064_p2[0:0] === 1'b1) ? select_ln340_1069_fu_5070_p3 : select_ln388_1069_fu_5078_p3);

assign select_ln340_fu_639_p3 = ((or_ln340_fu_615_p2[0:0] === 1'b1) ? 24'd8388607 : sext_ln731_1_fu_559_p1);

assign select_ln388_1025_fu_1983_p3 = ((and_ln786_1539_fu_1950_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln731_2_fu_1942_p1);

assign select_ln388_1027_fu_2236_p3 = ((and_ln786_1542_fu_2198_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln731_4_fu_2148_p1);

assign select_ln388_1029_fu_949_p3 = ((and_ln786_1545_fu_911_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln731_8_fu_861_p1);

assign select_ln388_1031_fu_2379_p3 = ((and_ln786_1548_fu_2347_p2[0:0] === 1'b1) ? 24'd8388608 : mul_ln731_1_reg_5943);

assign select_ln388_1033_fu_2631_p3 = ((and_ln786_1551_fu_2593_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln731_1_fu_2541_p2);

assign select_ln388_1035_fu_1222_p3 = ((and_ln786_1554_fu_1184_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln731_13_fu_1134_p1);

assign select_ln388_1037_fu_2970_p3 = ((and_ln786_1557_fu_2932_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln731_17_fu_2882_p1);

assign select_ln388_1039_fu_3167_p3 = ((and_ln786_1560_fu_3129_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln731_12_fu_2537_p1);

assign select_ln388_1041_fu_3220_p3 = ((and_ln786_1563_fu_3188_p2[0:0] === 1'b1) ? 24'd8388608 : mul_ln731_2_reg_5973);

assign select_ln388_1043_fu_3442_p3 = ((and_ln786_1566_fu_3404_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln731_18_fu_3354_p1);

assign select_ln388_1045_fu_5282_p3 = ((and_ln786_1569_reg_6160[0:0] === 1'b1) ? 24'd8388608 : mul_ln731_3_reg_6149);

assign select_ln388_1047_fu_3663_p3 = ((and_ln786_1572_fu_3631_p2[0:0] === 1'b1) ? 24'd8388608 : mul_ln731_4_reg_5997);

assign select_ln388_1049_fu_3887_p3 = ((and_ln786_1575_fu_3849_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln731_20_fu_3799_p1);

assign select_ln388_1051_fu_5395_p3 = ((and_ln786_1578_reg_6188[0:0] === 1'b1) ? 24'd8388608 : mul_ln731_5_reg_6177);

assign select_ln388_1053_fu_4103_p3 = ((and_ln786_1581_fu_4071_p2[0:0] === 1'b1) ? 24'd8388608 : mul_ln731_6_reg_6021);

assign select_ln388_1055_fu_4241_p3 = ((and_ln786_1584_fu_4209_p2[0:0] === 1'b1) ? 24'd8388608 : mul_ln731_7_reg_6045);

assign select_ln388_1057_fu_5512_p3 = ((and_ln786_1587_reg_6215[0:0] === 1'b1) ? 24'd8388608 : sext_ln731_21_fu_5497_p1);

assign select_ln388_1059_fu_1537_p3 = ((and_ln786_1590_fu_1499_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln731_22_fu_1449_p1);

assign select_ln388_1061_fu_4473_p3 = ((and_ln786_1593_fu_4440_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln731_23_fu_4432_p1);

assign select_ln388_1063_fu_4715_p3 = ((and_ln786_1596_fu_4677_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln731_27_fu_4627_p1);

assign select_ln388_1065_fu_1789_p3 = ((and_ln786_1599_fu_1751_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln1118_517_fu_529_p1);

assign select_ln388_1067_fu_4862_p3 = ((and_ln786_1602_fu_4829_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln731_28_fu_4821_p1);

assign select_ln388_1069_fu_5078_p3 = ((and_ln786_1605_fu_5040_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln731_29_fu_4990_p1);

assign select_ln388_fu_647_p3 = ((and_ln786_1536_fu_609_p2[0:0] === 1'b1) ? 24'd8388608 : sext_ln731_1_fu_559_p1);

assign select_ln391_fu_5636_p3 = ((icmp_ln360_reg_5877[0:0] === 1'b1) ? 32'd2 : add_ln391_fu_5631_p2);

assign sext_ln1116_32_fu_749_p0 = kernel_data_V_3_1;

assign sext_ln1116_32_fu_749_p1 = sext_ln1116_32_fu_749_p0;

assign sext_ln1116_33_fu_2087_p1 = tmp_data_0_V_reg_5833;

assign sext_ln1116_fu_487_p0 = kernel_data_V_3_0;

assign sext_ln1116_fu_487_p1 = sext_ln1116_fu_487_p0;

assign sext_ln1118_512_fu_495_p0 = kernel_data_V_3_0;

assign sext_ln1118_512_fu_495_p1 = sext_ln1118_512_fu_495_p0;

assign sext_ln1118_513_fu_499_p0 = kernel_data_V_3_0;

assign sext_ln1118_513_fu_499_p1 = sext_ln1118_513_fu_499_p0;

assign sext_ln1118_514_fu_511_p1 = shl_ln_fu_503_p3;

assign sext_ln1118_515_fu_515_p1 = shl_ln_fu_503_p3;

assign sext_ln1118_516_fu_525_p1 = sub_ln1118_fu_519_p2;

assign sext_ln1118_517_fu_529_p1 = sub_ln1118_fu_519_p2;

assign sext_ln1118_518_fu_753_p0 = kernel_data_V_3_1;

assign sext_ln1118_518_fu_753_p1 = sext_ln1118_518_fu_753_p0;

assign sext_ln1118_519_fu_757_p0 = kernel_data_V_3_1;

assign sext_ln1118_519_fu_757_p1 = sext_ln1118_519_fu_757_p0;

assign sext_ln1118_520_fu_1939_p1 = kernel_data_V_3_1_load_1_reg_5898;

assign sext_ln1118_521_fu_761_p1 = mul_ln1118_fu_5662_p2;

assign sext_ln1118_523_fu_2093_p1 = tmp_data_0_V_reg_5833;

assign sext_ln1118_524_fu_2096_p1 = tmp_data_0_V_reg_5833;

assign sext_ln1118_526_fu_2109_p1 = $signed(shl_ln1118_1_fu_2102_p3);

assign sext_ln1118_527_fu_815_p1 = add_ln1118_fu_809_p2;

assign sext_ln1118_528_fu_2489_p1 = $signed(shl_ln1118_2_fu_2482_p3);

assign sext_ln1118_529_fu_2499_p1 = add_ln1118_1_fu_2493_p2;

assign sext_ln1118_530_fu_1102_p1 = shl_ln1118_3_fu_1094_p3;

assign sext_ln1118_531_fu_1106_p1 = shl_ln1118_3_fu_1094_p3;

assign sext_ln1118_532_fu_1116_p1 = sub_ln1118_2_fu_1110_p2;

assign sext_ln1118_533_fu_2828_p1 = shl_ln1118_4_fu_2821_p3;

assign sext_ln1118_534_fu_2838_p1 = sub_ln1118_3_fu_2832_p2;

assign sext_ln1118_535_fu_1238_p1 = mul_ln1118_513_fu_5695_p2;

assign sext_ln1118_536_fu_3336_p1 = $signed(sub_ln1118_7_fu_3324_p2);

assign sext_ln1118_537_fu_3548_p1 = mul_ln1118_514_fu_5792_p2;

assign sext_ln1118_538_fu_1286_p1 = mul_ln1118_515_fu_5711_p2;

assign sext_ln1118_539_fu_3770_p1 = sub_ln1118_4_fu_3764_p2;

assign sext_ln1118_540_fu_1334_p1 = mul_ln1118_517_fu_5727_p2;

assign sext_ln1118_541_fu_4352_p1 = mul_ln1118_519_fu_4346_p2;

assign sext_ln1118_542_fu_1431_p1 = add_ln1118_2_fu_1425_p2;

assign sext_ln1118_543_fu_1639_p1 = mul_ln1118_520_fu_5760_p2;

assign sext_ln1118_544_fu_4583_p1 = sub_ln1118_5_fu_4577_p2;

assign sext_ln1118_545_fu_1891_p1 = mul_ln1118_521_fu_5776_p2;

assign sext_ln1118_546_fu_4972_p1 = add_ln1118_3_fu_4966_p2;

assign sext_ln1118_547_fu_3321_p1 = kernel_data_V_3_1_load_1_reg_5898;

assign sext_ln1118_fu_491_p0 = kernel_data_V_3_0;

assign sext_ln1118_fu_491_p1 = sext_ln1118_fu_491_p0;

assign sext_ln700_1_fu_1693_p1 = sub_ln1118_6_fu_1687_p2;

assign sext_ln700_fu_2119_p1 = sub_ln1118_1_fu_2113_p2;

assign sext_ln703_1024_fu_1999_p1 = select_ln340_2049_reg_5892;

assign sext_ln703_1025_fu_2002_p1 = select_ln340_2050_fu_1991_p3;

assign sext_ln703_1026_fu_2252_p1 = select_ln340_2051_fu_2079_p3;

assign sext_ln703_1027_fu_2256_p1 = select_ln340_2052_fu_2244_p3;

assign sext_ln703_1028_fu_965_p1 = select_ln340_2054_fu_957_p3;

assign sext_ln703_1029_fu_2394_p1 = select_ln340_2055_reg_5931;

assign sext_ln703_1030_fu_2397_p1 = select_ln340_2056_fu_2386_p3;

assign sext_ln703_1031_fu_2647_p1 = select_ln340_2057_fu_2474_p3;

assign sext_ln703_1032_fu_2651_p1 = select_ln340_2058_fu_2639_p3;

assign sext_ln703_1033_fu_2737_p1 = select_ln340_2060_reg_5961;

assign sext_ln703_1034_fu_2986_p1 = select_ln340_2061_fu_2813_p3;

assign sext_ln703_1035_fu_2990_p1 = select_ln340_2062_fu_2978_p3;

assign sext_ln703_1036_fu_5184_p1 = select_ln340_2063_reg_6131;

assign sext_ln703_1037_fu_5187_p1 = select_ln340_2064_reg_6137;

assign sext_ln703_1038_fu_3235_p1 = select_ln340_2066_fu_3227_p3;

assign sext_ln703_1039_fu_3458_p1 = select_ln340_2067_fu_3313_p3;

assign sext_ln703_1040_fu_3462_p1 = select_ln340_2068_fu_3450_p3;

assign sext_ln703_1041_fu_5295_p1 = select_ln340_2069_reg_6143;

assign sext_ln703_1042_fu_5298_p1 = select_ln340_2070_fu_5288_p3;

assign sext_ln703_1043_fu_3678_p1 = select_ln340_2072_fu_3670_p3;

assign sext_ln703_1044_fu_3903_p1 = select_ln340_2073_fu_3756_p3;

assign sext_ln703_1045_fu_3907_p1 = select_ln340_2074_fu_3895_p3;

assign sext_ln703_1046_fu_5408_p1 = select_ln340_2075_reg_6171;

assign sext_ln703_1047_fu_5411_p1 = select_ln340_2076_fu_5401_p3;

assign sext_ln703_1048_fu_4118_p1 = select_ln340_2078_fu_4110_p3;

assign sext_ln703_1049_fu_4256_p1 = select_ln340_2079_fu_4196_p3;

assign sext_ln703_1050_fu_4260_p1 = select_ln340_2080_fu_4248_p3;

assign sext_ln703_1051_fu_5526_p1 = select_ln340_2081_reg_6199;

assign sext_ln703_1052_fu_5529_p1 = select_ln340_2082_fu_5519_p3;

assign sext_ln703_1053_fu_1553_p1 = select_ln340_2084_fu_1545_p3;

assign sext_ln703_1054_fu_4489_p1 = select_ln340_2085_reg_6063;

assign sext_ln703_1055_fu_4492_p1 = select_ln340_2086_fu_4481_p3;

assign sext_ln703_1056_fu_4731_p1 = select_ln340_2087_fu_4569_p3;

assign sext_ln703_1057_fu_4735_p1 = select_ln340_2088_fu_4723_p3;

assign sext_ln703_1058_fu_1805_p1 = select_ln340_2090_fu_1797_p3;

assign sext_ln703_1059_fu_4878_p1 = select_ln340_2091_reg_6092;

assign sext_ln703_1060_fu_4881_p1 = select_ln340_2092_fu_4870_p3;

assign sext_ln703_1061_fu_5094_p1 = select_ln340_2093_fu_4958_p3;

assign sext_ln703_1062_fu_5098_p1 = select_ln340_2094_fu_5086_p3;

assign sext_ln703_fu_663_p1 = select_ln340_2048_fu_655_p3;

assign sext_ln731_10_fu_2529_p1 = shl_ln731_5_fu_2522_p3;

assign sext_ln731_11_fu_2533_p1 = shl_ln731_5_fu_2522_p3;

assign sext_ln731_12_fu_2537_p1 = shl_ln731_5_fu_2522_p3;

assign sext_ln731_13_fu_1134_p1 = sub_ln731_2_fu_1128_p2;

assign sext_ln731_14_fu_2857_p1 = $signed(shl_ln731_6_fu_2850_p3);

assign sext_ln731_15_fu_2868_p1 = shl_ln731_7_fu_2861_p3;

assign sext_ln731_16_fu_2872_p1 = shl_ln731_7_fu_2861_p3;

assign sext_ln731_17_fu_2882_p1 = sub_ln731_3_fu_2876_p2;

assign sext_ln731_18_fu_3354_p1 = sub_ln731_4_fu_3348_p2;

assign sext_ln731_19_fu_3789_p1 = $signed(shl_ln731_8_fu_3782_p3);

assign sext_ln731_1_fu_559_p1 = sub_ln731_fu_553_p2;

assign sext_ln731_20_fu_3799_p1 = sub_ln731_5_fu_3793_p2;

assign sext_ln731_21_fu_5497_p1 = mul_ln731_8_reg_6205;

assign sext_ln731_22_fu_1449_p1 = add_ln731_2_fu_1443_p2;

assign sext_ln731_23_fu_4432_p1 = mul_ln731_9_reg_6075;

assign sext_ln731_24_fu_4602_p1 = $signed(shl_ln731_9_fu_4595_p3);

assign sext_ln731_25_fu_4613_p1 = shl_ln731_s_fu_4606_p3;

assign sext_ln731_26_fu_4617_p1 = shl_ln731_s_fu_4606_p3;

assign sext_ln731_27_fu_4627_p1 = sub_ln731_6_fu_4621_p2;

assign sext_ln731_28_fu_4821_p1 = mul_ln731_10_reg_6104;

assign sext_ln731_29_fu_4990_p1 = add_ln731_3_fu_4984_p2;

assign sext_ln731_2_fu_1942_p1 = mul_ln731_reg_5914;

assign sext_ln731_3_fu_2138_p1 = $signed(shl_ln731_1_fu_2131_p3);

assign sext_ln731_4_fu_2148_p1 = sub_ln731_1_fu_2142_p2;

assign sext_ln731_5_fu_835_p1 = $signed(shl_ln731_2_fu_827_p3);

assign sext_ln731_6_fu_847_p1 = shl_ln731_3_fu_839_p3;

assign sext_ln731_7_fu_851_p1 = shl_ln731_3_fu_839_p3;

assign sext_ln731_8_fu_861_p1 = add_ln731_fu_855_p2;

assign sext_ln731_9_fu_2518_p1 = $signed(shl_ln731_4_fu_2511_p3);

assign sext_ln731_fu_549_p1 = $signed(shl_ln1_fu_541_p3);

assign shl_ln1118_1_fu_2102_p3 = {{tmp_data_0_V_reg_5833}, {3'd0}};

assign shl_ln1118_2_fu_2482_p3 = {{tmp_data_0_V_reg_5833}, {6'd0}};

assign shl_ln1118_3_fu_1094_p1 = kernel_data_V_3_0;

assign shl_ln1118_3_fu_1094_p3 = {{shl_ln1118_3_fu_1094_p1}, {3'd0}};

assign shl_ln1118_4_fu_2821_p3 = {{kernel_data_V_3_1_load_1_reg_5898}, {4'd0}};

assign shl_ln1_fu_541_p1 = kernel_data_V_3_0;

assign shl_ln1_fu_541_p3 = {{shl_ln1_fu_541_p1}, {5'd0}};

assign shl_ln731_1_fu_2131_p3 = {{tmp_data_0_V_reg_5833}, {4'd0}};

assign shl_ln731_2_fu_827_p1 = kernel_data_V_3_0;

assign shl_ln731_2_fu_827_p3 = {{shl_ln731_2_fu_827_p1}, {6'd0}};

assign shl_ln731_3_fu_839_p1 = kernel_data_V_3_0;

assign shl_ln731_3_fu_839_p3 = {{shl_ln731_3_fu_839_p1}, {1'd0}};

assign shl_ln731_4_fu_2511_p3 = {{tmp_data_0_V_reg_5833}, {7'd0}};

assign shl_ln731_5_fu_2522_p3 = {{tmp_data_0_V_reg_5833}, {1'd0}};

assign shl_ln731_6_fu_2850_p3 = {{kernel_data_V_3_1_load_1_reg_5898}, {5'd0}};

assign shl_ln731_7_fu_2861_p3 = {{kernel_data_V_3_1_load_1_reg_5898}, {1'd0}};

assign shl_ln731_8_fu_3782_p3 = {{kernel_data_V_3_1_load_1_reg_5898}, {2'd0}};

assign shl_ln731_9_fu_4595_p3 = {{tmp_data_0_V_reg_5833}, {5'd0}};

assign shl_ln731_s_fu_4606_p3 = {{tmp_data_0_V_reg_5833}, {2'd0}};

assign shl_ln_fu_503_p1 = kernel_data_V_3_0;

assign shl_ln_fu_503_p3 = {{shl_ln_fu_503_p1}, {4'd0}};

assign start_out = real_start;

assign sub_ln1118_1_fu_2113_p2 = ($signed(20'd0) - $signed(sext_ln1118_526_fu_2109_p1));

assign sub_ln1118_2_fu_1110_p2 = ($signed(sext_ln1118_531_fu_1106_p1) - $signed(sext_ln731_fu_549_p1));

assign sub_ln1118_3_fu_2832_p2 = ($signed(sext_ln1118_533_fu_2828_p1) - $signed(sext_ln1118_520_fu_1939_p1));

assign sub_ln1118_4_fu_3764_p2 = ($signed(sext_ln1118_533_fu_2828_p1) - $signed(sext_ln731_15_fu_2868_p1));

assign sub_ln1118_5_fu_4577_p2 = ($signed(sext_ln731_3_fu_2138_p1) - $signed(sext_ln731_11_fu_2533_p1));

assign sub_ln1118_6_fu_1687_p2 = ($signed(20'd0) - $signed(sext_ln1118_530_fu_1102_p1));

assign sub_ln1118_7_fu_3324_p2 = ($signed(sext_ln1118_520_fu_1939_p1) - $signed(sext_ln1118_533_fu_2828_p1));

assign sub_ln1118_8_fu_3330_p2 = ($signed(sext_ln1118_547_fu_3321_p1) - $signed(shl_ln1118_4_fu_2821_p3));

assign sub_ln1118_fu_519_p2 = ($signed(21'd0) - $signed(sext_ln1118_515_fu_515_p1));

assign sub_ln731_1_fu_2142_p2 = ($signed(21'd0) - $signed(sext_ln731_3_fu_2138_p1));

assign sub_ln731_2_fu_1128_p2 = ($signed(sext_ln1118_514_fu_511_p1) - $signed(sext_ln731_5_fu_835_p1));

assign sub_ln731_3_fu_2876_p2 = ($signed(sext_ln731_14_fu_2857_p1) - $signed(sext_ln731_16_fu_2872_p1));

assign sub_ln731_4_fu_3348_p2 = ($signed(sext_ln731_16_fu_2872_p1) - $signed(sext_ln731_14_fu_2857_p1));

assign sub_ln731_5_fu_3793_p2 = ($signed(sext_ln731_14_fu_2857_p1) - $signed(sext_ln731_19_fu_3789_p1));

assign sub_ln731_6_fu_4621_p2 = ($signed(sext_ln731_24_fu_4602_p1) - $signed(sext_ln731_26_fu_4617_p1));

assign sub_ln731_fu_553_p2 = ($signed(22'd0) - $signed(sext_ln731_fu_549_p1));

assign tmp_4096_fu_461_p4 = {{pX[31:1]}};

assign tmp_4097_fu_533_p3 = sub_ln1118_fu_519_p2[32'd20];

assign tmp_4098_fu_569_p3 = or_ln785_fu_563_p2[32'd21];

assign tmp_4099_fu_595_p3 = and_ln786_fu_589_p2[32'd21];

assign tmp_4100_fu_673_p3 = add_ln1192_fu_667_p2[32'd24];

assign tmp_4101_fu_687_p3 = acc_0_V_fu_681_p2[32'd23];

assign tmp_4102_fu_764_p3 = mul_ln1118_fu_5662_p2[32'd20];

assign tmp_4103_fu_776_p3 = or_ln785_512_fu_771_p2[32'd22];

assign tmp_4105_fu_2012_p3 = add_ln1192_512_fu_2006_p2[32'd24];

assign tmp_4106_fu_2025_p3 = acc_0_V_64_fu_2020_p2[32'd23];

assign tmp_4107_fu_2123_p3 = sub_ln1118_1_fu_2113_p2[32'd19];

assign tmp_4108_fu_2158_p3 = or_ln785_513_fu_2152_p2[32'd20];

assign tmp_4109_fu_2184_p3 = and_ln786_1541_fu_2178_p2[32'd20];

assign tmp_4110_fu_2266_p3 = add_ln1192_513_fu_2260_p2[32'd24];

assign tmp_4111_fu_2280_p3 = acc_0_V_66_fu_2274_p2[32'd23];

assign tmp_4112_fu_819_p3 = add_ln1118_fu_809_p2[32'd21];

assign tmp_4113_fu_871_p3 = or_ln785_514_fu_865_p2[32'd22];

assign tmp_4114_fu_897_p3 = and_ln786_1544_fu_891_p2[32'd22];

assign tmp_4115_fu_975_p3 = add_ln1192_514_fu_969_p2[32'd24];

assign tmp_4116_fu_989_p3 = acc_1_V_fu_983_p2[32'd23];

assign tmp_4117_fu_1051_p3 = mul_ln1118_512_fu_5678_p2[32'd22];

assign tmp_4118_fu_1062_p3 = or_ln785_515_fu_1058_p2[32'd23];

assign tmp_4120_fu_2407_p3 = add_ln1192_515_fu_2401_p2[32'd24];

assign tmp_4121_fu_2420_p3 = acc_1_V_64_fu_2415_p2[32'd23];

assign tmp_4122_fu_2503_p3 = add_ln1118_1_fu_2493_p2[32'd22];

assign tmp_4123_fu_2553_p3 = or_ln785_516_fu_2547_p2[32'd23];

assign tmp_4124_fu_2579_p3 = and_ln786_1550_fu_2573_p2[32'd23];

assign tmp_4125_fu_2661_p3 = add_ln1192_516_fu_2655_p2[32'd24];

assign tmp_4126_fu_2675_p3 = acc_1_V_66_fu_2669_p2[32'd23];

assign tmp_4127_fu_1120_p3 = sub_ln1118_2_fu_1110_p2[32'd21];

assign tmp_4128_fu_1144_p3 = or_ln785_517_fu_1138_p2[32'd22];

assign tmp_4129_fu_1170_p3 = and_ln786_1553_fu_1164_p2[32'd22];

assign tmp_4130_fu_2746_p3 = add_ln1192_517_fu_2740_p2[32'd24];

assign tmp_4131_fu_2759_p3 = acc_2_V_fu_2754_p2[32'd23];

assign tmp_4132_fu_2842_p3 = sub_ln1118_3_fu_2832_p2[32'd20];

assign tmp_4133_fu_2892_p3 = or_ln785_518_fu_2886_p2[32'd21];

assign tmp_4134_fu_2918_p3 = and_ln786_1556_fu_2912_p2[32'd21];

assign tmp_4135_fu_3000_p3 = add_ln1192_518_fu_2994_p2[32'd24];

assign tmp_4136_fu_3014_p3 = acc_2_V_64_fu_3008_p2[32'd23];

assign tmp_4137_fu_3076_p3 = tmp_data_0_V_reg_5833[32'd15];

assign tmp_4138_fu_3089_p3 = or_ln785_519_fu_3083_p2[32'd16];

assign tmp_4139_fu_3115_p3 = and_ln786_1559_fu_3109_p2[32'd16];

assign tmp_4140_fu_5196_p3 = add_ln1192_519_fu_5190_p2[32'd24];

assign tmp_4141_fu_5208_p3 = acc_2_V_66_fu_5204_p2[32'd23];

assign tmp_4142_fu_1241_p3 = mul_ln1118_513_fu_5695_p2[32'd21];

assign tmp_4143_fu_1253_p3 = or_ln785_520_fu_1248_p2[32'd23];

assign tmp_4145_fu_3245_p3 = add_ln1192_520_fu_3239_p2[32'd24];

assign tmp_4146_fu_3259_p3 = acc_3_V_fu_3253_p2[32'd23];

assign tmp_4147_fu_3340_p3 = sub_ln1118_8_fu_3330_p2[32'd19];

assign tmp_4148_fu_3364_p3 = or_ln785_521_fu_3358_p2[32'd21];

assign tmp_4149_fu_3390_p3 = and_ln786_1565_fu_3384_p2[32'd21];

assign tmp_4150_fu_3472_p3 = add_ln1192_521_fu_3466_p2[32'd24];

assign tmp_4151_fu_3486_p3 = acc_3_V_64_fu_3480_p2[32'd23];

assign tmp_4152_fu_3551_p3 = mul_ln1118_514_fu_5792_p2[32'd21];

assign tmp_4153_fu_3563_p3 = or_ln785_522_fu_3558_p2[32'd23];

assign tmp_4154_fu_3588_p3 = and_ln786_1568_fu_3583_p2[32'd23];

assign tmp_4155_fu_5308_p3 = add_ln1192_522_fu_5302_p2[32'd24];

assign tmp_4156_fu_5321_p3 = acc_3_V_66_fu_5316_p2[32'd23];

assign tmp_4157_fu_1289_p3 = mul_ln1118_515_fu_5711_p2[32'd21];

assign tmp_4158_fu_1301_p3 = or_ln785_523_fu_1296_p2[32'd23];

assign tmp_4160_fu_3688_p3 = add_ln1192_523_fu_3682_p2[32'd24];

assign tmp_4161_fu_3702_p3 = acc_4_V_fu_3696_p2[32'd23];

assign tmp_4162_fu_3774_p3 = sub_ln1118_4_fu_3764_p2[32'd20];

assign tmp_4163_fu_3809_p3 = or_ln785_524_fu_3803_p2[32'd21];

assign tmp_4164_fu_3835_p3 = and_ln786_1574_fu_3829_p2[32'd21];

assign tmp_4165_fu_3917_p3 = add_ln1192_524_fu_3911_p2[32'd24];

assign tmp_4166_fu_3931_p3 = acc_4_V_64_fu_3925_p2[32'd23];

assign tmp_4167_fu_3993_p3 = mul_ln1118_516_fu_5808_p2[32'd22];

assign tmp_4168_fu_4004_p3 = or_ln785_525_fu_4000_p2[32'd23];

assign tmp_4169_fu_4028_p3 = and_ln786_1577_fu_4024_p2[32'd23];

assign tmp_4170_fu_5421_p3 = add_ln1192_525_fu_5415_p2[32'd24];

assign tmp_4171_fu_5434_p3 = acc_4_V_66_fu_5429_p2[32'd23];

assign tmp_4172_fu_1337_p3 = mul_ln1118_517_fu_5727_p2[32'd21];

assign tmp_4173_fu_1349_p3 = or_ln785_526_fu_1344_p2[32'd23];

assign tmp_4175_fu_4128_p3 = add_ln1192_526_fu_4122_p2[32'd24];

assign tmp_4176_fu_4142_p3 = acc_5_V_fu_4136_p2[32'd23];

assign tmp_4177_fu_1382_p3 = mul_ln1118_518_fu_5743_p2[32'd22];

assign tmp_4178_fu_1393_p3 = or_ln785_527_fu_1389_p2[32'd23];

assign tmp_4180_fu_4270_p3 = add_ln1192_527_fu_4264_p2[32'd24];

assign tmp_4181_fu_4284_p3 = acc_5_V_64_fu_4278_p2[32'd23];

assign tmp_4182_fu_4356_p3 = mul_ln1118_519_fu_4346_p2[32'd19];

assign tmp_4183_fu_4369_p3 = or_ln785_528_fu_4364_p2[32'd21];

assign tmp_4184_fu_4394_p3 = and_ln786_1586_fu_4389_p2[32'd21];

assign tmp_4185_fu_5539_p3 = add_ln1192_528_fu_5533_p2[32'd24];

assign tmp_4186_fu_5552_p3 = acc_5_V_66_fu_5547_p2[32'd23];

assign tmp_4187_fu_1435_p3 = add_ln1118_2_fu_1425_p2[32'd20];

assign tmp_4188_fu_1459_p3 = or_ln785_529_fu_1453_p2[32'd21];

assign tmp_4189_fu_1485_p3 = and_ln786_1589_fu_1479_p2[32'd21];

assign tmp_4190_fu_1563_p3 = add_ln1192_529_fu_1557_p2[32'd24];

assign tmp_4191_fu_1577_p3 = acc_6_V_fu_1571_p2[32'd23];

assign tmp_4192_fu_1642_p3 = mul_ln1118_520_fu_5760_p2[32'd20];

assign tmp_4193_fu_1654_p3 = or_ln785_530_fu_1649_p2[32'd22];

assign tmp_4195_fu_4502_p3 = add_ln1192_530_fu_4496_p2[32'd24];

assign tmp_4196_fu_4515_p3 = acc_6_V_64_fu_4510_p2[32'd23];

assign tmp_4197_fu_4587_p3 = sub_ln1118_5_fu_4577_p2[32'd20];

assign tmp_4198_fu_4637_p3 = or_ln785_531_fu_4631_p2[32'd21];

assign tmp_4199_fu_4663_p3 = and_ln786_1595_fu_4657_p2[32'd21];

assign tmp_4200_fu_4745_p3 = add_ln1192_531_fu_4739_p2[32'd24];

assign tmp_4201_fu_4759_p3 = acc_6_V_66_fu_4753_p2[32'd23];

assign tmp_4202_fu_1697_p3 = sub_ln1118_6_fu_1687_p2[32'd19];

assign tmp_4203_fu_1711_p3 = or_ln785_532_fu_1705_p2[32'd20];

assign tmp_4204_fu_1737_p3 = and_ln786_1598_fu_1731_p2[32'd20];

assign tmp_4205_fu_1815_p3 = add_ln1192_532_fu_1809_p2[32'd24];

assign tmp_4206_fu_1829_p3 = acc_7_V_fu_1823_p2[32'd23];

assign tmp_4207_fu_1894_p3 = mul_ln1118_521_fu_5776_p2[32'd20];

assign tmp_4208_fu_1906_p3 = or_ln785_533_fu_1901_p2[32'd22];

assign tmp_4210_fu_4891_p3 = add_ln1192_533_fu_4885_p2[32'd24];

assign tmp_4211_fu_4904_p3 = acc_7_V_64_fu_4899_p2[32'd23];

assign tmp_4212_fu_4976_p3 = add_ln1118_3_fu_4966_p2[32'd21];

assign tmp_4213_fu_5000_p3 = or_ln785_534_fu_4994_p2[32'd22];

assign tmp_4214_fu_5026_p3 = and_ln786_1604_fu_5020_p2[32'd22];

assign tmp_4215_fu_5108_p3 = add_ln1192_534_fu_5102_p2[32'd24];

assign tmp_4216_fu_5122_p3 = acc_7_V_66_fu_5116_p2[32'd23];

assign tmp_data_0_V_19_fu_2334_p3 = ((or_ln340_2055_fu_2312_p2[0:0] === 1'b1) ? select_ln340_1028_fu_2318_p3 : acc_0_V_67_fu_2326_p3);

assign tmp_data_1_V_fu_2729_p3 = ((or_ln340_2064_fu_2707_p2[0:0] === 1'b1) ? select_ln340_1034_fu_2713_p3 : acc_1_V_67_fu_2721_p3);

assign tmp_data_6_V_fu_4813_p3 = ((or_ln340_2109_fu_4791_p2[0:0] === 1'b1) ? select_ln340_1064_fu_4797_p3 : acc_6_V_67_fu_4805_p3);

assign tmp_data_7_V_fu_5176_p3 = ((or_ln340_2118_fu_5154_p2[0:0] === 1'b1) ? select_ln340_1070_fu_5160_p3 : acc_7_V_67_fu_5168_p3);

assign trunc_ln172_fu_419_p1 = i_iw_0_i_i_i_reg_372[0:0];

assign xor_ln340_1024_fu_707_p2 = (tmp_4101_fu_687_p3 ^ tmp_4100_fu_673_p3);

assign xor_ln340_1025_fu_2045_p2 = (tmp_4106_fu_2025_p3 ^ tmp_4105_fu_2012_p3);

assign xor_ln340_1026_fu_2300_p2 = (tmp_4111_fu_2280_p3 ^ tmp_4110_fu_2266_p3);

assign xor_ln340_1027_fu_1009_p2 = (tmp_4116_fu_989_p3 ^ tmp_4115_fu_975_p3);

assign xor_ln340_1028_fu_2440_p2 = (tmp_4121_fu_2420_p3 ^ tmp_4120_fu_2407_p3);

assign xor_ln340_1029_fu_2695_p2 = (tmp_4126_fu_2675_p3 ^ tmp_4125_fu_2661_p3);

assign xor_ln340_1030_fu_2779_p2 = (tmp_4131_fu_2759_p3 ^ tmp_4130_fu_2746_p3);

assign xor_ln340_1031_fu_3034_p2 = (tmp_4136_fu_3014_p3 ^ tmp_4135_fu_3000_p3);

assign xor_ln340_1032_fu_5228_p2 = (tmp_4141_fu_5208_p3 ^ tmp_4140_fu_5196_p3);

assign xor_ln340_1033_fu_3279_p2 = (tmp_4146_fu_3259_p3 ^ tmp_4145_fu_3245_p3);

assign xor_ln340_1034_fu_3506_p2 = (tmp_4151_fu_3486_p3 ^ tmp_4150_fu_3472_p3);

assign xor_ln340_1035_fu_5341_p2 = (tmp_4156_fu_5321_p3 ^ tmp_4155_fu_5308_p3);

assign xor_ln340_1036_fu_3722_p2 = (tmp_4161_fu_3702_p3 ^ tmp_4160_fu_3688_p3);

assign xor_ln340_1037_fu_3951_p2 = (tmp_4166_fu_3931_p3 ^ tmp_4165_fu_3917_p3);

assign xor_ln340_1038_fu_5454_p2 = (tmp_4171_fu_5434_p3 ^ tmp_4170_fu_5421_p3);

assign xor_ln340_1039_fu_4162_p2 = (tmp_4176_fu_4142_p3 ^ tmp_4175_fu_4128_p3);

assign xor_ln340_1040_fu_4304_p2 = (tmp_4181_fu_4284_p3 ^ tmp_4180_fu_4270_p3);

assign xor_ln340_1041_fu_5572_p2 = (tmp_4186_fu_5552_p3 ^ tmp_4185_fu_5539_p3);

assign xor_ln340_1042_fu_1597_p2 = (tmp_4191_fu_1577_p3 ^ tmp_4190_fu_1563_p3);

assign xor_ln340_1043_fu_4535_p2 = (tmp_4196_fu_4515_p3 ^ tmp_4195_fu_4502_p3);

assign xor_ln340_1044_fu_4779_p2 = (tmp_4201_fu_4759_p3 ^ tmp_4200_fu_4745_p3);

assign xor_ln340_1045_fu_1849_p2 = (tmp_4206_fu_1829_p3 ^ tmp_4205_fu_1815_p3);

assign xor_ln340_1046_fu_4924_p2 = (tmp_4211_fu_4904_p3 ^ tmp_4210_fu_4891_p3);

assign xor_ln340_1047_fu_5142_p2 = (tmp_4216_fu_5122_p3 ^ tmp_4215_fu_5108_p3);

assign xor_ln340_1048_fu_621_p2 = (tmp_4097_fu_533_p3 ^ 1'd1);

assign xor_ln340_1049_fu_2210_p2 = (tmp_4107_fu_2123_p3 ^ 1'd1);

assign xor_ln340_1050_fu_923_p2 = (tmp_4112_fu_819_p3 ^ 1'd1);

assign xor_ln340_1051_fu_2357_p2 = (tmp_4117_reg_5937 ^ 1'd1);

assign xor_ln340_1052_fu_2605_p2 = (tmp_4122_fu_2503_p3 ^ 1'd1);

assign xor_ln340_1053_fu_1196_p2 = (tmp_4127_fu_1120_p3 ^ 1'd1);

assign xor_ln340_1054_fu_2944_p2 = (tmp_4132_fu_2842_p3 ^ 1'd1);

assign xor_ln340_1055_fu_3141_p2 = (tmp_4137_fu_3076_p3 ^ 1'd1);

assign xor_ln340_1056_fu_3198_p2 = (tmp_4142_reg_5967 ^ 1'd1);

assign xor_ln340_1057_fu_3416_p2 = (tmp_4147_fu_3340_p3 ^ 1'd1);

assign xor_ln340_1058_fu_3608_p2 = (tmp_4152_fu_3551_p3 ^ 1'd1);

assign xor_ln340_1059_fu_3641_p2 = (tmp_4157_reg_5991 ^ 1'd1);

assign xor_ln340_1060_fu_3861_p2 = (tmp_4162_fu_3774_p3 ^ 1'd1);

assign xor_ln340_1061_fu_4048_p2 = (tmp_4167_fu_3993_p3 ^ 1'd1);

assign xor_ln340_1062_fu_4081_p2 = (tmp_4172_reg_6015 ^ 1'd1);

assign xor_ln340_1063_fu_4219_p2 = (tmp_4177_reg_6039 ^ 1'd1);

assign xor_ln340_1064_fu_4414_p2 = (tmp_4182_fu_4356_p3 ^ 1'd1);

assign xor_ln340_1065_fu_1511_p2 = (tmp_4187_fu_1435_p3 ^ 1'd1);

assign xor_ln340_1066_fu_4450_p2 = (tmp_4192_reg_6069 ^ 1'd1);

assign xor_ln340_1067_fu_4689_p2 = (tmp_4197_fu_4587_p3 ^ 1'd1);

assign xor_ln340_1068_fu_1763_p2 = (tmp_4202_fu_1697_p3 ^ 1'd1);

assign xor_ln340_1069_fu_4839_p2 = (tmp_4207_reg_6098 ^ 1'd1);

assign xor_ln340_1070_fu_5052_p2 = (tmp_4212_fu_4976_p3 ^ 1'd1);

assign xor_ln340_512_fu_713_p2 = (tmp_4100_fu_673_p3 ^ 1'd1);

assign xor_ln340_514_fu_2051_p2 = (tmp_4105_fu_2012_p3 ^ 1'd1);

assign xor_ln340_516_fu_2306_p2 = (tmp_4110_fu_2266_p3 ^ 1'd1);

assign xor_ln340_518_fu_1015_p2 = (tmp_4115_fu_975_p3 ^ 1'd1);

assign xor_ln340_520_fu_2446_p2 = (tmp_4120_fu_2407_p3 ^ 1'd1);

assign xor_ln340_522_fu_2701_p2 = (tmp_4125_fu_2661_p3 ^ 1'd1);

assign xor_ln340_524_fu_2785_p2 = (tmp_4130_fu_2746_p3 ^ 1'd1);

assign xor_ln340_526_fu_3040_p2 = (tmp_4135_fu_3000_p3 ^ 1'd1);

assign xor_ln340_528_fu_5234_p2 = (tmp_4140_fu_5196_p3 ^ 1'd1);

assign xor_ln340_530_fu_3285_p2 = (tmp_4145_fu_3245_p3 ^ 1'd1);

assign xor_ln340_532_fu_3512_p2 = (tmp_4150_fu_3472_p3 ^ 1'd1);

assign xor_ln340_534_fu_5347_p2 = (tmp_4155_fu_5308_p3 ^ 1'd1);

assign xor_ln340_536_fu_3728_p2 = (tmp_4160_fu_3688_p3 ^ 1'd1);

assign xor_ln340_538_fu_3957_p2 = (tmp_4165_fu_3917_p3 ^ 1'd1);

assign xor_ln340_540_fu_5460_p2 = (tmp_4170_fu_5421_p3 ^ 1'd1);

assign xor_ln340_542_fu_4168_p2 = (tmp_4175_fu_4128_p3 ^ 1'd1);

assign xor_ln340_544_fu_4310_p2 = (tmp_4180_fu_4270_p3 ^ 1'd1);

assign xor_ln340_546_fu_5578_p2 = (tmp_4185_fu_5539_p3 ^ 1'd1);

assign xor_ln340_548_fu_1603_p2 = (tmp_4190_fu_1563_p3 ^ 1'd1);

assign xor_ln340_550_fu_4541_p2 = (tmp_4195_fu_4502_p3 ^ 1'd1);

assign xor_ln340_552_fu_4785_p2 = (tmp_4200_fu_4745_p3 ^ 1'd1);

assign xor_ln340_554_fu_1855_p2 = (tmp_4205_fu_1815_p3 ^ 1'd1);

assign xor_ln340_556_fu_4930_p2 = (tmp_4210_fu_4891_p3 ^ 1'd1);

assign xor_ln340_558_fu_5148_p2 = (tmp_4215_fu_5108_p3 ^ 1'd1);

assign xor_ln340_fu_1960_p2 = (tmp_4102_reg_5908 ^ 1'd1);

assign xor_ln785_512_fu_784_p2 = (tmp_4102_fu_764_p3 ^ 1'd1);

assign xor_ln785_513_fu_2166_p2 = (tmp_4107_fu_2123_p3 ^ 1'd1);

assign xor_ln785_514_fu_879_p2 = (tmp_4112_fu_819_p3 ^ 1'd1);

assign xor_ln785_515_fu_1070_p2 = (tmp_4117_fu_1051_p3 ^ 1'd1);

assign xor_ln785_516_fu_2561_p2 = (tmp_4122_fu_2503_p3 ^ 1'd1);

assign xor_ln785_517_fu_1152_p2 = (tmp_4127_fu_1120_p3 ^ 1'd1);

assign xor_ln785_518_fu_2900_p2 = (tmp_4132_fu_2842_p3 ^ 1'd1);

assign xor_ln785_519_fu_3097_p2 = (tmp_4137_fu_3076_p3 ^ 1'd1);

assign xor_ln785_520_fu_1261_p2 = (tmp_4142_fu_1241_p3 ^ 1'd1);

assign xor_ln785_521_fu_3372_p2 = (tmp_4147_fu_3340_p3 ^ 1'd1);

assign xor_ln785_522_fu_3571_p2 = (tmp_4152_fu_3551_p3 ^ 1'd1);

assign xor_ln785_523_fu_1309_p2 = (tmp_4157_fu_1289_p3 ^ 1'd1);

assign xor_ln785_524_fu_3817_p2 = (tmp_4162_fu_3774_p3 ^ 1'd1);

assign xor_ln785_525_fu_4012_p2 = (tmp_4167_fu_3993_p3 ^ 1'd1);

assign xor_ln785_526_fu_1357_p2 = (tmp_4172_fu_1337_p3 ^ 1'd1);

assign xor_ln785_527_fu_1401_p2 = (tmp_4177_fu_1382_p3 ^ 1'd1);

assign xor_ln785_528_fu_4377_p2 = (tmp_4182_fu_4356_p3 ^ 1'd1);

assign xor_ln785_529_fu_1467_p2 = (tmp_4187_fu_1435_p3 ^ 1'd1);

assign xor_ln785_530_fu_1662_p2 = (tmp_4192_fu_1642_p3 ^ 1'd1);

assign xor_ln785_531_fu_4645_p2 = (tmp_4197_fu_4587_p3 ^ 1'd1);

assign xor_ln785_532_fu_1719_p2 = (tmp_4202_fu_1697_p3 ^ 1'd1);

assign xor_ln785_533_fu_1914_p2 = (tmp_4207_fu_1894_p3 ^ 1'd1);

assign xor_ln785_534_fu_5008_p2 = (tmp_4212_fu_4976_p3 ^ 1'd1);

assign xor_ln785_fu_577_p2 = (tmp_4097_fu_533_p3 ^ 1'd1);

assign xor_ln786_1024_fu_2033_p2 = (tmp_4106_fu_2025_p3 ^ 1'd1);

assign xor_ln786_1025_fu_2288_p2 = (tmp_4111_fu_2280_p3 ^ 1'd1);

assign xor_ln786_1026_fu_997_p2 = (tmp_4116_fu_989_p3 ^ 1'd1);

assign xor_ln786_1027_fu_2428_p2 = (tmp_4121_fu_2420_p3 ^ 1'd1);

assign xor_ln786_1028_fu_2683_p2 = (tmp_4126_fu_2675_p3 ^ 1'd1);

assign xor_ln786_1029_fu_2767_p2 = (tmp_4131_fu_2759_p3 ^ 1'd1);

assign xor_ln786_1030_fu_3022_p2 = (tmp_4136_fu_3014_p3 ^ 1'd1);

assign xor_ln786_1031_fu_5216_p2 = (tmp_4141_fu_5208_p3 ^ 1'd1);

assign xor_ln786_1032_fu_3267_p2 = (tmp_4146_fu_3259_p3 ^ 1'd1);

assign xor_ln786_1033_fu_3494_p2 = (tmp_4151_fu_3486_p3 ^ 1'd1);

assign xor_ln786_1034_fu_5329_p2 = (tmp_4156_fu_5321_p3 ^ 1'd1);

assign xor_ln786_1035_fu_3710_p2 = (tmp_4161_fu_3702_p3 ^ 1'd1);

assign xor_ln786_1036_fu_3939_p2 = (tmp_4166_fu_3931_p3 ^ 1'd1);

assign xor_ln786_1037_fu_5442_p2 = (tmp_4171_fu_5434_p3 ^ 1'd1);

assign xor_ln786_1038_fu_4150_p2 = (tmp_4176_fu_4142_p3 ^ 1'd1);

assign xor_ln786_1039_fu_4292_p2 = (tmp_4181_fu_4284_p3 ^ 1'd1);

assign xor_ln786_1040_fu_5560_p2 = (tmp_4186_fu_5552_p3 ^ 1'd1);

assign xor_ln786_1041_fu_1585_p2 = (tmp_4191_fu_1577_p3 ^ 1'd1);

assign xor_ln786_1042_fu_4523_p2 = (tmp_4196_fu_4515_p3 ^ 1'd1);

assign xor_ln786_1043_fu_4767_p2 = (tmp_4201_fu_4759_p3 ^ 1'd1);

assign xor_ln786_1044_fu_1837_p2 = (tmp_4206_fu_1829_p3 ^ 1'd1);

assign xor_ln786_1045_fu_4912_p2 = (tmp_4211_fu_4904_p3 ^ 1'd1);

assign xor_ln786_1046_fu_5130_p2 = (tmp_4216_fu_5122_p3 ^ 1'd1);

assign xor_ln786_1047_fu_603_p2 = (tmp_4099_fu_595_p3 ^ 1'd1);

assign xor_ln786_1048_fu_1945_p2 = (tmp_4104_reg_5925 ^ 1'd1);

assign xor_ln786_1049_fu_2192_p2 = (tmp_4109_fu_2184_p3 ^ 1'd1);

assign xor_ln786_1050_fu_905_p2 = (tmp_4114_fu_897_p3 ^ 1'd1);

assign xor_ln786_1051_fu_2342_p2 = (tmp_4119_reg_5955 ^ 1'd1);

assign xor_ln786_1052_fu_2587_p2 = (tmp_4124_fu_2579_p3 ^ 1'd1);

assign xor_ln786_1053_fu_1178_p2 = (tmp_4129_fu_1170_p3 ^ 1'd1);

assign xor_ln786_1054_fu_2926_p2 = (tmp_4134_fu_2918_p3 ^ 1'd1);

assign xor_ln786_1055_fu_3123_p2 = (tmp_4139_fu_3115_p3 ^ 1'd1);

assign xor_ln786_1056_fu_3183_p2 = (tmp_4144_reg_5985 ^ 1'd1);

assign xor_ln786_1057_fu_3398_p2 = (tmp_4149_fu_3390_p3 ^ 1'd1);

assign xor_ln786_1058_fu_3596_p2 = (tmp_4154_fu_3588_p3 ^ 1'd1);

assign xor_ln786_1059_fu_3626_p2 = (tmp_4159_reg_6009 ^ 1'd1);

assign xor_ln786_1060_fu_3843_p2 = (tmp_4164_fu_3835_p3 ^ 1'd1);

assign xor_ln786_1061_fu_4036_p2 = (tmp_4169_fu_4028_p3 ^ 1'd1);

assign xor_ln786_1062_fu_4066_p2 = (tmp_4174_reg_6033 ^ 1'd1);

assign xor_ln786_1063_fu_4204_p2 = (tmp_4179_reg_6057 ^ 1'd1);

assign xor_ln786_1064_fu_4402_p2 = (tmp_4184_fu_4394_p3 ^ 1'd1);

assign xor_ln786_1065_fu_1493_p2 = (tmp_4189_fu_1485_p3 ^ 1'd1);

assign xor_ln786_1066_fu_4435_p2 = (tmp_4194_reg_6086 ^ 1'd1);

assign xor_ln786_1067_fu_4671_p2 = (tmp_4199_fu_4663_p3 ^ 1'd1);

assign xor_ln786_1068_fu_1745_p2 = (tmp_4204_fu_1737_p3 ^ 1'd1);

assign xor_ln786_1069_fu_4824_p2 = (tmp_4209_reg_6115 ^ 1'd1);

assign xor_ln786_1070_fu_5034_p2 = (tmp_4214_fu_5026_p3 ^ 1'd1);

assign xor_ln786_fu_695_p2 = (tmp_4101_fu_687_p3 ^ 1'd1);

endmodule //conv_1d_cl_array_ap_int_16_1u_array_ap_fixed_24_16_0_0_0_8u_config2_s
