// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_1d_cl_array_ap_fixed_4u_array_ap_fixed_24_16_0_0_0_4u_config11_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state9 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [23:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [23:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [23:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [23:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
output  [23:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [23:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [23:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [23:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [23:0] kernel_data_V_16;
reg   [23:0] kernel_data_V_17;
reg   [23:0] kernel_data_V_18;
reg   [23:0] kernel_data_V_19;
reg   [31:0] sX_3;
reg   [31:0] pX_3;
reg   [23:0] kernel_data_V_0;
reg   [23:0] kernel_data_V_1156;
wire   [0:0] w11_V_address0;
reg    w11_V_ce0;
wire   [317:0] w11_V_q0;
reg   [23:0] kernel_data_V_2157;
reg   [23:0] kernel_data_V_3158;
reg   [23:0] kernel_data_V_4;
reg   [23:0] kernel_data_V_5;
reg   [23:0] kernel_data_V_6;
reg   [23:0] kernel_data_V_7;
reg   [23:0] kernel_data_V_8;
reg   [23:0] kernel_data_V_9;
reg   [23:0] kernel_data_V_10;
reg   [23:0] kernel_data_V_11;
reg   [23:0] kernel_data_V_12;
reg   [23:0] kernel_data_V_13;
reg   [23:0] kernel_data_V_14;
reg   [23:0] kernel_data_V_15;
reg    data_V_data_0_V_blk_n;
wire    ap_CS_fsm_state2;
reg    data_V_data_1_V_blk_n;
reg    data_V_data_2_V_blk_n;
reg    data_V_data_3_V_blk_n;
reg    res_V_data_0_V_blk_n;
wire    ap_CS_fsm_state9;
reg   [0:0] and_ln360_reg_11982;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg   [0:0] in_index13_reg_542;
reg   [0:0] in_index13_reg_542_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state6_pp1_stage0_iter1;
wire    ap_block_state7_pp1_stage0_iter2;
wire    ap_block_state8_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] in_index13_reg_542_pp1_iter2_reg;
reg  signed [23:0] tmp_data_0_V_1711_reg_554;
reg  signed [23:0] tmp_data_1_V_149_reg_565;
reg  signed [23:0] tmp_data_2_V_147_reg_576;
reg  signed [23:0] tmp_data_3_V_145_reg_587;
reg   [23:0] tmp_data_0_V_reg_11910;
wire    io_acc_block_signal_op23;
reg   [23:0] tmp_data_1_V_reg_11915;
reg   [23:0] tmp_data_2_V_reg_11920;
reg   [23:0] tmp_data_3_V_reg_11925;
reg   [23:0] kernel_data_V_16_load_reg_11930;
reg   [23:0] kernel_data_V_17_load_reg_11935;
reg   [23:0] kernel_data_V_18_load_reg_11940;
reg   [23:0] kernel_data_V_19_load_reg_11945;
wire   [5:0] i_iw_fu_700_p2;
reg   [5:0] i_iw_reg_11950;
wire   [2:0] i_iw_4_fu_712_p2;
wire    ap_CS_fsm_state3;
reg   [31:0] sX_3_load_reg_11966;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln360_fu_842_p2;
reg   [0:0] icmp_ln360_reg_11971;
reg   [31:0] pX_3_load_reg_11976;
wire   [0:0] and_ln360_fu_868_p2;
wire   [0:0] in_index_fu_879_p2;
reg   [0:0] in_index_reg_11991;
reg    ap_enable_reg_pp1_iter0;
wire  signed [31:0] mul_ln1118_fu_11550_p2;
reg  signed [31:0] mul_ln1118_reg_11996;
reg   [0:0] tmp_5900_reg_12001;
reg   [23:0] trunc_ln_reg_12009;
reg   [0:0] tmp_5902_reg_12014;
wire  signed [31:0] mul_ln1118_760_fu_11559_p2;
reg  signed [31:0] mul_ln1118_760_reg_12019;
reg   [0:0] tmp_5907_reg_12024;
reg   [23:0] trunc_ln708_s_reg_12032;
reg   [0:0] tmp_5909_reg_12037;
wire  signed [31:0] mul_ln1118_761_fu_11568_p2;
reg  signed [31:0] mul_ln1118_761_reg_12042;
reg   [0:0] tmp_5914_reg_12047;
reg   [23:0] trunc_ln708_761_reg_12055;
reg   [0:0] tmp_5916_reg_12060;
wire  signed [31:0] mul_ln1118_762_fu_11577_p2;
reg  signed [31:0] mul_ln1118_762_reg_12065;
reg   [0:0] tmp_5921_reg_12070;
reg   [23:0] trunc_ln708_762_reg_12078;
reg   [0:0] tmp_5923_reg_12083;
wire  signed [31:0] mul_ln1118_763_fu_11586_p2;
reg  signed [31:0] mul_ln1118_763_reg_12088;
reg   [0:0] tmp_5928_reg_12093;
reg   [23:0] trunc_ln708_763_reg_12101;
reg   [0:0] tmp_5930_reg_12106;
wire  signed [31:0] mul_ln1118_764_fu_11595_p2;
reg  signed [31:0] mul_ln1118_764_reg_12111;
reg   [0:0] tmp_5935_reg_12116;
reg   [23:0] trunc_ln708_764_reg_12124;
reg   [0:0] tmp_5937_reg_12129;
wire  signed [31:0] mul_ln1118_765_fu_11604_p2;
reg  signed [31:0] mul_ln1118_765_reg_12134;
reg   [0:0] tmp_5942_reg_12139;
reg   [23:0] trunc_ln708_765_reg_12147;
reg   [0:0] tmp_5944_reg_12152;
wire  signed [31:0] mul_ln1118_766_fu_11613_p2;
reg  signed [31:0] mul_ln1118_766_reg_12157;
reg   [0:0] tmp_5949_reg_12162;
reg   [23:0] trunc_ln708_766_reg_12170;
reg   [0:0] tmp_5951_reg_12175;
wire  signed [31:0] mul_ln1118_767_fu_11622_p2;
reg  signed [31:0] mul_ln1118_767_reg_12180;
reg   [0:0] tmp_5956_reg_12185;
reg   [23:0] trunc_ln708_767_reg_12193;
reg   [0:0] tmp_5958_reg_12198;
wire  signed [31:0] mul_ln1118_768_fu_11631_p2;
reg  signed [31:0] mul_ln1118_768_reg_12203;
reg   [0:0] tmp_5963_reg_12208;
reg   [23:0] trunc_ln708_768_reg_12216;
reg   [0:0] tmp_5965_reg_12221;
wire  signed [31:0] mul_ln1118_769_fu_11640_p2;
reg  signed [31:0] mul_ln1118_769_reg_12226;
reg   [0:0] tmp_5970_reg_12231;
reg   [23:0] trunc_ln708_769_reg_12239;
reg   [0:0] tmp_5972_reg_12244;
wire  signed [31:0] mul_ln1118_770_fu_11649_p2;
reg  signed [31:0] mul_ln1118_770_reg_12249;
reg   [0:0] tmp_5977_reg_12254;
reg   [23:0] trunc_ln708_770_reg_12262;
reg   [0:0] tmp_5979_reg_12267;
wire  signed [31:0] mul_ln1118_771_fu_11658_p2;
reg  signed [31:0] mul_ln1118_771_reg_12272;
reg   [0:0] tmp_5984_reg_12277;
reg   [23:0] trunc_ln708_771_reg_12285;
reg   [0:0] tmp_5986_reg_12290;
wire  signed [31:0] mul_ln1118_772_fu_11667_p2;
reg  signed [31:0] mul_ln1118_772_reg_12295;
reg   [0:0] tmp_5991_reg_12300;
reg   [23:0] trunc_ln708_772_reg_12308;
reg   [0:0] tmp_5993_reg_12313;
wire  signed [31:0] mul_ln1118_773_fu_11676_p2;
reg  signed [31:0] mul_ln1118_773_reg_12318;
reg   [0:0] tmp_5998_reg_12323;
reg   [23:0] trunc_ln708_773_reg_12331;
reg   [0:0] tmp_6000_reg_12336;
wire  signed [31:0] mul_ln1118_774_fu_11685_p2;
reg  signed [31:0] mul_ln1118_774_reg_12341;
reg   [0:0] tmp_6005_reg_12346;
reg   [23:0] trunc_ln708_774_reg_12354;
reg   [0:0] tmp_6007_reg_12359;
wire  signed [31:0] mul_ln1118_775_fu_11694_p2;
reg  signed [31:0] mul_ln1118_775_reg_12364;
reg   [0:0] tmp_6012_reg_12369;
reg   [23:0] trunc_ln708_775_reg_12377;
reg   [0:0] tmp_6014_reg_12382;
wire  signed [31:0] mul_ln1118_776_fu_11703_p2;
reg  signed [31:0] mul_ln1118_776_reg_12387;
reg   [0:0] tmp_6019_reg_12392;
reg   [23:0] trunc_ln708_776_reg_12400;
reg   [0:0] tmp_6021_reg_12405;
wire  signed [31:0] mul_ln1118_777_fu_11712_p2;
reg  signed [31:0] mul_ln1118_777_reg_12410;
reg   [0:0] tmp_6026_reg_12415;
reg   [23:0] trunc_ln708_777_reg_12423;
reg   [0:0] tmp_6028_reg_12428;
wire  signed [31:0] mul_ln1118_778_fu_11721_p2;
reg  signed [31:0] mul_ln1118_778_reg_12433;
reg   [0:0] tmp_6033_reg_12438;
reg   [23:0] trunc_ln708_778_reg_12446;
reg   [0:0] tmp_6035_reg_12451;
wire  signed [31:0] mul_ln1118_779_fu_11730_p2;
reg  signed [31:0] mul_ln1118_779_reg_12456;
reg   [0:0] tmp_6040_reg_12461;
reg   [23:0] trunc_ln708_779_reg_12469;
reg   [0:0] tmp_6042_reg_12474;
wire  signed [31:0] mul_ln1118_780_fu_11739_p2;
reg  signed [31:0] mul_ln1118_780_reg_12479;
reg   [0:0] tmp_6047_reg_12484;
reg   [23:0] trunc_ln708_780_reg_12492;
reg   [0:0] tmp_6049_reg_12497;
wire  signed [31:0] mul_ln1118_781_fu_11748_p2;
reg  signed [31:0] mul_ln1118_781_reg_12502;
reg   [0:0] tmp_6054_reg_12507;
reg   [23:0] trunc_ln708_781_reg_12515;
reg   [0:0] tmp_6056_reg_12520;
wire  signed [31:0] mul_ln1118_782_fu_11757_p2;
reg  signed [31:0] mul_ln1118_782_reg_12525;
reg   [0:0] tmp_6061_reg_12530;
reg   [23:0] trunc_ln708_782_reg_12538;
reg   [0:0] tmp_6063_reg_12543;
wire  signed [31:0] mul_ln1118_783_fu_11766_p2;
reg  signed [31:0] mul_ln1118_783_reg_12548;
reg   [0:0] tmp_6068_reg_12553;
reg   [23:0] trunc_ln708_783_reg_12561;
reg   [0:0] tmp_6070_reg_12566;
wire  signed [31:0] mul_ln1118_784_fu_11775_p2;
reg  signed [31:0] mul_ln1118_784_reg_12571;
reg   [0:0] tmp_6075_reg_12576;
reg   [23:0] trunc_ln708_784_reg_12584;
reg   [0:0] tmp_6077_reg_12589;
wire  signed [31:0] mul_ln1118_785_fu_11784_p2;
reg  signed [31:0] mul_ln1118_785_reg_12594;
reg   [0:0] tmp_6082_reg_12599;
reg   [23:0] trunc_ln708_785_reg_12607;
reg   [0:0] tmp_6084_reg_12612;
wire  signed [31:0] mul_ln1118_786_fu_11793_p2;
reg  signed [31:0] mul_ln1118_786_reg_12617;
reg   [0:0] tmp_6089_reg_12622;
reg   [23:0] trunc_ln708_786_reg_12630;
reg   [0:0] tmp_6091_reg_12635;
wire  signed [31:0] mul_ln1118_787_fu_11802_p2;
reg  signed [31:0] mul_ln1118_787_reg_12640;
reg   [0:0] tmp_6096_reg_12645;
reg   [23:0] trunc_ln708_787_reg_12653;
reg   [0:0] tmp_6098_reg_12658;
wire  signed [31:0] mul_ln1118_788_fu_11811_p2;
reg  signed [31:0] mul_ln1118_788_reg_12663;
reg   [0:0] tmp_6103_reg_12668;
reg   [23:0] trunc_ln708_788_reg_12676;
reg   [0:0] tmp_6105_reg_12681;
wire  signed [31:0] mul_ln1118_789_fu_11820_p2;
reg  signed [31:0] mul_ln1118_789_reg_12686;
reg   [0:0] tmp_6110_reg_12691;
reg   [23:0] trunc_ln708_789_reg_12699;
reg   [0:0] tmp_6112_reg_12704;
wire  signed [31:0] mul_ln1118_790_fu_11829_p2;
reg  signed [31:0] mul_ln1118_790_reg_12709;
reg   [0:0] tmp_6117_reg_12714;
reg   [23:0] trunc_ln708_790_reg_12722;
reg   [0:0] tmp_6119_reg_12727;
wire  signed [31:0] mul_ln1118_791_fu_11838_p2;
reg  signed [31:0] mul_ln1118_791_reg_12732;
reg   [0:0] tmp_6124_reg_12737;
reg   [23:0] trunc_ln708_791_reg_12745;
reg   [0:0] tmp_6126_reg_12750;
wire  signed [31:0] mul_ln1118_792_fu_11847_p2;
reg  signed [31:0] mul_ln1118_792_reg_12755;
reg   [0:0] tmp_6131_reg_12760;
reg   [23:0] trunc_ln708_792_reg_12768;
reg   [0:0] tmp_6133_reg_12773;
wire  signed [31:0] mul_ln1118_793_fu_11856_p2;
reg  signed [31:0] mul_ln1118_793_reg_12778;
reg   [0:0] tmp_6138_reg_12783;
reg   [23:0] trunc_ln708_793_reg_12791;
reg   [0:0] tmp_6140_reg_12796;
wire  signed [31:0] mul_ln1118_794_fu_11865_p2;
reg  signed [31:0] mul_ln1118_794_reg_12801;
reg   [0:0] tmp_6145_reg_12806;
reg   [23:0] trunc_ln708_794_reg_12814;
reg   [0:0] tmp_6147_reg_12819;
wire  signed [31:0] mul_ln1118_795_fu_11874_p2;
reg  signed [31:0] mul_ln1118_795_reg_12824;
reg   [0:0] tmp_6152_reg_12829;
reg   [23:0] trunc_ln708_795_reg_12837;
reg   [0:0] tmp_6154_reg_12842;
wire  signed [31:0] mul_ln1118_796_fu_11883_p2;
reg  signed [31:0] mul_ln1118_796_reg_12847;
reg   [0:0] tmp_6159_reg_12852;
reg   [23:0] trunc_ln708_796_reg_12860;
reg   [0:0] tmp_6161_reg_12865;
wire  signed [31:0] mul_ln1118_797_fu_11892_p2;
reg  signed [31:0] mul_ln1118_797_reg_12870;
reg   [0:0] tmp_6166_reg_12875;
reg   [23:0] trunc_ln708_797_reg_12883;
reg   [0:0] tmp_6168_reg_12888;
wire  signed [29:0] mul_ln1118_798_fu_11901_p2;
reg  signed [29:0] mul_ln1118_798_reg_12893;
reg   [0:0] tmp_6173_reg_12898;
reg   [22:0] trunc_ln708_798_reg_12906;
reg   [0:0] tmp_6175_reg_12911;
wire  signed [23:0] select_ln340_2576_fu_2628_p3;
reg  signed [23:0] select_ln340_2576_reg_12916;
wire  signed [23:0] select_ln340_2578_fu_2765_p3;
reg  signed [23:0] select_ln340_2578_reg_12922;
wire  signed [23:0] select_ln340_2580_fu_2902_p3;
reg  signed [23:0] select_ln340_2580_reg_12928;
wire  signed [23:0] select_ln340_2582_fu_3039_p3;
reg  signed [23:0] select_ln340_2582_reg_12934;
wire  signed [23:0] select_ln340_2584_fu_3176_p3;
reg  signed [23:0] select_ln340_2584_reg_12940;
wire  signed [23:0] select_ln340_2586_fu_3313_p3;
reg  signed [23:0] select_ln340_2586_reg_12946;
wire  signed [23:0] select_ln340_2588_fu_3450_p3;
reg  signed [23:0] select_ln340_2588_reg_12952;
wire  signed [23:0] select_ln340_2590_fu_3587_p3;
reg  signed [23:0] select_ln340_2590_reg_12958;
wire  signed [23:0] select_ln340_2592_fu_3724_p3;
reg  signed [23:0] select_ln340_2592_reg_12964;
wire  signed [23:0] select_ln340_2594_fu_3861_p3;
reg  signed [23:0] select_ln340_2594_reg_12970;
wire  signed [23:0] select_ln340_2596_fu_3998_p3;
reg  signed [23:0] select_ln340_2596_reg_12976;
wire  signed [23:0] select_ln340_2598_fu_4135_p3;
reg  signed [23:0] select_ln340_2598_reg_12982;
wire  signed [23:0] select_ln340_2600_fu_4272_p3;
reg  signed [23:0] select_ln340_2600_reg_12988;
wire  signed [23:0] select_ln340_2602_fu_4409_p3;
reg  signed [23:0] select_ln340_2602_reg_12994;
wire  signed [23:0] select_ln340_2604_fu_4546_p3;
reg  signed [23:0] select_ln340_2604_reg_13000;
wire  signed [23:0] select_ln340_2606_fu_4683_p3;
reg  signed [23:0] select_ln340_2606_reg_13006;
wire  signed [23:0] select_ln340_2608_fu_4820_p3;
reg  signed [23:0] select_ln340_2608_reg_13012;
wire  signed [23:0] select_ln340_2610_fu_4957_p3;
reg  signed [23:0] select_ln340_2610_reg_13018;
wire  signed [23:0] select_ln340_2612_fu_5094_p3;
reg  signed [23:0] select_ln340_2612_reg_13024;
wire  signed [23:0] select_ln340_2614_fu_5231_p3;
reg  signed [23:0] select_ln340_2614_reg_13030;
wire  signed [23:0] select_ln340_2616_fu_5368_p3;
reg  signed [23:0] select_ln340_2616_reg_13036;
wire  signed [23:0] select_ln340_2618_fu_5505_p3;
reg  signed [23:0] select_ln340_2618_reg_13042;
wire  signed [23:0] select_ln340_2620_fu_5642_p3;
reg  signed [23:0] select_ln340_2620_reg_13048;
wire  signed [23:0] select_ln340_2622_fu_5779_p3;
reg  signed [23:0] select_ln340_2622_reg_13054;
wire  signed [23:0] select_ln340_2624_fu_5916_p3;
reg  signed [23:0] select_ln340_2624_reg_13060;
wire  signed [23:0] select_ln340_2626_fu_6053_p3;
reg  signed [23:0] select_ln340_2626_reg_13066;
wire  signed [23:0] select_ln340_2628_fu_6190_p3;
reg  signed [23:0] select_ln340_2628_reg_13072;
wire  signed [23:0] select_ln340_2630_fu_6327_p3;
reg  signed [23:0] select_ln340_2630_reg_13078;
wire  signed [23:0] select_ln340_2632_fu_6464_p3;
reg  signed [23:0] select_ln340_2632_reg_13084;
wire  signed [23:0] select_ln340_2634_fu_6601_p3;
reg  signed [23:0] select_ln340_2634_reg_13090;
wire  signed [23:0] select_ln340_2636_fu_6738_p3;
reg  signed [23:0] select_ln340_2636_reg_13096;
wire  signed [23:0] select_ln340_2638_fu_6875_p3;
reg  signed [23:0] select_ln340_2638_reg_13102;
wire  signed [23:0] select_ln340_2640_fu_7012_p3;
reg  signed [23:0] select_ln340_2640_reg_13108;
wire  signed [23:0] select_ln340_2642_fu_7149_p3;
reg  signed [23:0] select_ln340_2642_reg_13114;
wire  signed [23:0] select_ln340_2644_fu_7286_p3;
reg  signed [23:0] select_ln340_2644_reg_13120;
wire  signed [23:0] select_ln340_2646_fu_7423_p3;
reg  signed [23:0] select_ln340_2646_reg_13126;
wire  signed [23:0] select_ln340_2648_fu_7560_p3;
reg  signed [23:0] select_ln340_2648_reg_13132;
wire  signed [23:0] select_ln340_2650_fu_7697_p3;
reg  signed [23:0] select_ln340_2650_reg_13138;
wire  signed [23:0] select_ln340_2652_fu_7834_p3;
reg  signed [23:0] select_ln340_2652_reg_13144;
wire  signed [23:0] select_ln340_2654_fu_7975_p3;
reg  signed [23:0] select_ln340_2654_reg_13150;
wire   [23:0] tmp_data_0_V_20_fu_8855_p3;
reg   [23:0] tmp_data_0_V_20_reg_13156;
reg    ap_enable_reg_pp1_iter3;
wire   [23:0] tmp_data_1_V_19_fu_9735_p3;
reg   [23:0] tmp_data_1_V_19_reg_13162;
wire   [23:0] tmp_data_2_V_19_fu_10615_p3;
reg   [23:0] tmp_data_2_V_19_reg_13168;
wire   [23:0] tmp_data_3_V_19_fu_11495_p3;
reg   [23:0] tmp_data_3_V_19_reg_13174;
wire    ap_block_pp1_stage0_subdone;
reg   [0:0] ap_phi_mux_in_index13_phi_fu_546_p4;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg   [5:0] i_iw_0_i14_reg_467;
reg    ap_block_state1;
wire    io_acc_block_signal_op1864;
reg    ap_block_state9;
wire   [0:0] icmp_ln64_fu_11544_p2;
wire   [2:0] ap_phi_mux_i_iw_0_i_i_i_phi_fu_483_p4;
reg   [2:0] i_iw_0_i_i_i_reg_479;
wire   [0:0] icmp_ln166_fu_706_p2;
reg   [23:0] ap_phi_mux_phi_ln203_phi_fu_493_p8;
wire   [1:0] trunc_ln203_fu_718_p1;
reg   [23:0] ap_phi_mux_phi_ln203_15_phi_fu_506_p8;
reg   [23:0] ap_phi_mux_phi_ln203_16_phi_fu_519_p8;
reg   [23:0] ap_phi_mux_phi_ln203_17_phi_fu_532_p8;
wire    ap_block_pp1_stage0;
wire   [31:0] select_ln391_fu_11524_p3;
reg   [31:0] ap_phi_mux_storemerge_i_i_phi_fu_601_p4;
wire   [0:0] icmp_ln384_fu_11503_p2;
wire   [63:0] zext_ln56_fu_874_p1;
wire   [31:0] add_ln389_fu_11508_p2;
wire   [29:0] tmp_5899_fu_852_p4;
wire   [0:0] icmp_ln360_4_fu_862_p2;
wire   [23:0] select_ln56_fu_893_p3;
wire  signed [7:0] trunc_ln56_fu_901_p1;
wire   [23:0] select_ln56_39_fu_944_p3;
wire  signed [7:0] tmp_755_fu_952_p4;
wire   [23:0] select_ln56_40_fu_993_p3;
wire  signed [7:0] tmp_756_fu_1001_p4;
wire   [23:0] select_ln56_41_fu_1042_p3;
wire  signed [7:0] tmp_757_fu_1050_p4;
wire   [23:0] select_ln56_42_fu_1091_p3;
wire  signed [7:0] tmp_758_fu_1099_p4;
wire   [23:0] select_ln56_43_fu_1140_p3;
wire  signed [7:0] tmp_759_fu_1148_p4;
wire   [23:0] select_ln56_44_fu_1189_p3;
wire  signed [7:0] tmp_760_fu_1197_p4;
wire   [23:0] select_ln56_45_fu_1238_p3;
wire  signed [7:0] tmp_761_fu_1246_p4;
wire   [23:0] select_ln56_46_fu_1287_p3;
wire  signed [7:0] tmp_762_fu_1295_p4;
wire  signed [23:0] select_ln56_47_fu_1336_p3;
wire  signed [7:0] tmp_763_fu_1344_p4;
wire  signed [7:0] tmp_764_fu_1389_p4;
wire  signed [7:0] tmp_765_fu_1426_p4;
wire  signed [7:0] tmp_766_fu_1463_p4;
wire  signed [7:0] tmp_767_fu_1500_p4;
wire  signed [7:0] tmp_768_fu_1537_p4;
wire  signed [7:0] tmp_769_fu_1574_p4;
wire  signed [7:0] tmp_770_fu_1611_p4;
wire  signed [7:0] tmp_771_fu_1648_p4;
wire  signed [7:0] tmp_772_fu_1685_p4;
wire  signed [7:0] tmp_773_fu_1722_p4;
wire  signed [7:0] tmp_774_fu_1759_p4;
wire  signed [7:0] tmp_775_fu_1796_p4;
wire  signed [7:0] tmp_776_fu_1833_p4;
wire  signed [7:0] tmp_777_fu_1870_p4;
wire  signed [7:0] tmp_778_fu_1907_p4;
wire  signed [7:0] tmp_779_fu_1944_p4;
wire  signed [7:0] tmp_780_fu_1981_p4;
wire  signed [7:0] tmp_781_fu_2018_p4;
wire  signed [7:0] tmp_782_fu_2055_p4;
wire  signed [7:0] tmp_783_fu_2092_p4;
wire  signed [7:0] tmp_784_fu_2129_p4;
wire  signed [7:0] tmp_785_fu_2166_p4;
wire  signed [7:0] tmp_786_fu_2203_p4;
wire  signed [7:0] tmp_787_fu_2240_p4;
wire  signed [7:0] tmp_788_fu_2277_p4;
wire  signed [7:0] tmp_789_fu_2314_p4;
wire  signed [7:0] tmp_790_fu_2351_p4;
wire  signed [7:0] tmp_791_fu_2388_p4;
wire  signed [7:0] tmp_792_fu_2425_p4;
wire  signed [5:0] tmp_793_fu_2462_p4;
wire   [23:0] zext_ln415_fu_2506_p1;
wire   [23:0] add_ln415_fu_2509_p2;
wire   [0:0] tmp_5903_fu_2514_p3;
wire   [0:0] tmp_5901_fu_2499_p3;
wire   [0:0] xor_ln416_fu_2522_p2;
wire   [0:0] and_ln416_fu_2528_p2;
wire   [0:0] xor_ln779_fu_2542_p2;
wire   [0:0] tmp_5904_fu_2534_p3;
wire   [0:0] xor_ln785_fu_2554_p2;
wire   [0:0] or_ln785_fu_2559_p2;
wire   [0:0] select_ln416_fu_2547_p3;
wire   [0:0] and_ln786_fu_2571_p2;
wire   [0:0] or_ln786_fu_2577_p2;
wire   [0:0] xor_ln786_fu_2583_p2;
wire   [0:0] and_ln786_2087_fu_2589_p2;
wire   [0:0] and_ln785_fu_2565_p2;
wire   [0:0] or_ln340_2839_fu_2600_p2;
wire   [0:0] or_ln340_fu_2594_p2;
wire   [0:0] or_ln340_2840_fu_2606_p2;
wire   [23:0] select_ln340_fu_2612_p3;
wire   [23:0] select_ln388_fu_2620_p3;
wire   [23:0] zext_ln415_765_fu_2643_p1;
wire   [23:0] add_ln415_765_fu_2646_p2;
wire   [0:0] tmp_5910_fu_2651_p3;
wire   [0:0] tmp_5908_fu_2636_p3;
wire   [0:0] xor_ln416_750_fu_2659_p2;
wire   [0:0] and_ln416_750_fu_2665_p2;
wire   [0:0] xor_ln779_1_fu_2679_p2;
wire   [0:0] tmp_5911_fu_2671_p3;
wire   [0:0] xor_ln785_1_fu_2691_p2;
wire   [0:0] or_ln785_1_fu_2696_p2;
wire   [0:0] select_ln416_750_fu_2684_p3;
wire   [0:0] and_ln786_1_fu_2708_p2;
wire   [0:0] or_ln786_750_fu_2714_p2;
wire   [0:0] xor_ln786_1445_fu_2720_p2;
wire   [0:0] and_ln786_2089_fu_2726_p2;
wire   [0:0] and_ln785_750_fu_2702_p2;
wire   [0:0] or_ln340_2842_fu_2737_p2;
wire   [0:0] or_ln340_1_fu_2731_p2;
wire   [0:0] or_ln340_2843_fu_2743_p2;
wire   [23:0] select_ln340_1_fu_2749_p3;
wire   [23:0] select_ln388_1_fu_2757_p3;
wire   [23:0] zext_ln415_766_fu_2780_p1;
wire   [23:0] add_ln415_766_fu_2783_p2;
wire   [0:0] tmp_5917_fu_2788_p3;
wire   [0:0] tmp_5915_fu_2773_p3;
wire   [0:0] xor_ln416_751_fu_2796_p2;
wire   [0:0] and_ln416_751_fu_2802_p2;
wire   [0:0] xor_ln779_2_fu_2816_p2;
wire   [0:0] tmp_5918_fu_2808_p3;
wire   [0:0] xor_ln785_2_fu_2828_p2;
wire   [0:0] or_ln785_2_fu_2833_p2;
wire   [0:0] select_ln416_751_fu_2821_p3;
wire   [0:0] and_ln786_2_fu_2845_p2;
wire   [0:0] or_ln786_751_fu_2851_p2;
wire   [0:0] xor_ln786_1446_fu_2857_p2;
wire   [0:0] and_ln786_2091_fu_2863_p2;
wire   [0:0] and_ln785_751_fu_2839_p2;
wire   [0:0] or_ln340_2845_fu_2874_p2;
wire   [0:0] or_ln340_2_fu_2868_p2;
wire   [0:0] or_ln340_2846_fu_2880_p2;
wire   [23:0] select_ln340_2_fu_2886_p3;
wire   [23:0] select_ln388_2_fu_2894_p3;
wire   [23:0] zext_ln415_767_fu_2917_p1;
wire   [23:0] add_ln415_767_fu_2920_p2;
wire   [0:0] tmp_5924_fu_2925_p3;
wire   [0:0] tmp_5922_fu_2910_p3;
wire   [0:0] xor_ln416_752_fu_2933_p2;
wire   [0:0] and_ln416_752_fu_2939_p2;
wire   [0:0] xor_ln779_3_fu_2953_p2;
wire   [0:0] tmp_5925_fu_2945_p3;
wire   [0:0] xor_ln785_3_fu_2965_p2;
wire   [0:0] or_ln785_3_fu_2970_p2;
wire   [0:0] select_ln416_752_fu_2958_p3;
wire   [0:0] and_ln786_3_fu_2982_p2;
wire   [0:0] or_ln786_752_fu_2988_p2;
wire   [0:0] xor_ln786_1447_fu_2994_p2;
wire   [0:0] and_ln786_2093_fu_3000_p2;
wire   [0:0] and_ln785_752_fu_2976_p2;
wire   [0:0] or_ln340_2848_fu_3011_p2;
wire   [0:0] or_ln340_3_fu_3005_p2;
wire   [0:0] or_ln340_2849_fu_3017_p2;
wire   [23:0] select_ln340_3_fu_3023_p3;
wire   [23:0] select_ln388_3_fu_3031_p3;
wire   [23:0] zext_ln415_768_fu_3054_p1;
wire   [23:0] add_ln415_768_fu_3057_p2;
wire   [0:0] tmp_5931_fu_3062_p3;
wire   [0:0] tmp_5929_fu_3047_p3;
wire   [0:0] xor_ln416_753_fu_3070_p2;
wire   [0:0] and_ln416_753_fu_3076_p2;
wire   [0:0] xor_ln779_4_fu_3090_p2;
wire   [0:0] tmp_5932_fu_3082_p3;
wire   [0:0] xor_ln785_4_fu_3102_p2;
wire   [0:0] or_ln785_4_fu_3107_p2;
wire   [0:0] select_ln416_753_fu_3095_p3;
wire   [0:0] and_ln786_4_fu_3119_p2;
wire   [0:0] or_ln786_753_fu_3125_p2;
wire   [0:0] xor_ln786_1448_fu_3131_p2;
wire   [0:0] and_ln786_2095_fu_3137_p2;
wire   [0:0] and_ln785_753_fu_3113_p2;
wire   [0:0] or_ln340_2851_fu_3148_p2;
wire   [0:0] or_ln340_4_fu_3142_p2;
wire   [0:0] or_ln340_2852_fu_3154_p2;
wire   [23:0] select_ln340_4_fu_3160_p3;
wire   [23:0] select_ln388_4_fu_3168_p3;
wire   [23:0] zext_ln415_769_fu_3191_p1;
wire   [23:0] add_ln415_769_fu_3194_p2;
wire   [0:0] tmp_5938_fu_3199_p3;
wire   [0:0] tmp_5936_fu_3184_p3;
wire   [0:0] xor_ln416_754_fu_3207_p2;
wire   [0:0] and_ln416_754_fu_3213_p2;
wire   [0:0] xor_ln779_5_fu_3227_p2;
wire   [0:0] tmp_5939_fu_3219_p3;
wire   [0:0] xor_ln785_5_fu_3239_p2;
wire   [0:0] or_ln785_514_fu_3244_p2;
wire   [0:0] select_ln416_754_fu_3232_p3;
wire   [0:0] and_ln786_5_fu_3256_p2;
wire   [0:0] or_ln786_754_fu_3262_p2;
wire   [0:0] xor_ln786_1449_fu_3268_p2;
wire   [0:0] and_ln786_2097_fu_3274_p2;
wire   [0:0] and_ln785_754_fu_3250_p2;
wire   [0:0] or_ln340_2854_fu_3285_p2;
wire   [0:0] or_ln340_5_fu_3279_p2;
wire   [0:0] or_ln340_2855_fu_3291_p2;
wire   [23:0] select_ln340_5_fu_3297_p3;
wire   [23:0] select_ln388_5_fu_3305_p3;
wire   [23:0] zext_ln415_770_fu_3328_p1;
wire   [23:0] add_ln415_770_fu_3331_p2;
wire   [0:0] tmp_5945_fu_3336_p3;
wire   [0:0] tmp_5943_fu_3321_p3;
wire   [0:0] xor_ln416_755_fu_3344_p2;
wire   [0:0] and_ln416_755_fu_3350_p2;
wire   [0:0] xor_ln779_6_fu_3364_p2;
wire   [0:0] tmp_5946_fu_3356_p3;
wire   [0:0] xor_ln785_6_fu_3376_p2;
wire   [0:0] or_ln785_6_fu_3381_p2;
wire   [0:0] select_ln416_755_fu_3369_p3;
wire   [0:0] and_ln786_6_fu_3393_p2;
wire   [0:0] or_ln786_755_fu_3399_p2;
wire   [0:0] xor_ln786_1450_fu_3405_p2;
wire   [0:0] and_ln786_2099_fu_3411_p2;
wire   [0:0] and_ln785_755_fu_3387_p2;
wire   [0:0] or_ln340_2857_fu_3422_p2;
wire   [0:0] or_ln340_6_fu_3416_p2;
wire   [0:0] or_ln340_2858_fu_3428_p2;
wire   [23:0] select_ln340_6_fu_3434_p3;
wire   [23:0] select_ln388_6_fu_3442_p3;
wire   [23:0] zext_ln415_771_fu_3465_p1;
wire   [23:0] add_ln415_771_fu_3468_p2;
wire   [0:0] tmp_5952_fu_3473_p3;
wire   [0:0] tmp_5950_fu_3458_p3;
wire   [0:0] xor_ln416_756_fu_3481_p2;
wire   [0:0] and_ln416_756_fu_3487_p2;
wire   [0:0] xor_ln779_7_fu_3501_p2;
wire   [0:0] tmp_5953_fu_3493_p3;
wire   [0:0] xor_ln785_7_fu_3513_p2;
wire   [0:0] or_ln785_7_fu_3518_p2;
wire   [0:0] select_ln416_756_fu_3506_p3;
wire   [0:0] and_ln786_7_fu_3530_p2;
wire   [0:0] or_ln786_756_fu_3536_p2;
wire   [0:0] xor_ln786_1451_fu_3542_p2;
wire   [0:0] and_ln786_2101_fu_3548_p2;
wire   [0:0] and_ln785_756_fu_3524_p2;
wire   [0:0] or_ln340_2860_fu_3559_p2;
wire   [0:0] or_ln340_7_fu_3553_p2;
wire   [0:0] or_ln340_2861_fu_3565_p2;
wire   [23:0] select_ln340_7_fu_3571_p3;
wire   [23:0] select_ln388_7_fu_3579_p3;
wire   [23:0] zext_ln415_772_fu_3602_p1;
wire   [23:0] add_ln415_772_fu_3605_p2;
wire   [0:0] tmp_5959_fu_3610_p3;
wire   [0:0] tmp_5957_fu_3595_p3;
wire   [0:0] xor_ln416_757_fu_3618_p2;
wire   [0:0] and_ln416_757_fu_3624_p2;
wire   [0:0] xor_ln779_8_fu_3638_p2;
wire   [0:0] tmp_5960_fu_3630_p3;
wire   [0:0] xor_ln785_537_fu_3650_p2;
wire   [0:0] or_ln785_8_fu_3655_p2;
wire   [0:0] select_ln416_757_fu_3643_p3;
wire   [0:0] and_ln786_8_fu_3667_p2;
wire   [0:0] or_ln786_757_fu_3673_p2;
wire   [0:0] xor_ln786_1452_fu_3679_p2;
wire   [0:0] and_ln786_2103_fu_3685_p2;
wire   [0:0] and_ln785_757_fu_3661_p2;
wire   [0:0] or_ln340_2863_fu_3696_p2;
wire   [0:0] or_ln340_8_fu_3690_p2;
wire   [0:0] or_ln340_2864_fu_3702_p2;
wire   [23:0] select_ln340_8_fu_3708_p3;
wire   [23:0] select_ln388_8_fu_3716_p3;
wire   [23:0] zext_ln415_773_fu_3739_p1;
wire   [23:0] add_ln415_773_fu_3742_p2;
wire   [0:0] tmp_5966_fu_3747_p3;
wire   [0:0] tmp_5964_fu_3732_p3;
wire   [0:0] xor_ln416_758_fu_3755_p2;
wire   [0:0] and_ln416_758_fu_3761_p2;
wire   [0:0] xor_ln779_9_fu_3775_p2;
wire   [0:0] tmp_5967_fu_3767_p3;
wire   [0:0] xor_ln785_538_fu_3787_p2;
wire   [0:0] or_ln785_9_fu_3792_p2;
wire   [0:0] select_ln416_758_fu_3780_p3;
wire   [0:0] and_ln786_9_fu_3804_p2;
wire   [0:0] or_ln786_758_fu_3810_p2;
wire   [0:0] xor_ln786_1453_fu_3816_p2;
wire   [0:0] and_ln786_2105_fu_3822_p2;
wire   [0:0] and_ln785_758_fu_3798_p2;
wire   [0:0] or_ln340_2866_fu_3833_p2;
wire   [0:0] or_ln340_9_fu_3827_p2;
wire   [0:0] or_ln340_2867_fu_3839_p2;
wire   [23:0] select_ln340_9_fu_3845_p3;
wire   [23:0] select_ln388_9_fu_3853_p3;
wire   [23:0] zext_ln415_774_fu_3876_p1;
wire   [23:0] add_ln415_774_fu_3879_p2;
wire   [0:0] tmp_5973_fu_3884_p3;
wire   [0:0] tmp_5971_fu_3869_p3;
wire   [0:0] xor_ln416_759_fu_3892_p2;
wire   [0:0] and_ln416_759_fu_3898_p2;
wire   [0:0] xor_ln779_10_fu_3912_p2;
wire   [0:0] tmp_5974_fu_3904_p3;
wire   [0:0] xor_ln785_10_fu_3924_p2;
wire   [0:0] or_ln785_10_fu_3929_p2;
wire   [0:0] select_ln416_759_fu_3917_p3;
wire   [0:0] and_ln786_10_fu_3941_p2;
wire   [0:0] or_ln786_759_fu_3947_p2;
wire   [0:0] xor_ln786_1454_fu_3953_p2;
wire   [0:0] and_ln786_2107_fu_3959_p2;
wire   [0:0] and_ln785_759_fu_3935_p2;
wire   [0:0] or_ln340_2869_fu_3970_p2;
wire   [0:0] or_ln340_10_fu_3964_p2;
wire   [0:0] or_ln340_2870_fu_3976_p2;
wire   [23:0] select_ln340_10_fu_3982_p3;
wire   [23:0] select_ln388_10_fu_3990_p3;
wire   [23:0] zext_ln415_775_fu_4013_p1;
wire   [23:0] add_ln415_775_fu_4016_p2;
wire   [0:0] tmp_5980_fu_4021_p3;
wire   [0:0] tmp_5978_fu_4006_p3;
wire   [0:0] xor_ln416_760_fu_4029_p2;
wire   [0:0] and_ln416_760_fu_4035_p2;
wire   [0:0] xor_ln779_11_fu_4049_p2;
wire   [0:0] tmp_5981_fu_4041_p3;
wire   [0:0] xor_ln785_11_fu_4061_p2;
wire   [0:0] or_ln785_11_fu_4066_p2;
wire   [0:0] select_ln416_760_fu_4054_p3;
wire   [0:0] and_ln786_11_fu_4078_p2;
wire   [0:0] or_ln786_760_fu_4084_p2;
wire   [0:0] xor_ln786_1455_fu_4090_p2;
wire   [0:0] and_ln786_2109_fu_4096_p2;
wire   [0:0] and_ln785_760_fu_4072_p2;
wire   [0:0] or_ln340_2872_fu_4107_p2;
wire   [0:0] or_ln340_11_fu_4101_p2;
wire   [0:0] or_ln340_2873_fu_4113_p2;
wire   [23:0] select_ln340_11_fu_4119_p3;
wire   [23:0] select_ln388_11_fu_4127_p3;
wire   [23:0] zext_ln415_776_fu_4150_p1;
wire   [23:0] add_ln415_776_fu_4153_p2;
wire   [0:0] tmp_5987_fu_4158_p3;
wire   [0:0] tmp_5985_fu_4143_p3;
wire   [0:0] xor_ln416_761_fu_4166_p2;
wire   [0:0] and_ln416_761_fu_4172_p2;
wire   [0:0] xor_ln779_12_fu_4186_p2;
wire   [0:0] tmp_5988_fu_4178_p3;
wire   [0:0] xor_ln785_12_fu_4198_p2;
wire   [0:0] or_ln785_12_fu_4203_p2;
wire   [0:0] select_ln416_761_fu_4191_p3;
wire   [0:0] and_ln786_12_fu_4215_p2;
wire   [0:0] or_ln786_761_fu_4221_p2;
wire   [0:0] xor_ln786_1456_fu_4227_p2;
wire   [0:0] and_ln786_2111_fu_4233_p2;
wire   [0:0] and_ln785_761_fu_4209_p2;
wire   [0:0] or_ln340_2875_fu_4244_p2;
wire   [0:0] or_ln340_1221_fu_4238_p2;
wire   [0:0] or_ln340_2876_fu_4250_p2;
wire   [23:0] select_ln340_12_fu_4256_p3;
wire   [23:0] select_ln388_12_fu_4264_p3;
wire   [23:0] zext_ln415_777_fu_4287_p1;
wire   [23:0] add_ln415_777_fu_4290_p2;
wire   [0:0] tmp_5994_fu_4295_p3;
wire   [0:0] tmp_5992_fu_4280_p3;
wire   [0:0] xor_ln416_762_fu_4303_p2;
wire   [0:0] and_ln416_762_fu_4309_p2;
wire   [0:0] xor_ln779_13_fu_4323_p2;
wire   [0:0] tmp_5995_fu_4315_p3;
wire   [0:0] xor_ln785_13_fu_4335_p2;
wire   [0:0] or_ln785_13_fu_4340_p2;
wire   [0:0] select_ln416_762_fu_4328_p3;
wire   [0:0] and_ln786_13_fu_4352_p2;
wire   [0:0] or_ln786_762_fu_4358_p2;
wire   [0:0] xor_ln786_1457_fu_4364_p2;
wire   [0:0] and_ln786_2113_fu_4370_p2;
wire   [0:0] and_ln785_762_fu_4346_p2;
wire   [0:0] or_ln340_2878_fu_4381_p2;
wire   [0:0] or_ln340_13_fu_4375_p2;
wire   [0:0] or_ln340_2879_fu_4387_p2;
wire   [23:0] select_ln340_13_fu_4393_p3;
wire   [23:0] select_ln388_13_fu_4401_p3;
wire   [23:0] zext_ln415_778_fu_4424_p1;
wire   [23:0] add_ln415_778_fu_4427_p2;
wire   [0:0] tmp_6001_fu_4432_p3;
wire   [0:0] tmp_5999_fu_4417_p3;
wire   [0:0] xor_ln416_763_fu_4440_p2;
wire   [0:0] and_ln416_763_fu_4446_p2;
wire   [0:0] xor_ln779_14_fu_4460_p2;
wire   [0:0] tmp_6002_fu_4452_p3;
wire   [0:0] xor_ln785_14_fu_4472_p2;
wire   [0:0] or_ln785_14_fu_4477_p2;
wire   [0:0] select_ln416_763_fu_4465_p3;
wire   [0:0] and_ln786_14_fu_4489_p2;
wire   [0:0] or_ln786_763_fu_4495_p2;
wire   [0:0] xor_ln786_1458_fu_4501_p2;
wire   [0:0] and_ln786_2115_fu_4507_p2;
wire   [0:0] and_ln785_763_fu_4483_p2;
wire   [0:0] or_ln340_2881_fu_4518_p2;
wire   [0:0] or_ln340_1422_fu_4512_p2;
wire   [0:0] or_ln340_2882_fu_4524_p2;
wire   [23:0] select_ln340_14_fu_4530_p3;
wire   [23:0] select_ln388_14_fu_4538_p3;
wire   [23:0] zext_ln415_779_fu_4561_p1;
wire   [23:0] add_ln415_779_fu_4564_p2;
wire   [0:0] tmp_6008_fu_4569_p3;
wire   [0:0] tmp_6006_fu_4554_p3;
wire   [0:0] xor_ln416_764_fu_4577_p2;
wire   [0:0] and_ln416_764_fu_4583_p2;
wire   [0:0] xor_ln779_15_fu_4597_p2;
wire   [0:0] tmp_6009_fu_4589_p3;
wire   [0:0] xor_ln785_15_fu_4609_p2;
wire   [0:0] or_ln785_15_fu_4614_p2;
wire   [0:0] select_ln416_764_fu_4602_p3;
wire   [0:0] and_ln786_15_fu_4626_p2;
wire   [0:0] or_ln786_764_fu_4632_p2;
wire   [0:0] xor_ln786_1459_fu_4638_p2;
wire   [0:0] and_ln786_2117_fu_4644_p2;
wire   [0:0] and_ln785_764_fu_4620_p2;
wire   [0:0] or_ln340_2884_fu_4655_p2;
wire   [0:0] or_ln340_15_fu_4649_p2;
wire   [0:0] or_ln340_2885_fu_4661_p2;
wire   [23:0] select_ln340_15_fu_4667_p3;
wire   [23:0] select_ln388_15_fu_4675_p3;
wire   [23:0] zext_ln415_780_fu_4698_p1;
wire   [23:0] add_ln415_780_fu_4701_p2;
wire   [0:0] tmp_6015_fu_4706_p3;
wire   [0:0] tmp_6013_fu_4691_p3;
wire   [0:0] xor_ln416_765_fu_4714_p2;
wire   [0:0] and_ln416_765_fu_4720_p2;
wire   [0:0] xor_ln779_16_fu_4734_p2;
wire   [0:0] tmp_6016_fu_4726_p3;
wire   [0:0] xor_ln785_16_fu_4746_p2;
wire   [0:0] or_ln785_16_fu_4751_p2;
wire   [0:0] select_ln416_765_fu_4739_p3;
wire   [0:0] and_ln786_16_fu_4763_p2;
wire   [0:0] or_ln786_765_fu_4769_p2;
wire   [0:0] xor_ln786_1460_fu_4775_p2;
wire   [0:0] and_ln786_2119_fu_4781_p2;
wire   [0:0] and_ln785_765_fu_4757_p2;
wire   [0:0] or_ln340_2887_fu_4792_p2;
wire   [0:0] or_ln340_16_fu_4786_p2;
wire   [0:0] or_ln340_2888_fu_4798_p2;
wire   [23:0] select_ln340_16_fu_4804_p3;
wire   [23:0] select_ln388_16_fu_4812_p3;
wire   [23:0] zext_ln415_781_fu_4835_p1;
wire   [23:0] add_ln415_781_fu_4838_p2;
wire   [0:0] tmp_6022_fu_4843_p3;
wire   [0:0] tmp_6020_fu_4828_p3;
wire   [0:0] xor_ln416_766_fu_4851_p2;
wire   [0:0] and_ln416_766_fu_4857_p2;
wire   [0:0] xor_ln779_17_fu_4871_p2;
wire   [0:0] tmp_6023_fu_4863_p3;
wire   [0:0] xor_ln785_17_fu_4883_p2;
wire   [0:0] or_ln785_17_fu_4888_p2;
wire   [0:0] select_ln416_766_fu_4876_p3;
wire   [0:0] and_ln786_17_fu_4900_p2;
wire   [0:0] or_ln786_766_fu_4906_p2;
wire   [0:0] xor_ln786_1461_fu_4912_p2;
wire   [0:0] and_ln786_2121_fu_4918_p2;
wire   [0:0] and_ln785_766_fu_4894_p2;
wire   [0:0] or_ln340_2890_fu_4929_p2;
wire   [0:0] or_ln340_17_fu_4923_p2;
wire   [0:0] or_ln340_2891_fu_4935_p2;
wire   [23:0] select_ln340_17_fu_4941_p3;
wire   [23:0] select_ln388_17_fu_4949_p3;
wire   [23:0] zext_ln415_782_fu_4972_p1;
wire   [23:0] add_ln415_782_fu_4975_p2;
wire   [0:0] tmp_6029_fu_4980_p3;
wire   [0:0] tmp_6027_fu_4965_p3;
wire   [0:0] xor_ln416_767_fu_4988_p2;
wire   [0:0] and_ln416_767_fu_4994_p2;
wire   [0:0] xor_ln779_18_fu_5008_p2;
wire   [0:0] tmp_6030_fu_5000_p3;
wire   [0:0] xor_ln785_18_fu_5020_p2;
wire   [0:0] or_ln785_18_fu_5025_p2;
wire   [0:0] select_ln416_767_fu_5013_p3;
wire   [0:0] and_ln786_18_fu_5037_p2;
wire   [0:0] or_ln786_767_fu_5043_p2;
wire   [0:0] xor_ln786_1462_fu_5049_p2;
wire   [0:0] and_ln786_2123_fu_5055_p2;
wire   [0:0] and_ln785_767_fu_5031_p2;
wire   [0:0] or_ln340_2893_fu_5066_p2;
wire   [0:0] or_ln340_18_fu_5060_p2;
wire   [0:0] or_ln340_2894_fu_5072_p2;
wire   [23:0] select_ln340_18_fu_5078_p3;
wire   [23:0] select_ln388_18_fu_5086_p3;
wire   [23:0] zext_ln415_783_fu_5109_p1;
wire   [23:0] add_ln415_783_fu_5112_p2;
wire   [0:0] tmp_6036_fu_5117_p3;
wire   [0:0] tmp_6034_fu_5102_p3;
wire   [0:0] xor_ln416_768_fu_5125_p2;
wire   [0:0] and_ln416_768_fu_5131_p2;
wire   [0:0] xor_ln779_19_fu_5145_p2;
wire   [0:0] tmp_6037_fu_5137_p3;
wire   [0:0] xor_ln785_19_fu_5157_p2;
wire   [0:0] or_ln785_19_fu_5162_p2;
wire   [0:0] select_ln416_768_fu_5150_p3;
wire   [0:0] and_ln786_19_fu_5174_p2;
wire   [0:0] or_ln786_768_fu_5180_p2;
wire   [0:0] xor_ln786_1463_fu_5186_p2;
wire   [0:0] and_ln786_2125_fu_5192_p2;
wire   [0:0] and_ln785_768_fu_5168_p2;
wire   [0:0] or_ln340_2896_fu_5203_p2;
wire   [0:0] or_ln340_19_fu_5197_p2;
wire   [0:0] or_ln340_2897_fu_5209_p2;
wire   [23:0] select_ln340_19_fu_5215_p3;
wire   [23:0] select_ln388_19_fu_5223_p3;
wire   [23:0] zext_ln415_784_fu_5246_p1;
wire   [23:0] add_ln415_784_fu_5249_p2;
wire   [0:0] tmp_6043_fu_5254_p3;
wire   [0:0] tmp_6041_fu_5239_p3;
wire   [0:0] xor_ln416_769_fu_5262_p2;
wire   [0:0] and_ln416_769_fu_5268_p2;
wire   [0:0] xor_ln779_20_fu_5282_p2;
wire   [0:0] tmp_6044_fu_5274_p3;
wire   [0:0] xor_ln785_20_fu_5294_p2;
wire   [0:0] or_ln785_20_fu_5299_p2;
wire   [0:0] select_ln416_769_fu_5287_p3;
wire   [0:0] and_ln786_20_fu_5311_p2;
wire   [0:0] or_ln786_769_fu_5317_p2;
wire   [0:0] xor_ln786_1464_fu_5323_p2;
wire   [0:0] and_ln786_2127_fu_5329_p2;
wire   [0:0] and_ln785_769_fu_5305_p2;
wire   [0:0] or_ln340_2899_fu_5340_p2;
wire   [0:0] or_ln340_20_fu_5334_p2;
wire   [0:0] or_ln340_2900_fu_5346_p2;
wire   [23:0] select_ln340_20_fu_5352_p3;
wire   [23:0] select_ln388_20_fu_5360_p3;
wire   [23:0] zext_ln415_785_fu_5383_p1;
wire   [23:0] add_ln415_785_fu_5386_p2;
wire   [0:0] tmp_6050_fu_5391_p3;
wire   [0:0] tmp_6048_fu_5376_p3;
wire   [0:0] xor_ln416_770_fu_5399_p2;
wire   [0:0] and_ln416_770_fu_5405_p2;
wire   [0:0] xor_ln779_21_fu_5419_p2;
wire   [0:0] tmp_6051_fu_5411_p3;
wire   [0:0] xor_ln785_21_fu_5431_p2;
wire   [0:0] or_ln785_21_fu_5436_p2;
wire   [0:0] select_ln416_770_fu_5424_p3;
wire   [0:0] and_ln786_21_fu_5448_p2;
wire   [0:0] or_ln786_770_fu_5454_p2;
wire   [0:0] xor_ln786_1465_fu_5460_p2;
wire   [0:0] and_ln786_2129_fu_5466_p2;
wire   [0:0] and_ln785_770_fu_5442_p2;
wire   [0:0] or_ln340_2902_fu_5477_p2;
wire   [0:0] or_ln340_21_fu_5471_p2;
wire   [0:0] or_ln340_2903_fu_5483_p2;
wire   [23:0] select_ln340_21_fu_5489_p3;
wire   [23:0] select_ln388_21_fu_5497_p3;
wire   [23:0] zext_ln415_786_fu_5520_p1;
wire   [23:0] add_ln415_786_fu_5523_p2;
wire   [0:0] tmp_6057_fu_5528_p3;
wire   [0:0] tmp_6055_fu_5513_p3;
wire   [0:0] xor_ln416_771_fu_5536_p2;
wire   [0:0] and_ln416_771_fu_5542_p2;
wire   [0:0] xor_ln779_22_fu_5556_p2;
wire   [0:0] tmp_6058_fu_5548_p3;
wire   [0:0] xor_ln785_22_fu_5568_p2;
wire   [0:0] or_ln785_22_fu_5573_p2;
wire   [0:0] select_ln416_771_fu_5561_p3;
wire   [0:0] and_ln786_22_fu_5585_p2;
wire   [0:0] or_ln786_771_fu_5591_p2;
wire   [0:0] xor_ln786_1466_fu_5597_p2;
wire   [0:0] and_ln786_2131_fu_5603_p2;
wire   [0:0] and_ln785_771_fu_5579_p2;
wire   [0:0] or_ln340_2905_fu_5614_p2;
wire   [0:0] or_ln340_22_fu_5608_p2;
wire   [0:0] or_ln340_2906_fu_5620_p2;
wire   [23:0] select_ln340_22_fu_5626_p3;
wire   [23:0] select_ln388_22_fu_5634_p3;
wire   [23:0] zext_ln415_787_fu_5657_p1;
wire   [23:0] add_ln415_787_fu_5660_p2;
wire   [0:0] tmp_6064_fu_5665_p3;
wire   [0:0] tmp_6062_fu_5650_p3;
wire   [0:0] xor_ln416_772_fu_5673_p2;
wire   [0:0] and_ln416_772_fu_5679_p2;
wire   [0:0] xor_ln779_23_fu_5693_p2;
wire   [0:0] tmp_6065_fu_5685_p3;
wire   [0:0] xor_ln785_23_fu_5705_p2;
wire   [0:0] or_ln785_23_fu_5710_p2;
wire   [0:0] select_ln416_772_fu_5698_p3;
wire   [0:0] and_ln786_23_fu_5722_p2;
wire   [0:0] or_ln786_772_fu_5728_p2;
wire   [0:0] xor_ln786_1467_fu_5734_p2;
wire   [0:0] and_ln786_2133_fu_5740_p2;
wire   [0:0] and_ln785_772_fu_5716_p2;
wire   [0:0] or_ln340_2908_fu_5751_p2;
wire   [0:0] or_ln340_23_fu_5745_p2;
wire   [0:0] or_ln340_2909_fu_5757_p2;
wire   [23:0] select_ln340_23_fu_5763_p3;
wire   [23:0] select_ln388_23_fu_5771_p3;
wire   [23:0] zext_ln415_788_fu_5794_p1;
wire   [23:0] add_ln415_788_fu_5797_p2;
wire   [0:0] tmp_6071_fu_5802_p3;
wire   [0:0] tmp_6069_fu_5787_p3;
wire   [0:0] xor_ln416_773_fu_5810_p2;
wire   [0:0] and_ln416_773_fu_5816_p2;
wire   [0:0] xor_ln779_24_fu_5830_p2;
wire   [0:0] tmp_6072_fu_5822_p3;
wire   [0:0] xor_ln785_24_fu_5842_p2;
wire   [0:0] or_ln785_24_fu_5847_p2;
wire   [0:0] select_ln416_773_fu_5835_p3;
wire   [0:0] and_ln786_24_fu_5859_p2;
wire   [0:0] or_ln786_773_fu_5865_p2;
wire   [0:0] xor_ln786_1468_fu_5871_p2;
wire   [0:0] and_ln786_2135_fu_5877_p2;
wire   [0:0] and_ln785_773_fu_5853_p2;
wire   [0:0] or_ln340_2911_fu_5888_p2;
wire   [0:0] or_ln340_24_fu_5882_p2;
wire   [0:0] or_ln340_2912_fu_5894_p2;
wire   [23:0] select_ln340_24_fu_5900_p3;
wire   [23:0] select_ln388_24_fu_5908_p3;
wire   [23:0] zext_ln415_789_fu_5931_p1;
wire   [23:0] add_ln415_789_fu_5934_p2;
wire   [0:0] tmp_6078_fu_5939_p3;
wire   [0:0] tmp_6076_fu_5924_p3;
wire   [0:0] xor_ln416_774_fu_5947_p2;
wire   [0:0] and_ln416_774_fu_5953_p2;
wire   [0:0] xor_ln779_25_fu_5967_p2;
wire   [0:0] tmp_6079_fu_5959_p3;
wire   [0:0] xor_ln785_25_fu_5979_p2;
wire   [0:0] or_ln785_25_fu_5984_p2;
wire   [0:0] select_ln416_774_fu_5972_p3;
wire   [0:0] and_ln786_25_fu_5996_p2;
wire   [0:0] or_ln786_774_fu_6002_p2;
wire   [0:0] xor_ln786_1469_fu_6008_p2;
wire   [0:0] and_ln786_2137_fu_6014_p2;
wire   [0:0] and_ln785_774_fu_5990_p2;
wire   [0:0] or_ln340_2914_fu_6025_p2;
wire   [0:0] or_ln340_25_fu_6019_p2;
wire   [0:0] or_ln340_2915_fu_6031_p2;
wire   [23:0] select_ln340_25_fu_6037_p3;
wire   [23:0] select_ln388_25_fu_6045_p3;
wire   [23:0] zext_ln415_790_fu_6068_p1;
wire   [23:0] add_ln415_790_fu_6071_p2;
wire   [0:0] tmp_6085_fu_6076_p3;
wire   [0:0] tmp_6083_fu_6061_p3;
wire   [0:0] xor_ln416_775_fu_6084_p2;
wire   [0:0] and_ln416_775_fu_6090_p2;
wire   [0:0] xor_ln779_26_fu_6104_p2;
wire   [0:0] tmp_6086_fu_6096_p3;
wire   [0:0] xor_ln785_26_fu_6116_p2;
wire   [0:0] or_ln785_26_fu_6121_p2;
wire   [0:0] select_ln416_775_fu_6109_p3;
wire   [0:0] and_ln786_26_fu_6133_p2;
wire   [0:0] or_ln786_775_fu_6139_p2;
wire   [0:0] xor_ln786_1470_fu_6145_p2;
wire   [0:0] and_ln786_2139_fu_6151_p2;
wire   [0:0] and_ln785_775_fu_6127_p2;
wire   [0:0] or_ln340_2917_fu_6162_p2;
wire   [0:0] or_ln340_26_fu_6156_p2;
wire   [0:0] or_ln340_2918_fu_6168_p2;
wire   [23:0] select_ln340_26_fu_6174_p3;
wire   [23:0] select_ln388_26_fu_6182_p3;
wire   [23:0] zext_ln415_791_fu_6205_p1;
wire   [23:0] add_ln415_791_fu_6208_p2;
wire   [0:0] tmp_6092_fu_6213_p3;
wire   [0:0] tmp_6090_fu_6198_p3;
wire   [0:0] xor_ln416_776_fu_6221_p2;
wire   [0:0] and_ln416_776_fu_6227_p2;
wire   [0:0] xor_ln779_27_fu_6241_p2;
wire   [0:0] tmp_6093_fu_6233_p3;
wire   [0:0] xor_ln785_27_fu_6253_p2;
wire   [0:0] or_ln785_27_fu_6258_p2;
wire   [0:0] select_ln416_776_fu_6246_p3;
wire   [0:0] and_ln786_27_fu_6270_p2;
wire   [0:0] or_ln786_776_fu_6276_p2;
wire   [0:0] xor_ln786_1471_fu_6282_p2;
wire   [0:0] and_ln786_2141_fu_6288_p2;
wire   [0:0] and_ln785_776_fu_6264_p2;
wire   [0:0] or_ln340_2920_fu_6299_p2;
wire   [0:0] or_ln340_27_fu_6293_p2;
wire   [0:0] or_ln340_2921_fu_6305_p2;
wire   [23:0] select_ln340_27_fu_6311_p3;
wire   [23:0] select_ln388_27_fu_6319_p3;
wire   [23:0] zext_ln415_792_fu_6342_p1;
wire   [23:0] add_ln415_792_fu_6345_p2;
wire   [0:0] tmp_6099_fu_6350_p3;
wire   [0:0] tmp_6097_fu_6335_p3;
wire   [0:0] xor_ln416_777_fu_6358_p2;
wire   [0:0] and_ln416_777_fu_6364_p2;
wire   [0:0] xor_ln779_28_fu_6378_p2;
wire   [0:0] tmp_6100_fu_6370_p3;
wire   [0:0] xor_ln785_28_fu_6390_p2;
wire   [0:0] or_ln785_28_fu_6395_p2;
wire   [0:0] select_ln416_777_fu_6383_p3;
wire   [0:0] and_ln786_28_fu_6407_p2;
wire   [0:0] or_ln786_777_fu_6413_p2;
wire   [0:0] xor_ln786_1472_fu_6419_p2;
wire   [0:0] and_ln786_2143_fu_6425_p2;
wire   [0:0] and_ln785_777_fu_6401_p2;
wire   [0:0] or_ln340_2923_fu_6436_p2;
wire   [0:0] or_ln340_28_fu_6430_p2;
wire   [0:0] or_ln340_2924_fu_6442_p2;
wire   [23:0] select_ln340_28_fu_6448_p3;
wire   [23:0] select_ln388_28_fu_6456_p3;
wire   [23:0] zext_ln415_793_fu_6479_p1;
wire   [23:0] add_ln415_793_fu_6482_p2;
wire   [0:0] tmp_6106_fu_6487_p3;
wire   [0:0] tmp_6104_fu_6472_p3;
wire   [0:0] xor_ln416_778_fu_6495_p2;
wire   [0:0] and_ln416_778_fu_6501_p2;
wire   [0:0] xor_ln779_29_fu_6515_p2;
wire   [0:0] tmp_6107_fu_6507_p3;
wire   [0:0] xor_ln785_29_fu_6527_p2;
wire   [0:0] or_ln785_29_fu_6532_p2;
wire   [0:0] select_ln416_778_fu_6520_p3;
wire   [0:0] and_ln786_29_fu_6544_p2;
wire   [0:0] or_ln786_778_fu_6550_p2;
wire   [0:0] xor_ln786_1473_fu_6556_p2;
wire   [0:0] and_ln786_2145_fu_6562_p2;
wire   [0:0] and_ln785_778_fu_6538_p2;
wire   [0:0] or_ln340_2926_fu_6573_p2;
wire   [0:0] or_ln340_29_fu_6567_p2;
wire   [0:0] or_ln340_2927_fu_6579_p2;
wire   [23:0] select_ln340_29_fu_6585_p3;
wire   [23:0] select_ln388_29_fu_6593_p3;
wire   [23:0] zext_ln415_794_fu_6616_p1;
wire   [23:0] add_ln415_794_fu_6619_p2;
wire   [0:0] tmp_6113_fu_6624_p3;
wire   [0:0] tmp_6111_fu_6609_p3;
wire   [0:0] xor_ln416_779_fu_6632_p2;
wire   [0:0] and_ln416_779_fu_6638_p2;
wire   [0:0] xor_ln779_30_fu_6652_p2;
wire   [0:0] tmp_6114_fu_6644_p3;
wire   [0:0] xor_ln785_30_fu_6664_p2;
wire   [0:0] or_ln785_30_fu_6669_p2;
wire   [0:0] select_ln416_779_fu_6657_p3;
wire   [0:0] and_ln786_30_fu_6681_p2;
wire   [0:0] or_ln786_779_fu_6687_p2;
wire   [0:0] xor_ln786_1474_fu_6693_p2;
wire   [0:0] and_ln786_2147_fu_6699_p2;
wire   [0:0] and_ln785_779_fu_6675_p2;
wire   [0:0] or_ln340_2929_fu_6710_p2;
wire   [0:0] or_ln340_30_fu_6704_p2;
wire   [0:0] or_ln340_2930_fu_6716_p2;
wire   [23:0] select_ln340_30_fu_6722_p3;
wire   [23:0] select_ln388_30_fu_6730_p3;
wire   [23:0] zext_ln415_795_fu_6753_p1;
wire   [23:0] add_ln415_795_fu_6756_p2;
wire   [0:0] tmp_6120_fu_6761_p3;
wire   [0:0] tmp_6118_fu_6746_p3;
wire   [0:0] xor_ln416_780_fu_6769_p2;
wire   [0:0] and_ln416_780_fu_6775_p2;
wire   [0:0] xor_ln779_31_fu_6789_p2;
wire   [0:0] tmp_6121_fu_6781_p3;
wire   [0:0] xor_ln785_31_fu_6801_p2;
wire   [0:0] or_ln785_31_fu_6806_p2;
wire   [0:0] select_ln416_780_fu_6794_p3;
wire   [0:0] and_ln786_31_fu_6818_p2;
wire   [0:0] or_ln786_780_fu_6824_p2;
wire   [0:0] xor_ln786_1475_fu_6830_p2;
wire   [0:0] and_ln786_2149_fu_6836_p2;
wire   [0:0] and_ln785_780_fu_6812_p2;
wire   [0:0] or_ln340_2932_fu_6847_p2;
wire   [0:0] or_ln340_31_fu_6841_p2;
wire   [0:0] or_ln340_2933_fu_6853_p2;
wire   [23:0] select_ln340_31_fu_6859_p3;
wire   [23:0] select_ln388_31_fu_6867_p3;
wire   [23:0] zext_ln415_796_fu_6890_p1;
wire   [23:0] add_ln415_796_fu_6893_p2;
wire   [0:0] tmp_6127_fu_6898_p3;
wire   [0:0] tmp_6125_fu_6883_p3;
wire   [0:0] xor_ln416_781_fu_6906_p2;
wire   [0:0] and_ln416_781_fu_6912_p2;
wire   [0:0] xor_ln779_32_fu_6926_p2;
wire   [0:0] tmp_6128_fu_6918_p3;
wire   [0:0] xor_ln785_32_fu_6938_p2;
wire   [0:0] or_ln785_32_fu_6943_p2;
wire   [0:0] select_ln416_781_fu_6931_p3;
wire   [0:0] and_ln786_32_fu_6955_p2;
wire   [0:0] or_ln786_781_fu_6961_p2;
wire   [0:0] xor_ln786_1476_fu_6967_p2;
wire   [0:0] and_ln786_2151_fu_6973_p2;
wire   [0:0] and_ln785_781_fu_6949_p2;
wire   [0:0] or_ln340_2935_fu_6984_p2;
wire   [0:0] or_ln340_32_fu_6978_p2;
wire   [0:0] or_ln340_2936_fu_6990_p2;
wire   [23:0] select_ln340_32_fu_6996_p3;
wire   [23:0] select_ln388_32_fu_7004_p3;
wire   [23:0] zext_ln415_797_fu_7027_p1;
wire   [23:0] add_ln415_797_fu_7030_p2;
wire   [0:0] tmp_6134_fu_7035_p3;
wire   [0:0] tmp_6132_fu_7020_p3;
wire   [0:0] xor_ln416_782_fu_7043_p2;
wire   [0:0] and_ln416_782_fu_7049_p2;
wire   [0:0] xor_ln779_33_fu_7063_p2;
wire   [0:0] tmp_6135_fu_7055_p3;
wire   [0:0] xor_ln785_33_fu_7075_p2;
wire   [0:0] or_ln785_33_fu_7080_p2;
wire   [0:0] select_ln416_782_fu_7068_p3;
wire   [0:0] and_ln786_33_fu_7092_p2;
wire   [0:0] or_ln786_782_fu_7098_p2;
wire   [0:0] xor_ln786_1477_fu_7104_p2;
wire   [0:0] and_ln786_2153_fu_7110_p2;
wire   [0:0] and_ln785_782_fu_7086_p2;
wire   [0:0] or_ln340_2938_fu_7121_p2;
wire   [0:0] or_ln340_33_fu_7115_p2;
wire   [0:0] or_ln340_2939_fu_7127_p2;
wire   [23:0] select_ln340_33_fu_7133_p3;
wire   [23:0] select_ln388_33_fu_7141_p3;
wire   [23:0] zext_ln415_798_fu_7164_p1;
wire   [23:0] add_ln415_798_fu_7167_p2;
wire   [0:0] tmp_6141_fu_7172_p3;
wire   [0:0] tmp_6139_fu_7157_p3;
wire   [0:0] xor_ln416_783_fu_7180_p2;
wire   [0:0] and_ln416_783_fu_7186_p2;
wire   [0:0] xor_ln779_34_fu_7200_p2;
wire   [0:0] tmp_6142_fu_7192_p3;
wire   [0:0] xor_ln785_34_fu_7212_p2;
wire   [0:0] or_ln785_34_fu_7217_p2;
wire   [0:0] select_ln416_783_fu_7205_p3;
wire   [0:0] and_ln786_34_fu_7229_p2;
wire   [0:0] or_ln786_783_fu_7235_p2;
wire   [0:0] xor_ln786_1478_fu_7241_p2;
wire   [0:0] and_ln786_2155_fu_7247_p2;
wire   [0:0] and_ln785_783_fu_7223_p2;
wire   [0:0] or_ln340_2941_fu_7258_p2;
wire   [0:0] or_ln340_34_fu_7252_p2;
wire   [0:0] or_ln340_2942_fu_7264_p2;
wire   [23:0] select_ln340_34_fu_7270_p3;
wire   [23:0] select_ln388_34_fu_7278_p3;
wire   [23:0] zext_ln415_799_fu_7301_p1;
wire   [23:0] add_ln415_799_fu_7304_p2;
wire   [0:0] tmp_6148_fu_7309_p3;
wire   [0:0] tmp_6146_fu_7294_p3;
wire   [0:0] xor_ln416_784_fu_7317_p2;
wire   [0:0] and_ln416_784_fu_7323_p2;
wire   [0:0] xor_ln779_35_fu_7337_p2;
wire   [0:0] tmp_6149_fu_7329_p3;
wire   [0:0] xor_ln785_35_fu_7349_p2;
wire   [0:0] or_ln785_35_fu_7354_p2;
wire   [0:0] select_ln416_784_fu_7342_p3;
wire   [0:0] and_ln786_35_fu_7366_p2;
wire   [0:0] or_ln786_784_fu_7372_p2;
wire   [0:0] xor_ln786_1479_fu_7378_p2;
wire   [0:0] and_ln786_2157_fu_7384_p2;
wire   [0:0] and_ln785_784_fu_7360_p2;
wire   [0:0] or_ln340_2944_fu_7395_p2;
wire   [0:0] or_ln340_35_fu_7389_p2;
wire   [0:0] or_ln340_2945_fu_7401_p2;
wire   [23:0] select_ln340_35_fu_7407_p3;
wire   [23:0] select_ln388_35_fu_7415_p3;
wire   [23:0] zext_ln415_800_fu_7438_p1;
wire   [23:0] add_ln415_800_fu_7441_p2;
wire   [0:0] tmp_6155_fu_7446_p3;
wire   [0:0] tmp_6153_fu_7431_p3;
wire   [0:0] xor_ln416_785_fu_7454_p2;
wire   [0:0] and_ln416_785_fu_7460_p2;
wire   [0:0] xor_ln779_36_fu_7474_p2;
wire   [0:0] tmp_6156_fu_7466_p3;
wire   [0:0] xor_ln785_36_fu_7486_p2;
wire   [0:0] or_ln785_36_fu_7491_p2;
wire   [0:0] select_ln416_785_fu_7479_p3;
wire   [0:0] and_ln786_36_fu_7503_p2;
wire   [0:0] or_ln786_785_fu_7509_p2;
wire   [0:0] xor_ln786_1480_fu_7515_p2;
wire   [0:0] and_ln786_2159_fu_7521_p2;
wire   [0:0] and_ln785_785_fu_7497_p2;
wire   [0:0] or_ln340_2947_fu_7532_p2;
wire   [0:0] or_ln340_36_fu_7526_p2;
wire   [0:0] or_ln340_2948_fu_7538_p2;
wire   [23:0] select_ln340_36_fu_7544_p3;
wire   [23:0] select_ln388_36_fu_7552_p3;
wire   [23:0] zext_ln415_801_fu_7575_p1;
wire   [23:0] add_ln415_801_fu_7578_p2;
wire   [0:0] tmp_6162_fu_7583_p3;
wire   [0:0] tmp_6160_fu_7568_p3;
wire   [0:0] xor_ln416_786_fu_7591_p2;
wire   [0:0] and_ln416_786_fu_7597_p2;
wire   [0:0] xor_ln779_37_fu_7611_p2;
wire   [0:0] tmp_6163_fu_7603_p3;
wire   [0:0] xor_ln785_37_fu_7623_p2;
wire   [0:0] or_ln785_37_fu_7628_p2;
wire   [0:0] select_ln416_786_fu_7616_p3;
wire   [0:0] and_ln786_37_fu_7640_p2;
wire   [0:0] or_ln786_786_fu_7646_p2;
wire   [0:0] xor_ln786_1481_fu_7652_p2;
wire   [0:0] and_ln786_2161_fu_7658_p2;
wire   [0:0] and_ln785_786_fu_7634_p2;
wire   [0:0] or_ln340_2950_fu_7669_p2;
wire   [0:0] or_ln340_37_fu_7663_p2;
wire   [0:0] or_ln340_2951_fu_7675_p2;
wire   [23:0] select_ln340_37_fu_7681_p3;
wire   [23:0] select_ln388_37_fu_7689_p3;
wire   [23:0] zext_ln415_802_fu_7712_p1;
wire   [23:0] add_ln415_802_fu_7715_p2;
wire   [0:0] tmp_6169_fu_7720_p3;
wire   [0:0] tmp_6167_fu_7705_p3;
wire   [0:0] xor_ln416_787_fu_7728_p2;
wire   [0:0] and_ln416_787_fu_7734_p2;
wire   [0:0] xor_ln779_38_fu_7748_p2;
wire   [0:0] tmp_6170_fu_7740_p3;
wire   [0:0] xor_ln785_38_fu_7760_p2;
wire   [0:0] or_ln785_38_fu_7765_p2;
wire   [0:0] select_ln416_787_fu_7753_p3;
wire   [0:0] and_ln786_38_fu_7777_p2;
wire   [0:0] or_ln786_787_fu_7783_p2;
wire   [0:0] xor_ln786_1482_fu_7789_p2;
wire   [0:0] and_ln786_2163_fu_7795_p2;
wire   [0:0] and_ln785_787_fu_7771_p2;
wire   [0:0] or_ln340_2953_fu_7806_p2;
wire   [0:0] or_ln340_38_fu_7800_p2;
wire   [0:0] or_ln340_2954_fu_7812_p2;
wire   [23:0] select_ln340_38_fu_7818_p3;
wire   [23:0] select_ln388_38_fu_7826_p3;
wire  signed [23:0] sext_ln708_fu_7842_p1;
wire   [23:0] zext_ln415_803_fu_7852_p1;
wire   [23:0] add_ln415_803_fu_7855_p2;
wire   [0:0] tmp_6176_fu_7861_p3;
wire   [0:0] tmp_6174_fu_7845_p3;
wire   [0:0] xor_ln416_788_fu_7869_p2;
wire   [0:0] and_ln416_788_fu_7875_p2;
wire   [0:0] xor_ln779_39_fu_7889_p2;
wire   [0:0] tmp_6177_fu_7881_p3;
wire   [0:0] xor_ln785_39_fu_7901_p2;
wire   [0:0] or_ln785_39_fu_7906_p2;
wire   [0:0] select_ln416_788_fu_7894_p3;
wire   [0:0] and_ln786_39_fu_7918_p2;
wire   [0:0] or_ln786_788_fu_7924_p2;
wire   [0:0] xor_ln786_1483_fu_7930_p2;
wire   [0:0] and_ln786_2165_fu_7936_p2;
wire   [0:0] and_ln785_788_fu_7912_p2;
wire   [0:0] or_ln340_2956_fu_7947_p2;
wire   [0:0] or_ln340_39_fu_7941_p2;
wire   [0:0] or_ln340_2957_fu_7953_p2;
wire   [23:0] select_ln340_39_fu_7959_p3;
wire   [23:0] select_ln388_39_fu_7967_p3;
wire  signed [24:0] sext_ln703_fu_7983_p1;
wire  signed [24:0] sext_ln703_1541_fu_7987_p1;
wire   [24:0] add_ln1192_fu_7990_p2;
wire   [23:0] acc_0_V_fu_8004_p2;
wire   [0:0] tmp_5906_fu_8009_p3;
wire   [0:0] tmp_5905_fu_7996_p3;
wire   [0:0] xor_ln786_1287_fu_8017_p2;
wire   [0:0] xor_ln340_fu_8035_p2;
wire   [0:0] xor_ln340_1288_fu_8029_p2;
wire   [0:0] and_ln786_2088_fu_8023_p2;
wire   [0:0] or_ln340_2841_fu_8041_p2;
wire   [23:0] select_ln340_1311_fu_8047_p3;
wire   [23:0] acc_0_V_146_fu_8055_p3;
wire  signed [23:0] select_ln340_2577_fu_8063_p3;
wire  signed [24:0] sext_ln703_1542_fu_8071_p1;
wire  signed [24:0] sext_ln703_1543_fu_8075_p1;
wire   [24:0] add_ln1192_773_fu_8078_p2;
wire   [23:0] acc_0_V_147_fu_8092_p2;
wire   [0:0] tmp_5913_fu_8097_p3;
wire   [0:0] tmp_5912_fu_8084_p3;
wire   [0:0] xor_ln786_1288_fu_8105_p2;
wire   [0:0] xor_ln340_797_fu_8123_p2;
wire   [0:0] xor_ln340_1289_fu_8117_p2;
wire   [0:0] and_ln786_2090_fu_8111_p2;
wire   [0:0] or_ln340_2844_fu_8129_p2;
wire   [23:0] select_ln340_1312_fu_8135_p3;
wire   [23:0] acc_0_V_148_fu_8143_p3;
wire  signed [23:0] select_ln340_2579_fu_8151_p3;
wire  signed [24:0] sext_ln703_1544_fu_8159_p1;
wire  signed [24:0] sext_ln703_1545_fu_8163_p1;
wire   [24:0] add_ln1192_774_fu_8166_p2;
wire   [23:0] acc_0_V_149_fu_8180_p2;
wire   [0:0] tmp_5920_fu_8185_p3;
wire   [0:0] tmp_5919_fu_8172_p3;
wire   [0:0] xor_ln786_1289_fu_8193_p2;
wire   [0:0] xor_ln340_798_fu_8211_p2;
wire   [0:0] xor_ln340_1290_fu_8205_p2;
wire   [0:0] and_ln786_2092_fu_8199_p2;
wire   [0:0] or_ln340_2847_fu_8217_p2;
wire   [23:0] select_ln340_1313_fu_8223_p3;
wire   [23:0] acc_0_V_150_fu_8231_p3;
wire  signed [23:0] select_ln340_2581_fu_8239_p3;
wire  signed [24:0] sext_ln703_1546_fu_8247_p1;
wire  signed [24:0] sext_ln703_1547_fu_8251_p1;
wire   [24:0] add_ln1192_775_fu_8254_p2;
wire   [23:0] acc_0_V_151_fu_8268_p2;
wire   [0:0] tmp_5927_fu_8273_p3;
wire   [0:0] tmp_5926_fu_8260_p3;
wire   [0:0] xor_ln786_1290_fu_8281_p2;
wire   [0:0] xor_ln340_799_fu_8299_p2;
wire   [0:0] xor_ln340_1291_fu_8293_p2;
wire   [0:0] and_ln786_2094_fu_8287_p2;
wire   [0:0] or_ln340_2850_fu_8305_p2;
wire   [23:0] select_ln340_1314_fu_8311_p3;
wire   [23:0] acc_0_V_152_fu_8319_p3;
wire  signed [23:0] select_ln340_2583_fu_8327_p3;
wire  signed [24:0] sext_ln703_1548_fu_8335_p1;
wire  signed [24:0] sext_ln703_1549_fu_8339_p1;
wire   [24:0] add_ln1192_776_fu_8342_p2;
wire   [23:0] acc_0_V_153_fu_8356_p2;
wire   [0:0] tmp_5934_fu_8361_p3;
wire   [0:0] tmp_5933_fu_8348_p3;
wire   [0:0] xor_ln786_1291_fu_8369_p2;
wire   [0:0] xor_ln340_800_fu_8387_p2;
wire   [0:0] xor_ln340_1292_fu_8381_p2;
wire   [0:0] and_ln786_2096_fu_8375_p2;
wire   [0:0] or_ln340_2853_fu_8393_p2;
wire   [23:0] select_ln340_1315_fu_8399_p3;
wire   [23:0] acc_0_V_154_fu_8407_p3;
wire  signed [23:0] select_ln340_2585_fu_8415_p3;
wire  signed [24:0] sext_ln703_1550_fu_8423_p1;
wire  signed [24:0] sext_ln703_1551_fu_8427_p1;
wire   [24:0] add_ln1192_777_fu_8430_p2;
wire   [23:0] acc_0_V_155_fu_8444_p2;
wire   [0:0] tmp_5941_fu_8449_p3;
wire   [0:0] tmp_5940_fu_8436_p3;
wire   [0:0] xor_ln786_1292_fu_8457_p2;
wire   [0:0] xor_ln340_801_fu_8475_p2;
wire   [0:0] xor_ln340_1293_fu_8469_p2;
wire   [0:0] and_ln786_2098_fu_8463_p2;
wire   [0:0] or_ln340_2856_fu_8481_p2;
wire   [23:0] select_ln340_1316_fu_8487_p3;
wire   [23:0] acc_0_V_156_fu_8495_p3;
wire  signed [23:0] select_ln340_2587_fu_8503_p3;
wire  signed [24:0] sext_ln703_1552_fu_8511_p1;
wire  signed [24:0] sext_ln703_1553_fu_8515_p1;
wire   [24:0] add_ln1192_778_fu_8518_p2;
wire   [23:0] acc_0_V_157_fu_8532_p2;
wire   [0:0] tmp_5948_fu_8537_p3;
wire   [0:0] tmp_5947_fu_8524_p3;
wire   [0:0] xor_ln786_1293_fu_8545_p2;
wire   [0:0] xor_ln340_802_fu_8563_p2;
wire   [0:0] xor_ln340_1294_fu_8557_p2;
wire   [0:0] and_ln786_2100_fu_8551_p2;
wire   [0:0] or_ln340_2859_fu_8569_p2;
wire   [23:0] select_ln340_1317_fu_8575_p3;
wire   [23:0] acc_0_V_158_fu_8583_p3;
wire  signed [23:0] select_ln340_2589_fu_8591_p3;
wire  signed [24:0] sext_ln703_1554_fu_8599_p1;
wire  signed [24:0] sext_ln703_1555_fu_8603_p1;
wire   [24:0] add_ln1192_779_fu_8606_p2;
wire   [23:0] acc_0_V_159_fu_8620_p2;
wire   [0:0] tmp_5955_fu_8625_p3;
wire   [0:0] tmp_5954_fu_8612_p3;
wire   [0:0] xor_ln786_1294_fu_8633_p2;
wire   [0:0] xor_ln340_803_fu_8651_p2;
wire   [0:0] xor_ln340_1295_fu_8645_p2;
wire   [0:0] and_ln786_2102_fu_8639_p2;
wire   [0:0] or_ln340_2862_fu_8657_p2;
wire   [23:0] select_ln340_1318_fu_8663_p3;
wire   [23:0] acc_0_V_160_fu_8671_p3;
wire  signed [23:0] select_ln340_2591_fu_8679_p3;
wire  signed [24:0] sext_ln703_1556_fu_8687_p1;
wire  signed [24:0] sext_ln703_1557_fu_8691_p1;
wire   [24:0] add_ln1192_780_fu_8694_p2;
wire   [23:0] acc_0_V_161_fu_8708_p2;
wire   [0:0] tmp_5962_fu_8713_p3;
wire   [0:0] tmp_5961_fu_8700_p3;
wire   [0:0] xor_ln786_1295_fu_8721_p2;
wire   [0:0] xor_ln340_804_fu_8739_p2;
wire   [0:0] xor_ln340_1296_fu_8733_p2;
wire   [0:0] and_ln786_2104_fu_8727_p2;
wire   [0:0] or_ln340_2865_fu_8745_p2;
wire   [23:0] select_ln340_1319_fu_8751_p3;
wire   [23:0] acc_0_V_162_fu_8759_p3;
wire  signed [23:0] select_ln340_2593_fu_8767_p3;
wire  signed [24:0] sext_ln703_1558_fu_8775_p1;
wire  signed [24:0] sext_ln703_1559_fu_8779_p1;
wire   [24:0] add_ln1192_781_fu_8782_p2;
wire   [23:0] acc_0_V_163_fu_8796_p2;
wire   [0:0] tmp_5969_fu_8801_p3;
wire   [0:0] tmp_5968_fu_8788_p3;
wire   [0:0] xor_ln786_1296_fu_8809_p2;
wire   [0:0] xor_ln340_805_fu_8827_p2;
wire   [0:0] xor_ln340_1297_fu_8821_p2;
wire   [0:0] and_ln786_2106_fu_8815_p2;
wire   [0:0] or_ln340_2868_fu_8833_p2;
wire   [23:0] select_ln340_1320_fu_8839_p3;
wire   [23:0] acc_0_V_164_fu_8847_p3;
wire  signed [24:0] sext_ln703_1560_fu_8863_p1;
wire  signed [24:0] sext_ln703_1561_fu_8867_p1;
wire   [24:0] add_ln1192_782_fu_8870_p2;
wire   [23:0] acc_1_V_fu_8884_p2;
wire   [0:0] tmp_5976_fu_8889_p3;
wire   [0:0] tmp_5975_fu_8876_p3;
wire   [0:0] xor_ln786_1297_fu_8897_p2;
wire   [0:0] xor_ln340_806_fu_8915_p2;
wire   [0:0] xor_ln340_1298_fu_8909_p2;
wire   [0:0] and_ln786_2108_fu_8903_p2;
wire   [0:0] or_ln340_2871_fu_8921_p2;
wire   [23:0] select_ln340_1321_fu_8927_p3;
wire   [23:0] acc_1_V_146_fu_8935_p3;
wire  signed [23:0] select_ln340_2597_fu_8943_p3;
wire  signed [24:0] sext_ln703_1562_fu_8951_p1;
wire  signed [24:0] sext_ln703_1563_fu_8955_p1;
wire   [24:0] add_ln1192_783_fu_8958_p2;
wire   [23:0] acc_1_V_147_fu_8972_p2;
wire   [0:0] tmp_5983_fu_8977_p3;
wire   [0:0] tmp_5982_fu_8964_p3;
wire   [0:0] xor_ln786_1298_fu_8985_p2;
wire   [0:0] xor_ln340_807_fu_9003_p2;
wire   [0:0] xor_ln340_1299_fu_8997_p2;
wire   [0:0] and_ln786_2110_fu_8991_p2;
wire   [0:0] or_ln340_2874_fu_9009_p2;
wire   [23:0] select_ln340_1322_fu_9015_p3;
wire   [23:0] acc_1_V_148_fu_9023_p3;
wire  signed [23:0] select_ln340_2599_fu_9031_p3;
wire  signed [24:0] sext_ln703_1564_fu_9039_p1;
wire  signed [24:0] sext_ln703_1565_fu_9043_p1;
wire   [24:0] add_ln1192_784_fu_9046_p2;
wire   [23:0] acc_1_V_149_fu_9060_p2;
wire   [0:0] tmp_5990_fu_9065_p3;
wire   [0:0] tmp_5989_fu_9052_p3;
wire   [0:0] xor_ln786_1299_fu_9073_p2;
wire   [0:0] xor_ln340_808_fu_9091_p2;
wire   [0:0] xor_ln340_1300_fu_9085_p2;
wire   [0:0] and_ln786_2112_fu_9079_p2;
wire   [0:0] or_ln340_2877_fu_9097_p2;
wire   [23:0] select_ln340_1323_fu_9103_p3;
wire   [23:0] acc_1_V_150_fu_9111_p3;
wire  signed [23:0] select_ln340_2601_fu_9119_p3;
wire  signed [24:0] sext_ln703_1566_fu_9127_p1;
wire  signed [24:0] sext_ln703_1567_fu_9131_p1;
wire   [24:0] add_ln1192_785_fu_9134_p2;
wire   [23:0] acc_1_V_151_fu_9148_p2;
wire   [0:0] tmp_5997_fu_9153_p3;
wire   [0:0] tmp_5996_fu_9140_p3;
wire   [0:0] xor_ln786_1300_fu_9161_p2;
wire   [0:0] xor_ln340_809_fu_9179_p2;
wire   [0:0] xor_ln340_1301_fu_9173_p2;
wire   [0:0] and_ln786_2114_fu_9167_p2;
wire   [0:0] or_ln340_2880_fu_9185_p2;
wire   [23:0] select_ln340_1324_fu_9191_p3;
wire   [23:0] acc_1_V_152_fu_9199_p3;
wire  signed [23:0] select_ln340_2603_fu_9207_p3;
wire  signed [24:0] sext_ln703_1568_fu_9215_p1;
wire  signed [24:0] sext_ln703_1569_fu_9219_p1;
wire   [24:0] add_ln1192_786_fu_9222_p2;
wire   [23:0] acc_1_V_153_fu_9236_p2;
wire   [0:0] tmp_6004_fu_9241_p3;
wire   [0:0] tmp_6003_fu_9228_p3;
wire   [0:0] xor_ln786_1301_fu_9249_p2;
wire   [0:0] xor_ln340_810_fu_9267_p2;
wire   [0:0] xor_ln340_1302_fu_9261_p2;
wire   [0:0] and_ln786_2116_fu_9255_p2;
wire   [0:0] or_ln340_2883_fu_9273_p2;
wire   [23:0] select_ln340_1325_fu_9279_p3;
wire   [23:0] acc_1_V_154_fu_9287_p3;
wire  signed [23:0] select_ln340_2605_fu_9295_p3;
wire  signed [24:0] sext_ln703_1570_fu_9303_p1;
wire  signed [24:0] sext_ln703_1571_fu_9307_p1;
wire   [24:0] add_ln1192_787_fu_9310_p2;
wire   [23:0] acc_1_V_155_fu_9324_p2;
wire   [0:0] tmp_6011_fu_9329_p3;
wire   [0:0] tmp_6010_fu_9316_p3;
wire   [0:0] xor_ln786_1302_fu_9337_p2;
wire   [0:0] xor_ln340_811_fu_9355_p2;
wire   [0:0] xor_ln340_1303_fu_9349_p2;
wire   [0:0] and_ln786_2118_fu_9343_p2;
wire   [0:0] or_ln340_2886_fu_9361_p2;
wire   [23:0] select_ln340_1326_fu_9367_p3;
wire   [23:0] acc_1_V_156_fu_9375_p3;
wire  signed [23:0] select_ln340_2607_fu_9383_p3;
wire  signed [24:0] sext_ln703_1572_fu_9391_p1;
wire  signed [24:0] sext_ln703_1573_fu_9395_p1;
wire   [24:0] add_ln1192_788_fu_9398_p2;
wire   [23:0] acc_1_V_157_fu_9412_p2;
wire   [0:0] tmp_6018_fu_9417_p3;
wire   [0:0] tmp_6017_fu_9404_p3;
wire   [0:0] xor_ln786_1303_fu_9425_p2;
wire   [0:0] xor_ln340_812_fu_9443_p2;
wire   [0:0] xor_ln340_1304_fu_9437_p2;
wire   [0:0] and_ln786_2120_fu_9431_p2;
wire   [0:0] or_ln340_2889_fu_9449_p2;
wire   [23:0] select_ln340_1327_fu_9455_p3;
wire   [23:0] acc_1_V_158_fu_9463_p3;
wire  signed [23:0] select_ln340_2609_fu_9471_p3;
wire  signed [24:0] sext_ln703_1574_fu_9479_p1;
wire  signed [24:0] sext_ln703_1575_fu_9483_p1;
wire   [24:0] add_ln1192_789_fu_9486_p2;
wire   [23:0] acc_1_V_159_fu_9500_p2;
wire   [0:0] tmp_6025_fu_9505_p3;
wire   [0:0] tmp_6024_fu_9492_p3;
wire   [0:0] xor_ln786_1304_fu_9513_p2;
wire   [0:0] xor_ln340_813_fu_9531_p2;
wire   [0:0] xor_ln340_1305_fu_9525_p2;
wire   [0:0] and_ln786_2122_fu_9519_p2;
wire   [0:0] or_ln340_2892_fu_9537_p2;
wire   [23:0] select_ln340_1328_fu_9543_p3;
wire   [23:0] acc_1_V_160_fu_9551_p3;
wire  signed [23:0] select_ln340_2611_fu_9559_p3;
wire  signed [24:0] sext_ln703_1576_fu_9567_p1;
wire  signed [24:0] sext_ln703_1577_fu_9571_p1;
wire   [24:0] add_ln1192_790_fu_9574_p2;
wire   [23:0] acc_1_V_161_fu_9588_p2;
wire   [0:0] tmp_6032_fu_9593_p3;
wire   [0:0] tmp_6031_fu_9580_p3;
wire   [0:0] xor_ln786_1305_fu_9601_p2;
wire   [0:0] xor_ln340_814_fu_9619_p2;
wire   [0:0] xor_ln340_1306_fu_9613_p2;
wire   [0:0] and_ln786_2124_fu_9607_p2;
wire   [0:0] or_ln340_2895_fu_9625_p2;
wire   [23:0] select_ln340_1329_fu_9631_p3;
wire   [23:0] acc_1_V_162_fu_9639_p3;
wire  signed [23:0] select_ln340_2613_fu_9647_p3;
wire  signed [24:0] sext_ln703_1578_fu_9655_p1;
wire  signed [24:0] sext_ln703_1579_fu_9659_p1;
wire   [24:0] add_ln1192_791_fu_9662_p2;
wire   [23:0] acc_1_V_163_fu_9676_p2;
wire   [0:0] tmp_6039_fu_9681_p3;
wire   [0:0] tmp_6038_fu_9668_p3;
wire   [0:0] xor_ln786_1306_fu_9689_p2;
wire   [0:0] xor_ln340_815_fu_9707_p2;
wire   [0:0] xor_ln340_1307_fu_9701_p2;
wire   [0:0] and_ln786_2126_fu_9695_p2;
wire   [0:0] or_ln340_2898_fu_9713_p2;
wire   [23:0] select_ln340_1330_fu_9719_p3;
wire   [23:0] acc_1_V_164_fu_9727_p3;
wire  signed [24:0] sext_ln703_1580_fu_9743_p1;
wire  signed [24:0] sext_ln703_1581_fu_9747_p1;
wire   [24:0] add_ln1192_792_fu_9750_p2;
wire   [23:0] acc_2_V_fu_9764_p2;
wire   [0:0] tmp_6046_fu_9769_p3;
wire   [0:0] tmp_6045_fu_9756_p3;
wire   [0:0] xor_ln786_1307_fu_9777_p2;
wire   [0:0] xor_ln340_816_fu_9795_p2;
wire   [0:0] xor_ln340_1308_fu_9789_p2;
wire   [0:0] and_ln786_2128_fu_9783_p2;
wire   [0:0] or_ln340_2901_fu_9801_p2;
wire   [23:0] select_ln340_1331_fu_9807_p3;
wire   [23:0] acc_2_V_146_fu_9815_p3;
wire  signed [23:0] select_ln340_2617_fu_9823_p3;
wire  signed [24:0] sext_ln703_1582_fu_9831_p1;
wire  signed [24:0] sext_ln703_1583_fu_9835_p1;
wire   [24:0] add_ln1192_793_fu_9838_p2;
wire   [23:0] acc_2_V_147_fu_9852_p2;
wire   [0:0] tmp_6053_fu_9857_p3;
wire   [0:0] tmp_6052_fu_9844_p3;
wire   [0:0] xor_ln786_1308_fu_9865_p2;
wire   [0:0] xor_ln340_817_fu_9883_p2;
wire   [0:0] xor_ln340_1309_fu_9877_p2;
wire   [0:0] and_ln786_2130_fu_9871_p2;
wire   [0:0] or_ln340_2904_fu_9889_p2;
wire   [23:0] select_ln340_1332_fu_9895_p3;
wire   [23:0] acc_2_V_148_fu_9903_p3;
wire  signed [23:0] select_ln340_2619_fu_9911_p3;
wire  signed [24:0] sext_ln703_1584_fu_9919_p1;
wire  signed [24:0] sext_ln703_1585_fu_9923_p1;
wire   [24:0] add_ln1192_794_fu_9926_p2;
wire   [23:0] acc_2_V_149_fu_9940_p2;
wire   [0:0] tmp_6060_fu_9945_p3;
wire   [0:0] tmp_6059_fu_9932_p3;
wire   [0:0] xor_ln786_1309_fu_9953_p2;
wire   [0:0] xor_ln340_818_fu_9971_p2;
wire   [0:0] xor_ln340_1310_fu_9965_p2;
wire   [0:0] and_ln786_2132_fu_9959_p2;
wire   [0:0] or_ln340_2907_fu_9977_p2;
wire   [23:0] select_ln340_1333_fu_9983_p3;
wire   [23:0] acc_2_V_150_fu_9991_p3;
wire  signed [23:0] select_ln340_2621_fu_9999_p3;
wire  signed [24:0] sext_ln703_1586_fu_10007_p1;
wire  signed [24:0] sext_ln703_1587_fu_10011_p1;
wire   [24:0] add_ln1192_795_fu_10014_p2;
wire   [23:0] acc_2_V_151_fu_10028_p2;
wire   [0:0] tmp_6067_fu_10033_p3;
wire   [0:0] tmp_6066_fu_10020_p3;
wire   [0:0] xor_ln786_1310_fu_10041_p2;
wire   [0:0] xor_ln340_819_fu_10059_p2;
wire   [0:0] xor_ln340_1311_fu_10053_p2;
wire   [0:0] and_ln786_2134_fu_10047_p2;
wire   [0:0] or_ln340_2910_fu_10065_p2;
wire   [23:0] select_ln340_1334_fu_10071_p3;
wire   [23:0] acc_2_V_152_fu_10079_p3;
wire  signed [23:0] select_ln340_2623_fu_10087_p3;
wire  signed [24:0] sext_ln703_1588_fu_10095_p1;
wire  signed [24:0] sext_ln703_1589_fu_10099_p1;
wire   [24:0] add_ln1192_796_fu_10102_p2;
wire   [23:0] acc_2_V_153_fu_10116_p2;
wire   [0:0] tmp_6074_fu_10121_p3;
wire   [0:0] tmp_6073_fu_10108_p3;
wire   [0:0] xor_ln786_1311_fu_10129_p2;
wire   [0:0] xor_ln340_820_fu_10147_p2;
wire   [0:0] xor_ln340_1312_fu_10141_p2;
wire   [0:0] and_ln786_2136_fu_10135_p2;
wire   [0:0] or_ln340_2913_fu_10153_p2;
wire   [23:0] select_ln340_1335_fu_10159_p3;
wire   [23:0] acc_2_V_154_fu_10167_p3;
wire  signed [23:0] select_ln340_2625_fu_10175_p3;
wire  signed [24:0] sext_ln703_1590_fu_10183_p1;
wire  signed [24:0] sext_ln703_1591_fu_10187_p1;
wire   [24:0] add_ln1192_797_fu_10190_p2;
wire   [23:0] acc_2_V_155_fu_10204_p2;
wire   [0:0] tmp_6081_fu_10209_p3;
wire   [0:0] tmp_6080_fu_10196_p3;
wire   [0:0] xor_ln786_1312_fu_10217_p2;
wire   [0:0] xor_ln340_821_fu_10235_p2;
wire   [0:0] xor_ln340_1313_fu_10229_p2;
wire   [0:0] and_ln786_2138_fu_10223_p2;
wire   [0:0] or_ln340_2916_fu_10241_p2;
wire   [23:0] select_ln340_1336_fu_10247_p3;
wire   [23:0] acc_2_V_156_fu_10255_p3;
wire  signed [23:0] select_ln340_2627_fu_10263_p3;
wire  signed [24:0] sext_ln703_1592_fu_10271_p1;
wire  signed [24:0] sext_ln703_1593_fu_10275_p1;
wire   [24:0] add_ln1192_798_fu_10278_p2;
wire   [23:0] acc_2_V_157_fu_10292_p2;
wire   [0:0] tmp_6088_fu_10297_p3;
wire   [0:0] tmp_6087_fu_10284_p3;
wire   [0:0] xor_ln786_1313_fu_10305_p2;
wire   [0:0] xor_ln340_822_fu_10323_p2;
wire   [0:0] xor_ln340_1314_fu_10317_p2;
wire   [0:0] and_ln786_2140_fu_10311_p2;
wire   [0:0] or_ln340_2919_fu_10329_p2;
wire   [23:0] select_ln340_1337_fu_10335_p3;
wire   [23:0] acc_2_V_158_fu_10343_p3;
wire  signed [23:0] select_ln340_2629_fu_10351_p3;
wire  signed [24:0] sext_ln703_1594_fu_10359_p1;
wire  signed [24:0] sext_ln703_1595_fu_10363_p1;
wire   [24:0] add_ln1192_799_fu_10366_p2;
wire   [23:0] acc_2_V_159_fu_10380_p2;
wire   [0:0] tmp_6095_fu_10385_p3;
wire   [0:0] tmp_6094_fu_10372_p3;
wire   [0:0] xor_ln786_1314_fu_10393_p2;
wire   [0:0] xor_ln340_823_fu_10411_p2;
wire   [0:0] xor_ln340_1315_fu_10405_p2;
wire   [0:0] and_ln786_2142_fu_10399_p2;
wire   [0:0] or_ln340_2922_fu_10417_p2;
wire   [23:0] select_ln340_1338_fu_10423_p3;
wire   [23:0] acc_2_V_160_fu_10431_p3;
wire  signed [23:0] select_ln340_2631_fu_10439_p3;
wire  signed [24:0] sext_ln703_1596_fu_10447_p1;
wire  signed [24:0] sext_ln703_1597_fu_10451_p1;
wire   [24:0] add_ln1192_800_fu_10454_p2;
wire   [23:0] acc_2_V_161_fu_10468_p2;
wire   [0:0] tmp_6102_fu_10473_p3;
wire   [0:0] tmp_6101_fu_10460_p3;
wire   [0:0] xor_ln786_1315_fu_10481_p2;
wire   [0:0] xor_ln340_824_fu_10499_p2;
wire   [0:0] xor_ln340_1316_fu_10493_p2;
wire   [0:0] and_ln786_2144_fu_10487_p2;
wire   [0:0] or_ln340_2925_fu_10505_p2;
wire   [23:0] select_ln340_1339_fu_10511_p3;
wire   [23:0] acc_2_V_162_fu_10519_p3;
wire  signed [23:0] select_ln340_2633_fu_10527_p3;
wire  signed [24:0] sext_ln703_1598_fu_10535_p1;
wire  signed [24:0] sext_ln703_1599_fu_10539_p1;
wire   [24:0] add_ln1192_801_fu_10542_p2;
wire   [23:0] acc_2_V_163_fu_10556_p2;
wire   [0:0] tmp_6109_fu_10561_p3;
wire   [0:0] tmp_6108_fu_10548_p3;
wire   [0:0] xor_ln786_1316_fu_10569_p2;
wire   [0:0] xor_ln340_825_fu_10587_p2;
wire   [0:0] xor_ln340_1317_fu_10581_p2;
wire   [0:0] and_ln786_2146_fu_10575_p2;
wire   [0:0] or_ln340_2928_fu_10593_p2;
wire   [23:0] select_ln340_1340_fu_10599_p3;
wire   [23:0] acc_2_V_164_fu_10607_p3;
wire  signed [24:0] sext_ln703_1600_fu_10623_p1;
wire  signed [24:0] sext_ln703_1601_fu_10627_p1;
wire   [24:0] add_ln1192_802_fu_10630_p2;
wire   [23:0] acc_3_V_fu_10644_p2;
wire   [0:0] tmp_6116_fu_10649_p3;
wire   [0:0] tmp_6115_fu_10636_p3;
wire   [0:0] xor_ln786_1317_fu_10657_p2;
wire   [0:0] xor_ln340_826_fu_10675_p2;
wire   [0:0] xor_ln340_1318_fu_10669_p2;
wire   [0:0] and_ln786_2148_fu_10663_p2;
wire   [0:0] or_ln340_2931_fu_10681_p2;
wire   [23:0] select_ln340_1341_fu_10687_p3;
wire   [23:0] acc_3_V_146_fu_10695_p3;
wire  signed [23:0] select_ln340_2637_fu_10703_p3;
wire  signed [24:0] sext_ln703_1602_fu_10711_p1;
wire  signed [24:0] sext_ln703_1603_fu_10715_p1;
wire   [24:0] add_ln1192_803_fu_10718_p2;
wire   [23:0] acc_3_V_147_fu_10732_p2;
wire   [0:0] tmp_6123_fu_10737_p3;
wire   [0:0] tmp_6122_fu_10724_p3;
wire   [0:0] xor_ln786_1318_fu_10745_p2;
wire   [0:0] xor_ln340_827_fu_10763_p2;
wire   [0:0] xor_ln340_1319_fu_10757_p2;
wire   [0:0] and_ln786_2150_fu_10751_p2;
wire   [0:0] or_ln340_2934_fu_10769_p2;
wire   [23:0] select_ln340_1342_fu_10775_p3;
wire   [23:0] acc_3_V_148_fu_10783_p3;
wire  signed [23:0] select_ln340_2639_fu_10791_p3;
wire  signed [24:0] sext_ln703_1604_fu_10799_p1;
wire  signed [24:0] sext_ln703_1605_fu_10803_p1;
wire   [24:0] add_ln1192_804_fu_10806_p2;
wire   [23:0] acc_3_V_149_fu_10820_p2;
wire   [0:0] tmp_6130_fu_10825_p3;
wire   [0:0] tmp_6129_fu_10812_p3;
wire   [0:0] xor_ln786_1319_fu_10833_p2;
wire   [0:0] xor_ln340_828_fu_10851_p2;
wire   [0:0] xor_ln340_1320_fu_10845_p2;
wire   [0:0] and_ln786_2152_fu_10839_p2;
wire   [0:0] or_ln340_2937_fu_10857_p2;
wire   [23:0] select_ln340_1343_fu_10863_p3;
wire   [23:0] acc_3_V_150_fu_10871_p3;
wire  signed [23:0] select_ln340_2641_fu_10879_p3;
wire  signed [24:0] sext_ln703_1606_fu_10887_p1;
wire  signed [24:0] sext_ln703_1607_fu_10891_p1;
wire   [24:0] add_ln1192_805_fu_10894_p2;
wire   [23:0] acc_3_V_151_fu_10908_p2;
wire   [0:0] tmp_6137_fu_10913_p3;
wire   [0:0] tmp_6136_fu_10900_p3;
wire   [0:0] xor_ln786_1320_fu_10921_p2;
wire   [0:0] xor_ln340_829_fu_10939_p2;
wire   [0:0] xor_ln340_1321_fu_10933_p2;
wire   [0:0] and_ln786_2154_fu_10927_p2;
wire   [0:0] or_ln340_2940_fu_10945_p2;
wire   [23:0] select_ln340_1344_fu_10951_p3;
wire   [23:0] acc_3_V_152_fu_10959_p3;
wire  signed [23:0] select_ln340_2643_fu_10967_p3;
wire  signed [24:0] sext_ln703_1608_fu_10975_p1;
wire  signed [24:0] sext_ln703_1609_fu_10979_p1;
wire   [24:0] add_ln1192_806_fu_10982_p2;
wire   [23:0] acc_3_V_153_fu_10996_p2;
wire   [0:0] tmp_6144_fu_11001_p3;
wire   [0:0] tmp_6143_fu_10988_p3;
wire   [0:0] xor_ln786_1321_fu_11009_p2;
wire   [0:0] xor_ln340_830_fu_11027_p2;
wire   [0:0] xor_ln340_1322_fu_11021_p2;
wire   [0:0] and_ln786_2156_fu_11015_p2;
wire   [0:0] or_ln340_2943_fu_11033_p2;
wire   [23:0] select_ln340_1345_fu_11039_p3;
wire   [23:0] acc_3_V_154_fu_11047_p3;
wire  signed [23:0] select_ln340_2645_fu_11055_p3;
wire  signed [24:0] sext_ln703_1610_fu_11063_p1;
wire  signed [24:0] sext_ln703_1611_fu_11067_p1;
wire   [24:0] add_ln1192_807_fu_11070_p2;
wire   [23:0] acc_3_V_155_fu_11084_p2;
wire   [0:0] tmp_6151_fu_11089_p3;
wire   [0:0] tmp_6150_fu_11076_p3;
wire   [0:0] xor_ln786_1322_fu_11097_p2;
wire   [0:0] xor_ln340_831_fu_11115_p2;
wire   [0:0] xor_ln340_1323_fu_11109_p2;
wire   [0:0] and_ln786_2158_fu_11103_p2;
wire   [0:0] or_ln340_2946_fu_11121_p2;
wire   [23:0] select_ln340_1346_fu_11127_p3;
wire   [23:0] acc_3_V_156_fu_11135_p3;
wire  signed [23:0] select_ln340_2647_fu_11143_p3;
wire  signed [24:0] sext_ln703_1612_fu_11151_p1;
wire  signed [24:0] sext_ln703_1613_fu_11155_p1;
wire   [24:0] add_ln1192_808_fu_11158_p2;
wire   [23:0] acc_3_V_157_fu_11172_p2;
wire   [0:0] tmp_6158_fu_11177_p3;
wire   [0:0] tmp_6157_fu_11164_p3;
wire   [0:0] xor_ln786_1323_fu_11185_p2;
wire   [0:0] xor_ln340_832_fu_11203_p2;
wire   [0:0] xor_ln340_1324_fu_11197_p2;
wire   [0:0] and_ln786_2160_fu_11191_p2;
wire   [0:0] or_ln340_2949_fu_11209_p2;
wire   [23:0] select_ln340_1347_fu_11215_p3;
wire   [23:0] acc_3_V_158_fu_11223_p3;
wire  signed [23:0] select_ln340_2649_fu_11231_p3;
wire  signed [24:0] sext_ln703_1614_fu_11239_p1;
wire  signed [24:0] sext_ln703_1615_fu_11243_p1;
wire   [24:0] add_ln1192_809_fu_11246_p2;
wire   [23:0] acc_3_V_159_fu_11260_p2;
wire   [0:0] tmp_6165_fu_11265_p3;
wire   [0:0] tmp_6164_fu_11252_p3;
wire   [0:0] xor_ln786_1324_fu_11273_p2;
wire   [0:0] xor_ln340_833_fu_11291_p2;
wire   [0:0] xor_ln340_1325_fu_11285_p2;
wire   [0:0] and_ln786_2162_fu_11279_p2;
wire   [0:0] or_ln340_2952_fu_11297_p2;
wire   [23:0] select_ln340_1348_fu_11303_p3;
wire   [23:0] acc_3_V_160_fu_11311_p3;
wire  signed [23:0] select_ln340_2651_fu_11319_p3;
wire  signed [24:0] sext_ln703_1616_fu_11327_p1;
wire  signed [24:0] sext_ln703_1617_fu_11331_p1;
wire   [24:0] add_ln1192_810_fu_11334_p2;
wire   [23:0] acc_3_V_161_fu_11348_p2;
wire   [0:0] tmp_6172_fu_11353_p3;
wire   [0:0] tmp_6171_fu_11340_p3;
wire   [0:0] xor_ln786_1325_fu_11361_p2;
wire   [0:0] xor_ln340_834_fu_11379_p2;
wire   [0:0] xor_ln340_1326_fu_11373_p2;
wire   [0:0] and_ln786_2164_fu_11367_p2;
wire   [0:0] or_ln340_2955_fu_11385_p2;
wire   [23:0] select_ln340_1349_fu_11391_p3;
wire   [23:0] acc_3_V_162_fu_11399_p3;
wire  signed [23:0] select_ln340_2653_fu_11407_p3;
wire  signed [24:0] sext_ln703_1618_fu_11415_p1;
wire  signed [24:0] sext_ln703_1619_fu_11419_p1;
wire   [24:0] add_ln1192_811_fu_11422_p2;
wire   [23:0] acc_3_V_163_fu_11436_p2;
wire   [0:0] tmp_6179_fu_11441_p3;
wire   [0:0] tmp_6178_fu_11428_p3;
wire   [0:0] xor_ln786_1326_fu_11449_p2;
wire   [0:0] xor_ln340_835_fu_11467_p2;
wire   [0:0] xor_ln340_1327_fu_11461_p2;
wire   [0:0] and_ln786_2166_fu_11455_p2;
wire   [0:0] or_ln340_2958_fu_11473_p2;
wire   [23:0] select_ln340_1350_fu_11479_p3;
wire   [23:0] acc_3_V_164_fu_11487_p3;
wire   [31:0] add_ln391_fu_11519_p2;
wire  signed [23:0] mul_ln1118_fu_11550_p0;
wire  signed [31:0] sext_ln1116_fu_905_p1;
wire  signed [23:0] mul_ln1118_760_fu_11559_p0;
wire  signed [31:0] sext_ln1116_72_fu_962_p1;
wire  signed [23:0] mul_ln1118_761_fu_11568_p0;
wire  signed [31:0] sext_ln1116_73_fu_1011_p1;
wire  signed [23:0] mul_ln1118_762_fu_11577_p0;
wire  signed [31:0] sext_ln1116_74_fu_1060_p1;
wire  signed [23:0] mul_ln1118_763_fu_11586_p0;
wire  signed [31:0] sext_ln1116_75_fu_1109_p1;
wire  signed [23:0] mul_ln1118_764_fu_11595_p0;
wire  signed [31:0] sext_ln1116_76_fu_1158_p1;
wire  signed [23:0] mul_ln1118_765_fu_11604_p0;
wire  signed [31:0] sext_ln1116_77_fu_1207_p1;
wire  signed [23:0] mul_ln1118_766_fu_11613_p0;
wire  signed [31:0] sext_ln1116_78_fu_1256_p1;
wire  signed [23:0] mul_ln1118_767_fu_11622_p0;
wire  signed [31:0] sext_ln1116_79_fu_1305_p1;
wire  signed [23:0] mul_ln1118_768_fu_11631_p0;
wire  signed [31:0] sext_ln1116_80_fu_1354_p1;
wire  signed [23:0] mul_ln1118_769_fu_11640_p0;
wire  signed [23:0] mul_ln1118_770_fu_11649_p0;
wire  signed [23:0] mul_ln1118_771_fu_11658_p0;
wire  signed [23:0] mul_ln1118_772_fu_11667_p0;
wire  signed [23:0] mul_ln1118_773_fu_11676_p0;
wire  signed [23:0] mul_ln1118_774_fu_11685_p0;
wire  signed [23:0] mul_ln1118_775_fu_11694_p0;
wire  signed [23:0] mul_ln1118_776_fu_11703_p0;
wire  signed [23:0] mul_ln1118_777_fu_11712_p0;
wire  signed [23:0] mul_ln1118_778_fu_11721_p0;
wire  signed [23:0] mul_ln1118_779_fu_11730_p0;
wire  signed [23:0] mul_ln1118_780_fu_11739_p0;
wire  signed [23:0] mul_ln1118_781_fu_11748_p0;
wire  signed [23:0] mul_ln1118_782_fu_11757_p0;
wire  signed [23:0] mul_ln1118_783_fu_11766_p0;
wire  signed [23:0] mul_ln1118_784_fu_11775_p0;
wire  signed [23:0] mul_ln1118_785_fu_11784_p0;
wire  signed [23:0] mul_ln1118_786_fu_11793_p0;
wire  signed [23:0] mul_ln1118_787_fu_11802_p0;
wire  signed [23:0] mul_ln1118_788_fu_11811_p0;
wire  signed [23:0] mul_ln1118_789_fu_11820_p0;
wire  signed [23:0] mul_ln1118_790_fu_11829_p0;
wire  signed [23:0] mul_ln1118_791_fu_11838_p0;
wire  signed [23:0] mul_ln1118_792_fu_11847_p0;
wire  signed [23:0] mul_ln1118_793_fu_11856_p0;
wire  signed [23:0] mul_ln1118_794_fu_11865_p0;
wire  signed [23:0] mul_ln1118_795_fu_11874_p0;
wire  signed [23:0] mul_ln1118_796_fu_11883_p0;
wire  signed [23:0] mul_ln1118_797_fu_11892_p0;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_638;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 kernel_data_V_16 = 24'd0;
#0 kernel_data_V_17 = 24'd0;
#0 kernel_data_V_18 = 24'd0;
#0 kernel_data_V_19 = 24'd0;
#0 sX_3 = 32'd0;
#0 pX_3 = 32'd0;
#0 kernel_data_V_0 = 24'd0;
#0 kernel_data_V_1156 = 24'd0;
#0 kernel_data_V_2157 = 24'd0;
#0 kernel_data_V_3158 = 24'd0;
#0 kernel_data_V_4 = 24'd0;
#0 kernel_data_V_5 = 24'd0;
#0 kernel_data_V_6 = 24'd0;
#0 kernel_data_V_7 = 24'd0;
#0 kernel_data_V_8 = 24'd0;
#0 kernel_data_V_9 = 24'd0;
#0 kernel_data_V_10 = 24'd0;
#0 kernel_data_V_11 = 24'd0;
#0 kernel_data_V_12 = 24'd0;
#0 kernel_data_V_13 = 24'd0;
#0 kernel_data_V_14 = 24'd0;
#0 kernel_data_V_15 = 24'd0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

conv_1d_cl_array_ap_fixed_4u_array_ap_fixed_24_16_0_0_0_4u_config11_s_w11_V #(
    .DataWidth( 318 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
w11_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w11_V_address0),
    .ce0(w11_V_ce0),
    .q0(w11_V_q0)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U354(
    .din0(mul_ln1118_fu_11550_p0),
    .din1(trunc_ln56_fu_901_p1),
    .dout(mul_ln1118_fu_11550_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U355(
    .din0(mul_ln1118_760_fu_11559_p0),
    .din1(tmp_755_fu_952_p4),
    .dout(mul_ln1118_760_fu_11559_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U356(
    .din0(mul_ln1118_761_fu_11568_p0),
    .din1(tmp_756_fu_1001_p4),
    .dout(mul_ln1118_761_fu_11568_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U357(
    .din0(mul_ln1118_762_fu_11577_p0),
    .din1(tmp_757_fu_1050_p4),
    .dout(mul_ln1118_762_fu_11577_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U358(
    .din0(mul_ln1118_763_fu_11586_p0),
    .din1(tmp_758_fu_1099_p4),
    .dout(mul_ln1118_763_fu_11586_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U359(
    .din0(mul_ln1118_764_fu_11595_p0),
    .din1(tmp_759_fu_1148_p4),
    .dout(mul_ln1118_764_fu_11595_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U360(
    .din0(mul_ln1118_765_fu_11604_p0),
    .din1(tmp_760_fu_1197_p4),
    .dout(mul_ln1118_765_fu_11604_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U361(
    .din0(mul_ln1118_766_fu_11613_p0),
    .din1(tmp_761_fu_1246_p4),
    .dout(mul_ln1118_766_fu_11613_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U362(
    .din0(mul_ln1118_767_fu_11622_p0),
    .din1(tmp_762_fu_1295_p4),
    .dout(mul_ln1118_767_fu_11622_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U363(
    .din0(mul_ln1118_768_fu_11631_p0),
    .din1(tmp_763_fu_1344_p4),
    .dout(mul_ln1118_768_fu_11631_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U364(
    .din0(mul_ln1118_769_fu_11640_p0),
    .din1(tmp_764_fu_1389_p4),
    .dout(mul_ln1118_769_fu_11640_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U365(
    .din0(mul_ln1118_770_fu_11649_p0),
    .din1(tmp_765_fu_1426_p4),
    .dout(mul_ln1118_770_fu_11649_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U366(
    .din0(mul_ln1118_771_fu_11658_p0),
    .din1(tmp_766_fu_1463_p4),
    .dout(mul_ln1118_771_fu_11658_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U367(
    .din0(mul_ln1118_772_fu_11667_p0),
    .din1(tmp_767_fu_1500_p4),
    .dout(mul_ln1118_772_fu_11667_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U368(
    .din0(mul_ln1118_773_fu_11676_p0),
    .din1(tmp_768_fu_1537_p4),
    .dout(mul_ln1118_773_fu_11676_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U369(
    .din0(mul_ln1118_774_fu_11685_p0),
    .din1(tmp_769_fu_1574_p4),
    .dout(mul_ln1118_774_fu_11685_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U370(
    .din0(mul_ln1118_775_fu_11694_p0),
    .din1(tmp_770_fu_1611_p4),
    .dout(mul_ln1118_775_fu_11694_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U371(
    .din0(mul_ln1118_776_fu_11703_p0),
    .din1(tmp_771_fu_1648_p4),
    .dout(mul_ln1118_776_fu_11703_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U372(
    .din0(mul_ln1118_777_fu_11712_p0),
    .din1(tmp_772_fu_1685_p4),
    .dout(mul_ln1118_777_fu_11712_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U373(
    .din0(mul_ln1118_778_fu_11721_p0),
    .din1(tmp_773_fu_1722_p4),
    .dout(mul_ln1118_778_fu_11721_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U374(
    .din0(mul_ln1118_779_fu_11730_p0),
    .din1(tmp_774_fu_1759_p4),
    .dout(mul_ln1118_779_fu_11730_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U375(
    .din0(mul_ln1118_780_fu_11739_p0),
    .din1(tmp_775_fu_1796_p4),
    .dout(mul_ln1118_780_fu_11739_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U376(
    .din0(mul_ln1118_781_fu_11748_p0),
    .din1(tmp_776_fu_1833_p4),
    .dout(mul_ln1118_781_fu_11748_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U377(
    .din0(mul_ln1118_782_fu_11757_p0),
    .din1(tmp_777_fu_1870_p4),
    .dout(mul_ln1118_782_fu_11757_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U378(
    .din0(mul_ln1118_783_fu_11766_p0),
    .din1(tmp_778_fu_1907_p4),
    .dout(mul_ln1118_783_fu_11766_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U379(
    .din0(mul_ln1118_784_fu_11775_p0),
    .din1(tmp_779_fu_1944_p4),
    .dout(mul_ln1118_784_fu_11775_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U380(
    .din0(mul_ln1118_785_fu_11784_p0),
    .din1(tmp_780_fu_1981_p4),
    .dout(mul_ln1118_785_fu_11784_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U381(
    .din0(mul_ln1118_786_fu_11793_p0),
    .din1(tmp_781_fu_2018_p4),
    .dout(mul_ln1118_786_fu_11793_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U382(
    .din0(mul_ln1118_787_fu_11802_p0),
    .din1(tmp_782_fu_2055_p4),
    .dout(mul_ln1118_787_fu_11802_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U383(
    .din0(mul_ln1118_788_fu_11811_p0),
    .din1(tmp_783_fu_2092_p4),
    .dout(mul_ln1118_788_fu_11811_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U384(
    .din0(mul_ln1118_789_fu_11820_p0),
    .din1(tmp_784_fu_2129_p4),
    .dout(mul_ln1118_789_fu_11820_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U385(
    .din0(mul_ln1118_790_fu_11829_p0),
    .din1(tmp_785_fu_2166_p4),
    .dout(mul_ln1118_790_fu_11829_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U386(
    .din0(mul_ln1118_791_fu_11838_p0),
    .din1(tmp_786_fu_2203_p4),
    .dout(mul_ln1118_791_fu_11838_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U387(
    .din0(mul_ln1118_792_fu_11847_p0),
    .din1(tmp_787_fu_2240_p4),
    .dout(mul_ln1118_792_fu_11847_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U388(
    .din0(mul_ln1118_793_fu_11856_p0),
    .din1(tmp_788_fu_2277_p4),
    .dout(mul_ln1118_793_fu_11856_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U389(
    .din0(mul_ln1118_794_fu_11865_p0),
    .din1(tmp_789_fu_2314_p4),
    .dout(mul_ln1118_794_fu_11865_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U390(
    .din0(mul_ln1118_795_fu_11874_p0),
    .din1(tmp_790_fu_2351_p4),
    .dout(mul_ln1118_795_fu_11874_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U391(
    .din0(mul_ln1118_796_fu_11883_p0),
    .din1(tmp_791_fu_2388_p4),
    .dout(mul_ln1118_796_fu_11883_p2)
);

Encoder_mul_mul_24s_8s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Encoder_mul_mul_24s_8s_32_1_1_U392(
    .din0(mul_ln1118_797_fu_11892_p0),
    .din1(tmp_792_fu_2425_p4),
    .dout(mul_ln1118_797_fu_11892_p2)
);

Encoder_mul_mul_24s_6s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 30 ))
Encoder_mul_mul_24s_6s_30_1_1_U393(
    .din0(select_ln56_47_fu_1336_p3),
    .din1(tmp_793_fu_2462_p4),
    .dout(mul_ln1118_798_fu_11901_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((io_acc_block_signal_op1864 == 1'b0) & (1'd1 == and_ln360_reg_11982)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln64_fu_11544_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_phi_mux_in_index13_phi_fu_546_p4 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln360_fu_868_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln360_fu_868_p2))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op1864 == 1'b0) & (1'd1 == and_ln360_reg_11982)) & (icmp_ln64_fu_11544_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        i_iw_0_i14_reg_467 <= i_iw_reg_11950;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_iw_0_i14_reg_467 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln166_fu_706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_iw_0_i_i_i_reg_479 <= i_iw_4_fu_712_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (io_acc_block_signal_op23 == 1'b1))) begin
        i_iw_0_i_i_i_reg_479 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (in_index13_reg_542 == 1'd0))) begin
        in_index13_reg_542 <= in_index_reg_11991;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln360_fu_868_p2))) begin
        in_index13_reg_542 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_638)) begin
        if ((icmp_ln384_fu_11503_p2 == 1'd1)) begin
            pX_3 <= 32'd0;
        end else if ((icmp_ln384_fu_11503_p2 == 1'd0)) begin
            pX_3 <= add_ln389_fu_11508_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (in_index13_reg_542_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_0_V_1711_reg_554 <= tmp_data_0_V_20_fu_8855_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln360_fu_868_p2))) begin
        tmp_data_0_V_1711_reg_554 <= 24'd16777210;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (in_index13_reg_542_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_1_V_149_reg_565 <= tmp_data_1_V_19_fu_9735_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln360_fu_868_p2))) begin
        tmp_data_1_V_149_reg_565 <= 24'd18;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (in_index13_reg_542_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_2_V_147_reg_576 <= tmp_data_2_V_19_fu_10615_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln360_fu_868_p2))) begin
        tmp_data_2_V_147_reg_576 <= 24'd10;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (in_index13_reg_542_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_3_V_145_reg_587 <= tmp_data_3_V_19_fu_11495_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln360_fu_868_p2))) begin
        tmp_data_3_V_145_reg_587 <= 24'd16777212;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        and_ln360_reg_11982 <= and_ln360_fu_868_p2;
        icmp_ln360_reg_11971 <= icmp_ln360_fu_842_p2;
        kernel_data_V_16 <= tmp_data_0_V_reg_11910;
        kernel_data_V_17 <= tmp_data_1_V_reg_11915;
        kernel_data_V_18 <= tmp_data_2_V_reg_11920;
        kernel_data_V_19 <= tmp_data_3_V_reg_11925;
        pX_3_load_reg_11976 <= pX_3;
        sX_3_load_reg_11966 <= sX_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (io_acc_block_signal_op23 == 1'b1))) begin
        i_iw_reg_11950 <= i_iw_fu_700_p2;
        kernel_data_V_16_load_reg_11930 <= kernel_data_V_16;
        kernel_data_V_17_load_reg_11935 <= kernel_data_V_17;
        kernel_data_V_18_load_reg_11940 <= kernel_data_V_18;
        kernel_data_V_19_load_reg_11945 <= kernel_data_V_19;
        tmp_data_0_V_reg_11910 <= data_V_data_0_V_dout;
        tmp_data_1_V_reg_11915 <= data_V_data_1_V_dout;
        tmp_data_2_V_reg_11920 <= data_V_data_2_V_dout;
        tmp_data_3_V_reg_11925 <= data_V_data_3_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        in_index13_reg_542_pp1_iter1_reg <= in_index13_reg_542;
        mul_ln1118_760_reg_12019 <= mul_ln1118_760_fu_11559_p2;
        mul_ln1118_761_reg_12042 <= mul_ln1118_761_fu_11568_p2;
        mul_ln1118_762_reg_12065 <= mul_ln1118_762_fu_11577_p2;
        mul_ln1118_763_reg_12088 <= mul_ln1118_763_fu_11586_p2;
        mul_ln1118_764_reg_12111 <= mul_ln1118_764_fu_11595_p2;
        mul_ln1118_765_reg_12134 <= mul_ln1118_765_fu_11604_p2;
        mul_ln1118_766_reg_12157 <= mul_ln1118_766_fu_11613_p2;
        mul_ln1118_767_reg_12180 <= mul_ln1118_767_fu_11622_p2;
        mul_ln1118_768_reg_12203 <= mul_ln1118_768_fu_11631_p2;
        mul_ln1118_769_reg_12226 <= mul_ln1118_769_fu_11640_p2;
        mul_ln1118_770_reg_12249 <= mul_ln1118_770_fu_11649_p2;
        mul_ln1118_771_reg_12272 <= mul_ln1118_771_fu_11658_p2;
        mul_ln1118_772_reg_12295 <= mul_ln1118_772_fu_11667_p2;
        mul_ln1118_773_reg_12318 <= mul_ln1118_773_fu_11676_p2;
        mul_ln1118_774_reg_12341 <= mul_ln1118_774_fu_11685_p2;
        mul_ln1118_775_reg_12364 <= mul_ln1118_775_fu_11694_p2;
        mul_ln1118_776_reg_12387 <= mul_ln1118_776_fu_11703_p2;
        mul_ln1118_777_reg_12410 <= mul_ln1118_777_fu_11712_p2;
        mul_ln1118_778_reg_12433 <= mul_ln1118_778_fu_11721_p2;
        mul_ln1118_779_reg_12456 <= mul_ln1118_779_fu_11730_p2;
        mul_ln1118_780_reg_12479 <= mul_ln1118_780_fu_11739_p2;
        mul_ln1118_781_reg_12502 <= mul_ln1118_781_fu_11748_p2;
        mul_ln1118_782_reg_12525 <= mul_ln1118_782_fu_11757_p2;
        mul_ln1118_783_reg_12548 <= mul_ln1118_783_fu_11766_p2;
        mul_ln1118_784_reg_12571 <= mul_ln1118_784_fu_11775_p2;
        mul_ln1118_785_reg_12594 <= mul_ln1118_785_fu_11784_p2;
        mul_ln1118_786_reg_12617 <= mul_ln1118_786_fu_11793_p2;
        mul_ln1118_787_reg_12640 <= mul_ln1118_787_fu_11802_p2;
        mul_ln1118_788_reg_12663 <= mul_ln1118_788_fu_11811_p2;
        mul_ln1118_789_reg_12686 <= mul_ln1118_789_fu_11820_p2;
        mul_ln1118_790_reg_12709 <= mul_ln1118_790_fu_11829_p2;
        mul_ln1118_791_reg_12732 <= mul_ln1118_791_fu_11838_p2;
        mul_ln1118_792_reg_12755 <= mul_ln1118_792_fu_11847_p2;
        mul_ln1118_793_reg_12778 <= mul_ln1118_793_fu_11856_p2;
        mul_ln1118_794_reg_12801 <= mul_ln1118_794_fu_11865_p2;
        mul_ln1118_795_reg_12824 <= mul_ln1118_795_fu_11874_p2;
        mul_ln1118_796_reg_12847 <= mul_ln1118_796_fu_11883_p2;
        mul_ln1118_797_reg_12870 <= mul_ln1118_797_fu_11892_p2;
        mul_ln1118_798_reg_12893 <= mul_ln1118_798_fu_11901_p2;
        mul_ln1118_reg_11996 <= mul_ln1118_fu_11550_p2;
        tmp_5900_reg_12001 <= mul_ln1118_fu_11550_p2[32'd31];
        tmp_5902_reg_12014 <= mul_ln1118_fu_11550_p2[32'd6];
        tmp_5907_reg_12024 <= mul_ln1118_760_fu_11559_p2[32'd31];
        tmp_5909_reg_12037 <= mul_ln1118_760_fu_11559_p2[32'd6];
        tmp_5914_reg_12047 <= mul_ln1118_761_fu_11568_p2[32'd31];
        tmp_5916_reg_12060 <= mul_ln1118_761_fu_11568_p2[32'd6];
        tmp_5921_reg_12070 <= mul_ln1118_762_fu_11577_p2[32'd31];
        tmp_5923_reg_12083 <= mul_ln1118_762_fu_11577_p2[32'd6];
        tmp_5928_reg_12093 <= mul_ln1118_763_fu_11586_p2[32'd31];
        tmp_5930_reg_12106 <= mul_ln1118_763_fu_11586_p2[32'd6];
        tmp_5935_reg_12116 <= mul_ln1118_764_fu_11595_p2[32'd31];
        tmp_5937_reg_12129 <= mul_ln1118_764_fu_11595_p2[32'd6];
        tmp_5942_reg_12139 <= mul_ln1118_765_fu_11604_p2[32'd31];
        tmp_5944_reg_12152 <= mul_ln1118_765_fu_11604_p2[32'd6];
        tmp_5949_reg_12162 <= mul_ln1118_766_fu_11613_p2[32'd31];
        tmp_5951_reg_12175 <= mul_ln1118_766_fu_11613_p2[32'd6];
        tmp_5956_reg_12185 <= mul_ln1118_767_fu_11622_p2[32'd31];
        tmp_5958_reg_12198 <= mul_ln1118_767_fu_11622_p2[32'd6];
        tmp_5963_reg_12208 <= mul_ln1118_768_fu_11631_p2[32'd31];
        tmp_5965_reg_12221 <= mul_ln1118_768_fu_11631_p2[32'd6];
        tmp_5970_reg_12231 <= mul_ln1118_769_fu_11640_p2[32'd31];
        tmp_5972_reg_12244 <= mul_ln1118_769_fu_11640_p2[32'd6];
        tmp_5977_reg_12254 <= mul_ln1118_770_fu_11649_p2[32'd31];
        tmp_5979_reg_12267 <= mul_ln1118_770_fu_11649_p2[32'd6];
        tmp_5984_reg_12277 <= mul_ln1118_771_fu_11658_p2[32'd31];
        tmp_5986_reg_12290 <= mul_ln1118_771_fu_11658_p2[32'd6];
        tmp_5991_reg_12300 <= mul_ln1118_772_fu_11667_p2[32'd31];
        tmp_5993_reg_12313 <= mul_ln1118_772_fu_11667_p2[32'd6];
        tmp_5998_reg_12323 <= mul_ln1118_773_fu_11676_p2[32'd31];
        tmp_6000_reg_12336 <= mul_ln1118_773_fu_11676_p2[32'd6];
        tmp_6005_reg_12346 <= mul_ln1118_774_fu_11685_p2[32'd31];
        tmp_6007_reg_12359 <= mul_ln1118_774_fu_11685_p2[32'd6];
        tmp_6012_reg_12369 <= mul_ln1118_775_fu_11694_p2[32'd31];
        tmp_6014_reg_12382 <= mul_ln1118_775_fu_11694_p2[32'd6];
        tmp_6019_reg_12392 <= mul_ln1118_776_fu_11703_p2[32'd31];
        tmp_6021_reg_12405 <= mul_ln1118_776_fu_11703_p2[32'd6];
        tmp_6026_reg_12415 <= mul_ln1118_777_fu_11712_p2[32'd31];
        tmp_6028_reg_12428 <= mul_ln1118_777_fu_11712_p2[32'd6];
        tmp_6033_reg_12438 <= mul_ln1118_778_fu_11721_p2[32'd31];
        tmp_6035_reg_12451 <= mul_ln1118_778_fu_11721_p2[32'd6];
        tmp_6040_reg_12461 <= mul_ln1118_779_fu_11730_p2[32'd31];
        tmp_6042_reg_12474 <= mul_ln1118_779_fu_11730_p2[32'd6];
        tmp_6047_reg_12484 <= mul_ln1118_780_fu_11739_p2[32'd31];
        tmp_6049_reg_12497 <= mul_ln1118_780_fu_11739_p2[32'd6];
        tmp_6054_reg_12507 <= mul_ln1118_781_fu_11748_p2[32'd31];
        tmp_6056_reg_12520 <= mul_ln1118_781_fu_11748_p2[32'd6];
        tmp_6061_reg_12530 <= mul_ln1118_782_fu_11757_p2[32'd31];
        tmp_6063_reg_12543 <= mul_ln1118_782_fu_11757_p2[32'd6];
        tmp_6068_reg_12553 <= mul_ln1118_783_fu_11766_p2[32'd31];
        tmp_6070_reg_12566 <= mul_ln1118_783_fu_11766_p2[32'd6];
        tmp_6075_reg_12576 <= mul_ln1118_784_fu_11775_p2[32'd31];
        tmp_6077_reg_12589 <= mul_ln1118_784_fu_11775_p2[32'd6];
        tmp_6082_reg_12599 <= mul_ln1118_785_fu_11784_p2[32'd31];
        tmp_6084_reg_12612 <= mul_ln1118_785_fu_11784_p2[32'd6];
        tmp_6089_reg_12622 <= mul_ln1118_786_fu_11793_p2[32'd31];
        tmp_6091_reg_12635 <= mul_ln1118_786_fu_11793_p2[32'd6];
        tmp_6096_reg_12645 <= mul_ln1118_787_fu_11802_p2[32'd31];
        tmp_6098_reg_12658 <= mul_ln1118_787_fu_11802_p2[32'd6];
        tmp_6103_reg_12668 <= mul_ln1118_788_fu_11811_p2[32'd31];
        tmp_6105_reg_12681 <= mul_ln1118_788_fu_11811_p2[32'd6];
        tmp_6110_reg_12691 <= mul_ln1118_789_fu_11820_p2[32'd31];
        tmp_6112_reg_12704 <= mul_ln1118_789_fu_11820_p2[32'd6];
        tmp_6117_reg_12714 <= mul_ln1118_790_fu_11829_p2[32'd31];
        tmp_6119_reg_12727 <= mul_ln1118_790_fu_11829_p2[32'd6];
        tmp_6124_reg_12737 <= mul_ln1118_791_fu_11838_p2[32'd31];
        tmp_6126_reg_12750 <= mul_ln1118_791_fu_11838_p2[32'd6];
        tmp_6131_reg_12760 <= mul_ln1118_792_fu_11847_p2[32'd31];
        tmp_6133_reg_12773 <= mul_ln1118_792_fu_11847_p2[32'd6];
        tmp_6138_reg_12783 <= mul_ln1118_793_fu_11856_p2[32'd31];
        tmp_6140_reg_12796 <= mul_ln1118_793_fu_11856_p2[32'd6];
        tmp_6145_reg_12806 <= mul_ln1118_794_fu_11865_p2[32'd31];
        tmp_6147_reg_12819 <= mul_ln1118_794_fu_11865_p2[32'd6];
        tmp_6152_reg_12829 <= mul_ln1118_795_fu_11874_p2[32'd31];
        tmp_6154_reg_12842 <= mul_ln1118_795_fu_11874_p2[32'd6];
        tmp_6159_reg_12852 <= mul_ln1118_796_fu_11883_p2[32'd31];
        tmp_6161_reg_12865 <= mul_ln1118_796_fu_11883_p2[32'd6];
        tmp_6166_reg_12875 <= mul_ln1118_797_fu_11892_p2[32'd31];
        tmp_6168_reg_12888 <= mul_ln1118_797_fu_11892_p2[32'd6];
        tmp_6173_reg_12898 <= mul_ln1118_798_fu_11901_p2[32'd29];
        tmp_6175_reg_12911 <= mul_ln1118_798_fu_11901_p2[32'd6];
        trunc_ln708_761_reg_12055 <= {{mul_ln1118_761_fu_11568_p2[30:7]}};
        trunc_ln708_762_reg_12078 <= {{mul_ln1118_762_fu_11577_p2[30:7]}};
        trunc_ln708_763_reg_12101 <= {{mul_ln1118_763_fu_11586_p2[30:7]}};
        trunc_ln708_764_reg_12124 <= {{mul_ln1118_764_fu_11595_p2[30:7]}};
        trunc_ln708_765_reg_12147 <= {{mul_ln1118_765_fu_11604_p2[30:7]}};
        trunc_ln708_766_reg_12170 <= {{mul_ln1118_766_fu_11613_p2[30:7]}};
        trunc_ln708_767_reg_12193 <= {{mul_ln1118_767_fu_11622_p2[30:7]}};
        trunc_ln708_768_reg_12216 <= {{mul_ln1118_768_fu_11631_p2[30:7]}};
        trunc_ln708_769_reg_12239 <= {{mul_ln1118_769_fu_11640_p2[30:7]}};
        trunc_ln708_770_reg_12262 <= {{mul_ln1118_770_fu_11649_p2[30:7]}};
        trunc_ln708_771_reg_12285 <= {{mul_ln1118_771_fu_11658_p2[30:7]}};
        trunc_ln708_772_reg_12308 <= {{mul_ln1118_772_fu_11667_p2[30:7]}};
        trunc_ln708_773_reg_12331 <= {{mul_ln1118_773_fu_11676_p2[30:7]}};
        trunc_ln708_774_reg_12354 <= {{mul_ln1118_774_fu_11685_p2[30:7]}};
        trunc_ln708_775_reg_12377 <= {{mul_ln1118_775_fu_11694_p2[30:7]}};
        trunc_ln708_776_reg_12400 <= {{mul_ln1118_776_fu_11703_p2[30:7]}};
        trunc_ln708_777_reg_12423 <= {{mul_ln1118_777_fu_11712_p2[30:7]}};
        trunc_ln708_778_reg_12446 <= {{mul_ln1118_778_fu_11721_p2[30:7]}};
        trunc_ln708_779_reg_12469 <= {{mul_ln1118_779_fu_11730_p2[30:7]}};
        trunc_ln708_780_reg_12492 <= {{mul_ln1118_780_fu_11739_p2[30:7]}};
        trunc_ln708_781_reg_12515 <= {{mul_ln1118_781_fu_11748_p2[30:7]}};
        trunc_ln708_782_reg_12538 <= {{mul_ln1118_782_fu_11757_p2[30:7]}};
        trunc_ln708_783_reg_12561 <= {{mul_ln1118_783_fu_11766_p2[30:7]}};
        trunc_ln708_784_reg_12584 <= {{mul_ln1118_784_fu_11775_p2[30:7]}};
        trunc_ln708_785_reg_12607 <= {{mul_ln1118_785_fu_11784_p2[30:7]}};
        trunc_ln708_786_reg_12630 <= {{mul_ln1118_786_fu_11793_p2[30:7]}};
        trunc_ln708_787_reg_12653 <= {{mul_ln1118_787_fu_11802_p2[30:7]}};
        trunc_ln708_788_reg_12676 <= {{mul_ln1118_788_fu_11811_p2[30:7]}};
        trunc_ln708_789_reg_12699 <= {{mul_ln1118_789_fu_11820_p2[30:7]}};
        trunc_ln708_790_reg_12722 <= {{mul_ln1118_790_fu_11829_p2[30:7]}};
        trunc_ln708_791_reg_12745 <= {{mul_ln1118_791_fu_11838_p2[30:7]}};
        trunc_ln708_792_reg_12768 <= {{mul_ln1118_792_fu_11847_p2[30:7]}};
        trunc_ln708_793_reg_12791 <= {{mul_ln1118_793_fu_11856_p2[30:7]}};
        trunc_ln708_794_reg_12814 <= {{mul_ln1118_794_fu_11865_p2[30:7]}};
        trunc_ln708_795_reg_12837 <= {{mul_ln1118_795_fu_11874_p2[30:7]}};
        trunc_ln708_796_reg_12860 <= {{mul_ln1118_796_fu_11883_p2[30:7]}};
        trunc_ln708_797_reg_12883 <= {{mul_ln1118_797_fu_11892_p2[30:7]}};
        trunc_ln708_798_reg_12906 <= {{mul_ln1118_798_fu_11901_p2[29:7]}};
        trunc_ln708_s_reg_12032 <= {{mul_ln1118_760_fu_11559_p2[30:7]}};
        trunc_ln_reg_12009 <= {{mul_ln1118_fu_11550_p2[30:7]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        in_index13_reg_542_pp1_iter2_reg <= in_index13_reg_542_pp1_iter1_reg;
        select_ln340_2576_reg_12916 <= select_ln340_2576_fu_2628_p3;
        select_ln340_2578_reg_12922 <= select_ln340_2578_fu_2765_p3;
        select_ln340_2580_reg_12928 <= select_ln340_2580_fu_2902_p3;
        select_ln340_2582_reg_12934 <= select_ln340_2582_fu_3039_p3;
        select_ln340_2584_reg_12940 <= select_ln340_2584_fu_3176_p3;
        select_ln340_2586_reg_12946 <= select_ln340_2586_fu_3313_p3;
        select_ln340_2588_reg_12952 <= select_ln340_2588_fu_3450_p3;
        select_ln340_2590_reg_12958 <= select_ln340_2590_fu_3587_p3;
        select_ln340_2592_reg_12964 <= select_ln340_2592_fu_3724_p3;
        select_ln340_2594_reg_12970 <= select_ln340_2594_fu_3861_p3;
        select_ln340_2596_reg_12976 <= select_ln340_2596_fu_3998_p3;
        select_ln340_2598_reg_12982 <= select_ln340_2598_fu_4135_p3;
        select_ln340_2600_reg_12988 <= select_ln340_2600_fu_4272_p3;
        select_ln340_2602_reg_12994 <= select_ln340_2602_fu_4409_p3;
        select_ln340_2604_reg_13000 <= select_ln340_2604_fu_4546_p3;
        select_ln340_2606_reg_13006 <= select_ln340_2606_fu_4683_p3;
        select_ln340_2608_reg_13012 <= select_ln340_2608_fu_4820_p3;
        select_ln340_2610_reg_13018 <= select_ln340_2610_fu_4957_p3;
        select_ln340_2612_reg_13024 <= select_ln340_2612_fu_5094_p3;
        select_ln340_2614_reg_13030 <= select_ln340_2614_fu_5231_p3;
        select_ln340_2616_reg_13036 <= select_ln340_2616_fu_5368_p3;
        select_ln340_2618_reg_13042 <= select_ln340_2618_fu_5505_p3;
        select_ln340_2620_reg_13048 <= select_ln340_2620_fu_5642_p3;
        select_ln340_2622_reg_13054 <= select_ln340_2622_fu_5779_p3;
        select_ln340_2624_reg_13060 <= select_ln340_2624_fu_5916_p3;
        select_ln340_2626_reg_13066 <= select_ln340_2626_fu_6053_p3;
        select_ln340_2628_reg_13072 <= select_ln340_2628_fu_6190_p3;
        select_ln340_2630_reg_13078 <= select_ln340_2630_fu_6327_p3;
        select_ln340_2632_reg_13084 <= select_ln340_2632_fu_6464_p3;
        select_ln340_2634_reg_13090 <= select_ln340_2634_fu_6601_p3;
        select_ln340_2636_reg_13096 <= select_ln340_2636_fu_6738_p3;
        select_ln340_2638_reg_13102 <= select_ln340_2638_fu_6875_p3;
        select_ln340_2640_reg_13108 <= select_ln340_2640_fu_7012_p3;
        select_ln340_2642_reg_13114 <= select_ln340_2642_fu_7149_p3;
        select_ln340_2644_reg_13120 <= select_ln340_2644_fu_7286_p3;
        select_ln340_2646_reg_13126 <= select_ln340_2646_fu_7423_p3;
        select_ln340_2648_reg_13132 <= select_ln340_2648_fu_7560_p3;
        select_ln340_2650_reg_13138 <= select_ln340_2650_fu_7697_p3;
        select_ln340_2652_reg_13144 <= select_ln340_2652_fu_7834_p3;
        select_ln340_2654_reg_13150 <= select_ln340_2654_fu_7975_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        in_index_reg_11991 <= in_index_fu_879_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_fu_718_p1 == 2'd0) & (icmp_ln166_fu_706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        kernel_data_V_0 <= ap_phi_mux_phi_ln203_phi_fu_493_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_i_iw_0_i_i_i_phi_fu_483_p4 == 3'd2) & (icmp_ln166_fu_706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        kernel_data_V_10 <= ap_phi_mux_phi_ln203_16_phi_fu_519_p8;
        kernel_data_V_11 <= ap_phi_mux_phi_ln203_17_phi_fu_532_p8;
        kernel_data_V_9 <= ap_phi_mux_phi_ln203_15_phi_fu_506_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_i_iw_0_i_i_i_phi_fu_483_p4 == 3'd0) & (icmp_ln166_fu_706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        kernel_data_V_1156 <= ap_phi_mux_phi_ln203_15_phi_fu_506_p8;
        kernel_data_V_2157 <= ap_phi_mux_phi_ln203_16_phi_fu_519_p8;
        kernel_data_V_3158 <= ap_phi_mux_phi_ln203_17_phi_fu_532_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_fu_718_p1 == 2'd3) & (icmp_ln166_fu_706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        kernel_data_V_12 <= ap_phi_mux_phi_ln203_phi_fu_493_p8;
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_i_iw_0_i_i_i_phi_fu_483_p4 == 3'd2) & ~(ap_phi_mux_i_iw_0_i_i_i_phi_fu_483_p4 == 3'd1) & ~(ap_phi_mux_i_iw_0_i_i_i_phi_fu_483_p4 == 3'd0) & (icmp_ln166_fu_706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        kernel_data_V_13 <= ap_phi_mux_phi_ln203_15_phi_fu_506_p8;
        kernel_data_V_14 <= ap_phi_mux_phi_ln203_16_phi_fu_519_p8;
        kernel_data_V_15 <= ap_phi_mux_phi_ln203_17_phi_fu_532_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_fu_718_p1 == 2'd1) & (icmp_ln166_fu_706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        kernel_data_V_4 <= ap_phi_mux_phi_ln203_phi_fu_493_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_i_iw_0_i_i_i_phi_fu_483_p4 == 3'd1) & (icmp_ln166_fu_706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        kernel_data_V_5 <= ap_phi_mux_phi_ln203_15_phi_fu_506_p8;
        kernel_data_V_6 <= ap_phi_mux_phi_ln203_16_phi_fu_519_p8;
        kernel_data_V_7 <= ap_phi_mux_phi_ln203_17_phi_fu_532_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_fu_718_p1 == 2'd2) & (icmp_ln166_fu_706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        kernel_data_V_8 <= ap_phi_mux_phi_ln203_phi_fu_493_p8;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op1864 == 1'b0) & (1'd1 == and_ln360_reg_11982)) & (1'b1 == ap_CS_fsm_state9))) begin
        sX_3 <= ap_phi_mux_storemerge_i_i_phi_fu_601_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_0_V_20_reg_13156 <= tmp_data_0_V_20_fu_8855_p3;
        tmp_data_1_V_19_reg_13162 <= tmp_data_1_V_19_fu_9735_p3;
        tmp_data_2_V_19_reg_13168 <= tmp_data_2_V_19_fu_10615_p3;
        tmp_data_3_V_19_reg_13174 <= tmp_data_3_V_19_fu_11495_p3;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op1864 == 1'b0) & (1'd1 == and_ln360_reg_11982)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln64_fu_11544_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (in_index13_reg_542 == 1'd0))) begin
        ap_phi_mux_in_index13_phi_fu_546_p4 = in_index_reg_11991;
    end else begin
        ap_phi_mux_in_index13_phi_fu_546_p4 = in_index13_reg_542;
    end
end

always @ (*) begin
    if (((icmp_ln166_fu_706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        if ((trunc_ln203_fu_718_p1 == 2'd3)) begin
            ap_phi_mux_phi_ln203_15_phi_fu_506_p8 = kernel_data_V_17_load_reg_11935;
        end else if ((trunc_ln203_fu_718_p1 == 2'd2)) begin
            ap_phi_mux_phi_ln203_15_phi_fu_506_p8 = kernel_data_V_13;
        end else if ((trunc_ln203_fu_718_p1 == 2'd1)) begin
            ap_phi_mux_phi_ln203_15_phi_fu_506_p8 = kernel_data_V_9;
        end else if ((trunc_ln203_fu_718_p1 == 2'd0)) begin
            ap_phi_mux_phi_ln203_15_phi_fu_506_p8 = kernel_data_V_5;
        end else begin
            ap_phi_mux_phi_ln203_15_phi_fu_506_p8 = 'bx;
        end
    end else begin
        ap_phi_mux_phi_ln203_15_phi_fu_506_p8 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln166_fu_706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        if ((trunc_ln203_fu_718_p1 == 2'd3)) begin
            ap_phi_mux_phi_ln203_16_phi_fu_519_p8 = kernel_data_V_18_load_reg_11940;
        end else if ((trunc_ln203_fu_718_p1 == 2'd2)) begin
            ap_phi_mux_phi_ln203_16_phi_fu_519_p8 = kernel_data_V_14;
        end else if ((trunc_ln203_fu_718_p1 == 2'd1)) begin
            ap_phi_mux_phi_ln203_16_phi_fu_519_p8 = kernel_data_V_10;
        end else if ((trunc_ln203_fu_718_p1 == 2'd0)) begin
            ap_phi_mux_phi_ln203_16_phi_fu_519_p8 = kernel_data_V_6;
        end else begin
            ap_phi_mux_phi_ln203_16_phi_fu_519_p8 = 'bx;
        end
    end else begin
        ap_phi_mux_phi_ln203_16_phi_fu_519_p8 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln166_fu_706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        if ((trunc_ln203_fu_718_p1 == 2'd3)) begin
            ap_phi_mux_phi_ln203_17_phi_fu_532_p8 = kernel_data_V_19_load_reg_11945;
        end else if ((trunc_ln203_fu_718_p1 == 2'd2)) begin
            ap_phi_mux_phi_ln203_17_phi_fu_532_p8 = kernel_data_V_15;
        end else if ((trunc_ln203_fu_718_p1 == 2'd1)) begin
            ap_phi_mux_phi_ln203_17_phi_fu_532_p8 = kernel_data_V_11;
        end else if ((trunc_ln203_fu_718_p1 == 2'd0)) begin
            ap_phi_mux_phi_ln203_17_phi_fu_532_p8 = kernel_data_V_7;
        end else begin
            ap_phi_mux_phi_ln203_17_phi_fu_532_p8 = 'bx;
        end
    end else begin
        ap_phi_mux_phi_ln203_17_phi_fu_532_p8 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln166_fu_706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        if ((trunc_ln203_fu_718_p1 == 2'd3)) begin
            ap_phi_mux_phi_ln203_phi_fu_493_p8 = kernel_data_V_16_load_reg_11930;
        end else if ((trunc_ln203_fu_718_p1 == 2'd2)) begin
            ap_phi_mux_phi_ln203_phi_fu_493_p8 = kernel_data_V_12;
        end else if ((trunc_ln203_fu_718_p1 == 2'd1)) begin
            ap_phi_mux_phi_ln203_phi_fu_493_p8 = kernel_data_V_8;
        end else if ((trunc_ln203_fu_718_p1 == 2'd0)) begin
            ap_phi_mux_phi_ln203_phi_fu_493_p8 = kernel_data_V_4;
        end else begin
            ap_phi_mux_phi_ln203_phi_fu_493_p8 = 'bx;
        end
    end else begin
        ap_phi_mux_phi_ln203_phi_fu_493_p8 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        if ((icmp_ln384_fu_11503_p2 == 1'd1)) begin
            ap_phi_mux_storemerge_i_i_phi_fu_601_p4 = 32'd0;
        end else if ((icmp_ln384_fu_11503_p2 == 1'd0)) begin
            ap_phi_mux_storemerge_i_i_phi_fu_601_p4 = select_ln391_fu_11524_p3;
        end else begin
            ap_phi_mux_storemerge_i_i_phi_fu_601_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge_i_i_phi_fu_601_p4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (io_acc_block_signal_op23 == 1'b1))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (io_acc_block_signal_op23 == 1'b1))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (io_acc_block_signal_op23 == 1'b1))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (io_acc_block_signal_op23 == 1'b1))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op1864 == 1'b0) & (1'd1 == and_ln360_reg_11982)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln64_fu_11544_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln360_reg_11982))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op1864 == 1'b0) & (1'd1 == and_ln360_reg_11982)) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln360_reg_11982))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln360_reg_11982))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op1864 == 1'b0) & (1'd1 == and_ln360_reg_11982)) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln360_reg_11982))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln360_reg_11982))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op1864 == 1'b0) & (1'd1 == and_ln360_reg_11982)) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln360_reg_11982))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln360_reg_11982))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op1864 == 1'b0) & (1'd1 == and_ln360_reg_11982)) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln360_reg_11982))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        w11_V_ce0 = 1'b1;
    end else begin
        w11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (io_acc_block_signal_op23 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln166_fu_706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln360_fu_868_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((io_acc_block_signal_op1864 == 1'b0) & (1'd1 == and_ln360_reg_11982)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln64_fu_11544_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((io_acc_block_signal_op1864 == 1'b0) & (1'd1 == and_ln360_reg_11982)) & (icmp_ln64_fu_11544_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_146_fu_8055_p3 = ((and_ln786_2088_fu_8023_p2[0:0] === 1'b1) ? 24'd8388608 : acc_0_V_fu_8004_p2);

assign acc_0_V_147_fu_8092_p2 = ($signed(select_ln340_2578_reg_12922) + $signed(select_ln340_2577_fu_8063_p3));

assign acc_0_V_148_fu_8143_p3 = ((and_ln786_2090_fu_8111_p2[0:0] === 1'b1) ? 24'd8388608 : acc_0_V_147_fu_8092_p2);

assign acc_0_V_149_fu_8180_p2 = ($signed(select_ln340_2580_reg_12928) + $signed(select_ln340_2579_fu_8151_p3));

assign acc_0_V_150_fu_8231_p3 = ((and_ln786_2092_fu_8199_p2[0:0] === 1'b1) ? 24'd8388608 : acc_0_V_149_fu_8180_p2);

assign acc_0_V_151_fu_8268_p2 = ($signed(select_ln340_2582_reg_12934) + $signed(select_ln340_2581_fu_8239_p3));

assign acc_0_V_152_fu_8319_p3 = ((and_ln786_2094_fu_8287_p2[0:0] === 1'b1) ? 24'd8388608 : acc_0_V_151_fu_8268_p2);

assign acc_0_V_153_fu_8356_p2 = ($signed(select_ln340_2584_reg_12940) + $signed(select_ln340_2583_fu_8327_p3));

assign acc_0_V_154_fu_8407_p3 = ((and_ln786_2096_fu_8375_p2[0:0] === 1'b1) ? 24'd8388608 : acc_0_V_153_fu_8356_p2);

assign acc_0_V_155_fu_8444_p2 = ($signed(select_ln340_2586_reg_12946) + $signed(select_ln340_2585_fu_8415_p3));

assign acc_0_V_156_fu_8495_p3 = ((and_ln786_2098_fu_8463_p2[0:0] === 1'b1) ? 24'd8388608 : acc_0_V_155_fu_8444_p2);

assign acc_0_V_157_fu_8532_p2 = ($signed(select_ln340_2588_reg_12952) + $signed(select_ln340_2587_fu_8503_p3));

assign acc_0_V_158_fu_8583_p3 = ((and_ln786_2100_fu_8551_p2[0:0] === 1'b1) ? 24'd8388608 : acc_0_V_157_fu_8532_p2);

assign acc_0_V_159_fu_8620_p2 = ($signed(select_ln340_2590_reg_12958) + $signed(select_ln340_2589_fu_8591_p3));

assign acc_0_V_160_fu_8671_p3 = ((and_ln786_2102_fu_8639_p2[0:0] === 1'b1) ? 24'd8388608 : acc_0_V_159_fu_8620_p2);

assign acc_0_V_161_fu_8708_p2 = ($signed(select_ln340_2592_reg_12964) + $signed(select_ln340_2591_fu_8679_p3));

assign acc_0_V_162_fu_8759_p3 = ((and_ln786_2104_fu_8727_p2[0:0] === 1'b1) ? 24'd8388608 : acc_0_V_161_fu_8708_p2);

assign acc_0_V_163_fu_8796_p2 = ($signed(select_ln340_2594_reg_12970) + $signed(select_ln340_2593_fu_8767_p3));

assign acc_0_V_164_fu_8847_p3 = ((and_ln786_2106_fu_8815_p2[0:0] === 1'b1) ? 24'd8388608 : acc_0_V_163_fu_8796_p2);

assign acc_0_V_fu_8004_p2 = ($signed(select_ln340_2576_reg_12916) + $signed(tmp_data_0_V_1711_reg_554));

assign acc_1_V_146_fu_8935_p3 = ((and_ln786_2108_fu_8903_p2[0:0] === 1'b1) ? 24'd8388608 : acc_1_V_fu_8884_p2);

assign acc_1_V_147_fu_8972_p2 = ($signed(select_ln340_2598_reg_12982) + $signed(select_ln340_2597_fu_8943_p3));

assign acc_1_V_148_fu_9023_p3 = ((and_ln786_2110_fu_8991_p2[0:0] === 1'b1) ? 24'd8388608 : acc_1_V_147_fu_8972_p2);

assign acc_1_V_149_fu_9060_p2 = ($signed(select_ln340_2600_reg_12988) + $signed(select_ln340_2599_fu_9031_p3));

assign acc_1_V_150_fu_9111_p3 = ((and_ln786_2112_fu_9079_p2[0:0] === 1'b1) ? 24'd8388608 : acc_1_V_149_fu_9060_p2);

assign acc_1_V_151_fu_9148_p2 = ($signed(select_ln340_2602_reg_12994) + $signed(select_ln340_2601_fu_9119_p3));

assign acc_1_V_152_fu_9199_p3 = ((and_ln786_2114_fu_9167_p2[0:0] === 1'b1) ? 24'd8388608 : acc_1_V_151_fu_9148_p2);

assign acc_1_V_153_fu_9236_p2 = ($signed(select_ln340_2604_reg_13000) + $signed(select_ln340_2603_fu_9207_p3));

assign acc_1_V_154_fu_9287_p3 = ((and_ln786_2116_fu_9255_p2[0:0] === 1'b1) ? 24'd8388608 : acc_1_V_153_fu_9236_p2);

assign acc_1_V_155_fu_9324_p2 = ($signed(select_ln340_2606_reg_13006) + $signed(select_ln340_2605_fu_9295_p3));

assign acc_1_V_156_fu_9375_p3 = ((and_ln786_2118_fu_9343_p2[0:0] === 1'b1) ? 24'd8388608 : acc_1_V_155_fu_9324_p2);

assign acc_1_V_157_fu_9412_p2 = ($signed(select_ln340_2608_reg_13012) + $signed(select_ln340_2607_fu_9383_p3));

assign acc_1_V_158_fu_9463_p3 = ((and_ln786_2120_fu_9431_p2[0:0] === 1'b1) ? 24'd8388608 : acc_1_V_157_fu_9412_p2);

assign acc_1_V_159_fu_9500_p2 = ($signed(select_ln340_2610_reg_13018) + $signed(select_ln340_2609_fu_9471_p3));

assign acc_1_V_160_fu_9551_p3 = ((and_ln786_2122_fu_9519_p2[0:0] === 1'b1) ? 24'd8388608 : acc_1_V_159_fu_9500_p2);

assign acc_1_V_161_fu_9588_p2 = ($signed(select_ln340_2612_reg_13024) + $signed(select_ln340_2611_fu_9559_p3));

assign acc_1_V_162_fu_9639_p3 = ((and_ln786_2124_fu_9607_p2[0:0] === 1'b1) ? 24'd8388608 : acc_1_V_161_fu_9588_p2);

assign acc_1_V_163_fu_9676_p2 = ($signed(select_ln340_2614_reg_13030) + $signed(select_ln340_2613_fu_9647_p3));

assign acc_1_V_164_fu_9727_p3 = ((and_ln786_2126_fu_9695_p2[0:0] === 1'b1) ? 24'd8388608 : acc_1_V_163_fu_9676_p2);

assign acc_1_V_fu_8884_p2 = ($signed(select_ln340_2596_reg_12976) + $signed(tmp_data_1_V_149_reg_565));

assign acc_2_V_146_fu_9815_p3 = ((and_ln786_2128_fu_9783_p2[0:0] === 1'b1) ? 24'd8388608 : acc_2_V_fu_9764_p2);

assign acc_2_V_147_fu_9852_p2 = ($signed(select_ln340_2618_reg_13042) + $signed(select_ln340_2617_fu_9823_p3));

assign acc_2_V_148_fu_9903_p3 = ((and_ln786_2130_fu_9871_p2[0:0] === 1'b1) ? 24'd8388608 : acc_2_V_147_fu_9852_p2);

assign acc_2_V_149_fu_9940_p2 = ($signed(select_ln340_2620_reg_13048) + $signed(select_ln340_2619_fu_9911_p3));

assign acc_2_V_150_fu_9991_p3 = ((and_ln786_2132_fu_9959_p2[0:0] === 1'b1) ? 24'd8388608 : acc_2_V_149_fu_9940_p2);

assign acc_2_V_151_fu_10028_p2 = ($signed(select_ln340_2622_reg_13054) + $signed(select_ln340_2621_fu_9999_p3));

assign acc_2_V_152_fu_10079_p3 = ((and_ln786_2134_fu_10047_p2[0:0] === 1'b1) ? 24'd8388608 : acc_2_V_151_fu_10028_p2);

assign acc_2_V_153_fu_10116_p2 = ($signed(select_ln340_2624_reg_13060) + $signed(select_ln340_2623_fu_10087_p3));

assign acc_2_V_154_fu_10167_p3 = ((and_ln786_2136_fu_10135_p2[0:0] === 1'b1) ? 24'd8388608 : acc_2_V_153_fu_10116_p2);

assign acc_2_V_155_fu_10204_p2 = ($signed(select_ln340_2626_reg_13066) + $signed(select_ln340_2625_fu_10175_p3));

assign acc_2_V_156_fu_10255_p3 = ((and_ln786_2138_fu_10223_p2[0:0] === 1'b1) ? 24'd8388608 : acc_2_V_155_fu_10204_p2);

assign acc_2_V_157_fu_10292_p2 = ($signed(select_ln340_2628_reg_13072) + $signed(select_ln340_2627_fu_10263_p3));

assign acc_2_V_158_fu_10343_p3 = ((and_ln786_2140_fu_10311_p2[0:0] === 1'b1) ? 24'd8388608 : acc_2_V_157_fu_10292_p2);

assign acc_2_V_159_fu_10380_p2 = ($signed(select_ln340_2630_reg_13078) + $signed(select_ln340_2629_fu_10351_p3));

assign acc_2_V_160_fu_10431_p3 = ((and_ln786_2142_fu_10399_p2[0:0] === 1'b1) ? 24'd8388608 : acc_2_V_159_fu_10380_p2);

assign acc_2_V_161_fu_10468_p2 = ($signed(select_ln340_2632_reg_13084) + $signed(select_ln340_2631_fu_10439_p3));

assign acc_2_V_162_fu_10519_p3 = ((and_ln786_2144_fu_10487_p2[0:0] === 1'b1) ? 24'd8388608 : acc_2_V_161_fu_10468_p2);

assign acc_2_V_163_fu_10556_p2 = ($signed(select_ln340_2634_reg_13090) + $signed(select_ln340_2633_fu_10527_p3));

assign acc_2_V_164_fu_10607_p3 = ((and_ln786_2146_fu_10575_p2[0:0] === 1'b1) ? 24'd8388608 : acc_2_V_163_fu_10556_p2);

assign acc_2_V_fu_9764_p2 = ($signed(select_ln340_2616_reg_13036) + $signed(tmp_data_2_V_147_reg_576));

assign acc_3_V_146_fu_10695_p3 = ((and_ln786_2148_fu_10663_p2[0:0] === 1'b1) ? 24'd8388608 : acc_3_V_fu_10644_p2);

assign acc_3_V_147_fu_10732_p2 = ($signed(select_ln340_2638_reg_13102) + $signed(select_ln340_2637_fu_10703_p3));

assign acc_3_V_148_fu_10783_p3 = ((and_ln786_2150_fu_10751_p2[0:0] === 1'b1) ? 24'd8388608 : acc_3_V_147_fu_10732_p2);

assign acc_3_V_149_fu_10820_p2 = ($signed(select_ln340_2640_reg_13108) + $signed(select_ln340_2639_fu_10791_p3));

assign acc_3_V_150_fu_10871_p3 = ((and_ln786_2152_fu_10839_p2[0:0] === 1'b1) ? 24'd8388608 : acc_3_V_149_fu_10820_p2);

assign acc_3_V_151_fu_10908_p2 = ($signed(select_ln340_2642_reg_13114) + $signed(select_ln340_2641_fu_10879_p3));

assign acc_3_V_152_fu_10959_p3 = ((and_ln786_2154_fu_10927_p2[0:0] === 1'b1) ? 24'd8388608 : acc_3_V_151_fu_10908_p2);

assign acc_3_V_153_fu_10996_p2 = ($signed(select_ln340_2644_reg_13120) + $signed(select_ln340_2643_fu_10967_p3));

assign acc_3_V_154_fu_11047_p3 = ((and_ln786_2156_fu_11015_p2[0:0] === 1'b1) ? 24'd8388608 : acc_3_V_153_fu_10996_p2);

assign acc_3_V_155_fu_11084_p2 = ($signed(select_ln340_2646_reg_13126) + $signed(select_ln340_2645_fu_11055_p3));

assign acc_3_V_156_fu_11135_p3 = ((and_ln786_2158_fu_11103_p2[0:0] === 1'b1) ? 24'd8388608 : acc_3_V_155_fu_11084_p2);

assign acc_3_V_157_fu_11172_p2 = ($signed(select_ln340_2648_reg_13132) + $signed(select_ln340_2647_fu_11143_p3));

assign acc_3_V_158_fu_11223_p3 = ((and_ln786_2160_fu_11191_p2[0:0] === 1'b1) ? 24'd8388608 : acc_3_V_157_fu_11172_p2);

assign acc_3_V_159_fu_11260_p2 = ($signed(select_ln340_2650_reg_13138) + $signed(select_ln340_2649_fu_11231_p3));

assign acc_3_V_160_fu_11311_p3 = ((and_ln786_2162_fu_11279_p2[0:0] === 1'b1) ? 24'd8388608 : acc_3_V_159_fu_11260_p2);

assign acc_3_V_161_fu_11348_p2 = ($signed(select_ln340_2652_reg_13144) + $signed(select_ln340_2651_fu_11319_p3));

assign acc_3_V_162_fu_11399_p3 = ((and_ln786_2164_fu_11367_p2[0:0] === 1'b1) ? 24'd8388608 : acc_3_V_161_fu_11348_p2);

assign acc_3_V_163_fu_11436_p2 = ($signed(select_ln340_2654_reg_13150) + $signed(select_ln340_2653_fu_11407_p3));

assign acc_3_V_164_fu_11487_p3 = ((and_ln786_2166_fu_11455_p2[0:0] === 1'b1) ? 24'd8388608 : acc_3_V_163_fu_11436_p2);

assign acc_3_V_fu_10644_p2 = ($signed(select_ln340_2636_reg_13096) + $signed(tmp_data_3_V_145_reg_587));

assign add_ln1192_773_fu_8078_p2 = ($signed(sext_ln703_1542_fu_8071_p1) + $signed(sext_ln703_1543_fu_8075_p1));

assign add_ln1192_774_fu_8166_p2 = ($signed(sext_ln703_1544_fu_8159_p1) + $signed(sext_ln703_1545_fu_8163_p1));

assign add_ln1192_775_fu_8254_p2 = ($signed(sext_ln703_1546_fu_8247_p1) + $signed(sext_ln703_1547_fu_8251_p1));

assign add_ln1192_776_fu_8342_p2 = ($signed(sext_ln703_1548_fu_8335_p1) + $signed(sext_ln703_1549_fu_8339_p1));

assign add_ln1192_777_fu_8430_p2 = ($signed(sext_ln703_1550_fu_8423_p1) + $signed(sext_ln703_1551_fu_8427_p1));

assign add_ln1192_778_fu_8518_p2 = ($signed(sext_ln703_1552_fu_8511_p1) + $signed(sext_ln703_1553_fu_8515_p1));

assign add_ln1192_779_fu_8606_p2 = ($signed(sext_ln703_1554_fu_8599_p1) + $signed(sext_ln703_1555_fu_8603_p1));

assign add_ln1192_780_fu_8694_p2 = ($signed(sext_ln703_1556_fu_8687_p1) + $signed(sext_ln703_1557_fu_8691_p1));

assign add_ln1192_781_fu_8782_p2 = ($signed(sext_ln703_1558_fu_8775_p1) + $signed(sext_ln703_1559_fu_8779_p1));

assign add_ln1192_782_fu_8870_p2 = ($signed(sext_ln703_1560_fu_8863_p1) + $signed(sext_ln703_1561_fu_8867_p1));

assign add_ln1192_783_fu_8958_p2 = ($signed(sext_ln703_1562_fu_8951_p1) + $signed(sext_ln703_1563_fu_8955_p1));

assign add_ln1192_784_fu_9046_p2 = ($signed(sext_ln703_1564_fu_9039_p1) + $signed(sext_ln703_1565_fu_9043_p1));

assign add_ln1192_785_fu_9134_p2 = ($signed(sext_ln703_1566_fu_9127_p1) + $signed(sext_ln703_1567_fu_9131_p1));

assign add_ln1192_786_fu_9222_p2 = ($signed(sext_ln703_1568_fu_9215_p1) + $signed(sext_ln703_1569_fu_9219_p1));

assign add_ln1192_787_fu_9310_p2 = ($signed(sext_ln703_1570_fu_9303_p1) + $signed(sext_ln703_1571_fu_9307_p1));

assign add_ln1192_788_fu_9398_p2 = ($signed(sext_ln703_1572_fu_9391_p1) + $signed(sext_ln703_1573_fu_9395_p1));

assign add_ln1192_789_fu_9486_p2 = ($signed(sext_ln703_1574_fu_9479_p1) + $signed(sext_ln703_1575_fu_9483_p1));

assign add_ln1192_790_fu_9574_p2 = ($signed(sext_ln703_1576_fu_9567_p1) + $signed(sext_ln703_1577_fu_9571_p1));

assign add_ln1192_791_fu_9662_p2 = ($signed(sext_ln703_1578_fu_9655_p1) + $signed(sext_ln703_1579_fu_9659_p1));

assign add_ln1192_792_fu_9750_p2 = ($signed(sext_ln703_1580_fu_9743_p1) + $signed(sext_ln703_1581_fu_9747_p1));

assign add_ln1192_793_fu_9838_p2 = ($signed(sext_ln703_1582_fu_9831_p1) + $signed(sext_ln703_1583_fu_9835_p1));

assign add_ln1192_794_fu_9926_p2 = ($signed(sext_ln703_1584_fu_9919_p1) + $signed(sext_ln703_1585_fu_9923_p1));

assign add_ln1192_795_fu_10014_p2 = ($signed(sext_ln703_1586_fu_10007_p1) + $signed(sext_ln703_1587_fu_10011_p1));

assign add_ln1192_796_fu_10102_p2 = ($signed(sext_ln703_1588_fu_10095_p1) + $signed(sext_ln703_1589_fu_10099_p1));

assign add_ln1192_797_fu_10190_p2 = ($signed(sext_ln703_1590_fu_10183_p1) + $signed(sext_ln703_1591_fu_10187_p1));

assign add_ln1192_798_fu_10278_p2 = ($signed(sext_ln703_1592_fu_10271_p1) + $signed(sext_ln703_1593_fu_10275_p1));

assign add_ln1192_799_fu_10366_p2 = ($signed(sext_ln703_1594_fu_10359_p1) + $signed(sext_ln703_1595_fu_10363_p1));

assign add_ln1192_800_fu_10454_p2 = ($signed(sext_ln703_1596_fu_10447_p1) + $signed(sext_ln703_1597_fu_10451_p1));

assign add_ln1192_801_fu_10542_p2 = ($signed(sext_ln703_1598_fu_10535_p1) + $signed(sext_ln703_1599_fu_10539_p1));

assign add_ln1192_802_fu_10630_p2 = ($signed(sext_ln703_1600_fu_10623_p1) + $signed(sext_ln703_1601_fu_10627_p1));

assign add_ln1192_803_fu_10718_p2 = ($signed(sext_ln703_1602_fu_10711_p1) + $signed(sext_ln703_1603_fu_10715_p1));

assign add_ln1192_804_fu_10806_p2 = ($signed(sext_ln703_1604_fu_10799_p1) + $signed(sext_ln703_1605_fu_10803_p1));

assign add_ln1192_805_fu_10894_p2 = ($signed(sext_ln703_1606_fu_10887_p1) + $signed(sext_ln703_1607_fu_10891_p1));

assign add_ln1192_806_fu_10982_p2 = ($signed(sext_ln703_1608_fu_10975_p1) + $signed(sext_ln703_1609_fu_10979_p1));

assign add_ln1192_807_fu_11070_p2 = ($signed(sext_ln703_1610_fu_11063_p1) + $signed(sext_ln703_1611_fu_11067_p1));

assign add_ln1192_808_fu_11158_p2 = ($signed(sext_ln703_1612_fu_11151_p1) + $signed(sext_ln703_1613_fu_11155_p1));

assign add_ln1192_809_fu_11246_p2 = ($signed(sext_ln703_1614_fu_11239_p1) + $signed(sext_ln703_1615_fu_11243_p1));

assign add_ln1192_810_fu_11334_p2 = ($signed(sext_ln703_1616_fu_11327_p1) + $signed(sext_ln703_1617_fu_11331_p1));

assign add_ln1192_811_fu_11422_p2 = ($signed(sext_ln703_1618_fu_11415_p1) + $signed(sext_ln703_1619_fu_11419_p1));

assign add_ln1192_fu_7990_p2 = ($signed(sext_ln703_fu_7983_p1) + $signed(sext_ln703_1541_fu_7987_p1));

assign add_ln389_fu_11508_p2 = (pX_3_load_reg_11976 + 32'd1);

assign add_ln391_fu_11519_p2 = (sX_3_load_reg_11966 + 32'd1);

assign add_ln415_765_fu_2646_p2 = (trunc_ln708_s_reg_12032 + zext_ln415_765_fu_2643_p1);

assign add_ln415_766_fu_2783_p2 = (trunc_ln708_761_reg_12055 + zext_ln415_766_fu_2780_p1);

assign add_ln415_767_fu_2920_p2 = (trunc_ln708_762_reg_12078 + zext_ln415_767_fu_2917_p1);

assign add_ln415_768_fu_3057_p2 = (trunc_ln708_763_reg_12101 + zext_ln415_768_fu_3054_p1);

assign add_ln415_769_fu_3194_p2 = (trunc_ln708_764_reg_12124 + zext_ln415_769_fu_3191_p1);

assign add_ln415_770_fu_3331_p2 = (trunc_ln708_765_reg_12147 + zext_ln415_770_fu_3328_p1);

assign add_ln415_771_fu_3468_p2 = (trunc_ln708_766_reg_12170 + zext_ln415_771_fu_3465_p1);

assign add_ln415_772_fu_3605_p2 = (trunc_ln708_767_reg_12193 + zext_ln415_772_fu_3602_p1);

assign add_ln415_773_fu_3742_p2 = (trunc_ln708_768_reg_12216 + zext_ln415_773_fu_3739_p1);

assign add_ln415_774_fu_3879_p2 = (trunc_ln708_769_reg_12239 + zext_ln415_774_fu_3876_p1);

assign add_ln415_775_fu_4016_p2 = (trunc_ln708_770_reg_12262 + zext_ln415_775_fu_4013_p1);

assign add_ln415_776_fu_4153_p2 = (trunc_ln708_771_reg_12285 + zext_ln415_776_fu_4150_p1);

assign add_ln415_777_fu_4290_p2 = (trunc_ln708_772_reg_12308 + zext_ln415_777_fu_4287_p1);

assign add_ln415_778_fu_4427_p2 = (trunc_ln708_773_reg_12331 + zext_ln415_778_fu_4424_p1);

assign add_ln415_779_fu_4564_p2 = (trunc_ln708_774_reg_12354 + zext_ln415_779_fu_4561_p1);

assign add_ln415_780_fu_4701_p2 = (trunc_ln708_775_reg_12377 + zext_ln415_780_fu_4698_p1);

assign add_ln415_781_fu_4838_p2 = (trunc_ln708_776_reg_12400 + zext_ln415_781_fu_4835_p1);

assign add_ln415_782_fu_4975_p2 = (trunc_ln708_777_reg_12423 + zext_ln415_782_fu_4972_p1);

assign add_ln415_783_fu_5112_p2 = (trunc_ln708_778_reg_12446 + zext_ln415_783_fu_5109_p1);

assign add_ln415_784_fu_5249_p2 = (trunc_ln708_779_reg_12469 + zext_ln415_784_fu_5246_p1);

assign add_ln415_785_fu_5386_p2 = (trunc_ln708_780_reg_12492 + zext_ln415_785_fu_5383_p1);

assign add_ln415_786_fu_5523_p2 = (trunc_ln708_781_reg_12515 + zext_ln415_786_fu_5520_p1);

assign add_ln415_787_fu_5660_p2 = (trunc_ln708_782_reg_12538 + zext_ln415_787_fu_5657_p1);

assign add_ln415_788_fu_5797_p2 = (trunc_ln708_783_reg_12561 + zext_ln415_788_fu_5794_p1);

assign add_ln415_789_fu_5934_p2 = (trunc_ln708_784_reg_12584 + zext_ln415_789_fu_5931_p1);

assign add_ln415_790_fu_6071_p2 = (trunc_ln708_785_reg_12607 + zext_ln415_790_fu_6068_p1);

assign add_ln415_791_fu_6208_p2 = (trunc_ln708_786_reg_12630 + zext_ln415_791_fu_6205_p1);

assign add_ln415_792_fu_6345_p2 = (trunc_ln708_787_reg_12653 + zext_ln415_792_fu_6342_p1);

assign add_ln415_793_fu_6482_p2 = (trunc_ln708_788_reg_12676 + zext_ln415_793_fu_6479_p1);

assign add_ln415_794_fu_6619_p2 = (trunc_ln708_789_reg_12699 + zext_ln415_794_fu_6616_p1);

assign add_ln415_795_fu_6756_p2 = (trunc_ln708_790_reg_12722 + zext_ln415_795_fu_6753_p1);

assign add_ln415_796_fu_6893_p2 = (trunc_ln708_791_reg_12745 + zext_ln415_796_fu_6890_p1);

assign add_ln415_797_fu_7030_p2 = (trunc_ln708_792_reg_12768 + zext_ln415_797_fu_7027_p1);

assign add_ln415_798_fu_7167_p2 = (trunc_ln708_793_reg_12791 + zext_ln415_798_fu_7164_p1);

assign add_ln415_799_fu_7304_p2 = (trunc_ln708_794_reg_12814 + zext_ln415_799_fu_7301_p1);

assign add_ln415_800_fu_7441_p2 = (trunc_ln708_795_reg_12837 + zext_ln415_800_fu_7438_p1);

assign add_ln415_801_fu_7578_p2 = (trunc_ln708_796_reg_12860 + zext_ln415_801_fu_7575_p1);

assign add_ln415_802_fu_7715_p2 = (trunc_ln708_797_reg_12883 + zext_ln415_802_fu_7712_p1);

assign add_ln415_803_fu_7855_p2 = ($signed(sext_ln708_fu_7842_p1) + $signed(zext_ln415_803_fu_7852_p1));

assign add_ln415_fu_2509_p2 = (trunc_ln_reg_12009 + zext_ln415_fu_2506_p1);

assign and_ln360_fu_868_p2 = (icmp_ln360_fu_842_p2 & icmp_ln360_4_fu_862_p2);

assign and_ln416_750_fu_2665_p2 = (xor_ln416_750_fu_2659_p2 & tmp_5908_fu_2636_p3);

assign and_ln416_751_fu_2802_p2 = (xor_ln416_751_fu_2796_p2 & tmp_5915_fu_2773_p3);

assign and_ln416_752_fu_2939_p2 = (xor_ln416_752_fu_2933_p2 & tmp_5922_fu_2910_p3);

assign and_ln416_753_fu_3076_p2 = (xor_ln416_753_fu_3070_p2 & tmp_5929_fu_3047_p3);

assign and_ln416_754_fu_3213_p2 = (xor_ln416_754_fu_3207_p2 & tmp_5936_fu_3184_p3);

assign and_ln416_755_fu_3350_p2 = (xor_ln416_755_fu_3344_p2 & tmp_5943_fu_3321_p3);

assign and_ln416_756_fu_3487_p2 = (xor_ln416_756_fu_3481_p2 & tmp_5950_fu_3458_p3);

assign and_ln416_757_fu_3624_p2 = (xor_ln416_757_fu_3618_p2 & tmp_5957_fu_3595_p3);

assign and_ln416_758_fu_3761_p2 = (xor_ln416_758_fu_3755_p2 & tmp_5964_fu_3732_p3);

assign and_ln416_759_fu_3898_p2 = (xor_ln416_759_fu_3892_p2 & tmp_5971_fu_3869_p3);

assign and_ln416_760_fu_4035_p2 = (xor_ln416_760_fu_4029_p2 & tmp_5978_fu_4006_p3);

assign and_ln416_761_fu_4172_p2 = (xor_ln416_761_fu_4166_p2 & tmp_5985_fu_4143_p3);

assign and_ln416_762_fu_4309_p2 = (xor_ln416_762_fu_4303_p2 & tmp_5992_fu_4280_p3);

assign and_ln416_763_fu_4446_p2 = (xor_ln416_763_fu_4440_p2 & tmp_5999_fu_4417_p3);

assign and_ln416_764_fu_4583_p2 = (xor_ln416_764_fu_4577_p2 & tmp_6006_fu_4554_p3);

assign and_ln416_765_fu_4720_p2 = (xor_ln416_765_fu_4714_p2 & tmp_6013_fu_4691_p3);

assign and_ln416_766_fu_4857_p2 = (xor_ln416_766_fu_4851_p2 & tmp_6020_fu_4828_p3);

assign and_ln416_767_fu_4994_p2 = (xor_ln416_767_fu_4988_p2 & tmp_6027_fu_4965_p3);

assign and_ln416_768_fu_5131_p2 = (xor_ln416_768_fu_5125_p2 & tmp_6034_fu_5102_p3);

assign and_ln416_769_fu_5268_p2 = (xor_ln416_769_fu_5262_p2 & tmp_6041_fu_5239_p3);

assign and_ln416_770_fu_5405_p2 = (xor_ln416_770_fu_5399_p2 & tmp_6048_fu_5376_p3);

assign and_ln416_771_fu_5542_p2 = (xor_ln416_771_fu_5536_p2 & tmp_6055_fu_5513_p3);

assign and_ln416_772_fu_5679_p2 = (xor_ln416_772_fu_5673_p2 & tmp_6062_fu_5650_p3);

assign and_ln416_773_fu_5816_p2 = (xor_ln416_773_fu_5810_p2 & tmp_6069_fu_5787_p3);

assign and_ln416_774_fu_5953_p2 = (xor_ln416_774_fu_5947_p2 & tmp_6076_fu_5924_p3);

assign and_ln416_775_fu_6090_p2 = (xor_ln416_775_fu_6084_p2 & tmp_6083_fu_6061_p3);

assign and_ln416_776_fu_6227_p2 = (xor_ln416_776_fu_6221_p2 & tmp_6090_fu_6198_p3);

assign and_ln416_777_fu_6364_p2 = (xor_ln416_777_fu_6358_p2 & tmp_6097_fu_6335_p3);

assign and_ln416_778_fu_6501_p2 = (xor_ln416_778_fu_6495_p2 & tmp_6104_fu_6472_p3);

assign and_ln416_779_fu_6638_p2 = (xor_ln416_779_fu_6632_p2 & tmp_6111_fu_6609_p3);

assign and_ln416_780_fu_6775_p2 = (xor_ln416_780_fu_6769_p2 & tmp_6118_fu_6746_p3);

assign and_ln416_781_fu_6912_p2 = (xor_ln416_781_fu_6906_p2 & tmp_6125_fu_6883_p3);

assign and_ln416_782_fu_7049_p2 = (xor_ln416_782_fu_7043_p2 & tmp_6132_fu_7020_p3);

assign and_ln416_783_fu_7186_p2 = (xor_ln416_783_fu_7180_p2 & tmp_6139_fu_7157_p3);

assign and_ln416_784_fu_7323_p2 = (xor_ln416_784_fu_7317_p2 & tmp_6146_fu_7294_p3);

assign and_ln416_785_fu_7460_p2 = (xor_ln416_785_fu_7454_p2 & tmp_6153_fu_7431_p3);

assign and_ln416_786_fu_7597_p2 = (xor_ln416_786_fu_7591_p2 & tmp_6160_fu_7568_p3);

assign and_ln416_787_fu_7734_p2 = (xor_ln416_787_fu_7728_p2 & tmp_6167_fu_7705_p3);

assign and_ln416_788_fu_7875_p2 = (xor_ln416_788_fu_7869_p2 & tmp_6174_fu_7845_p3);

assign and_ln416_fu_2528_p2 = (xor_ln416_fu_2522_p2 & tmp_5901_fu_2499_p3);

assign and_ln785_750_fu_2702_p2 = (xor_ln779_1_fu_2679_p2 & or_ln785_1_fu_2696_p2);

assign and_ln785_751_fu_2839_p2 = (xor_ln779_2_fu_2816_p2 & or_ln785_2_fu_2833_p2);

assign and_ln785_752_fu_2976_p2 = (xor_ln779_3_fu_2953_p2 & or_ln785_3_fu_2970_p2);

assign and_ln785_753_fu_3113_p2 = (xor_ln779_4_fu_3090_p2 & or_ln785_4_fu_3107_p2);

assign and_ln785_754_fu_3250_p2 = (xor_ln779_5_fu_3227_p2 & or_ln785_514_fu_3244_p2);

assign and_ln785_755_fu_3387_p2 = (xor_ln779_6_fu_3364_p2 & or_ln785_6_fu_3381_p2);

assign and_ln785_756_fu_3524_p2 = (xor_ln779_7_fu_3501_p2 & or_ln785_7_fu_3518_p2);

assign and_ln785_757_fu_3661_p2 = (xor_ln779_8_fu_3638_p2 & or_ln785_8_fu_3655_p2);

assign and_ln785_758_fu_3798_p2 = (xor_ln779_9_fu_3775_p2 & or_ln785_9_fu_3792_p2);

assign and_ln785_759_fu_3935_p2 = (xor_ln779_10_fu_3912_p2 & or_ln785_10_fu_3929_p2);

assign and_ln785_760_fu_4072_p2 = (xor_ln779_11_fu_4049_p2 & or_ln785_11_fu_4066_p2);

assign and_ln785_761_fu_4209_p2 = (xor_ln779_12_fu_4186_p2 & or_ln785_12_fu_4203_p2);

assign and_ln785_762_fu_4346_p2 = (xor_ln779_13_fu_4323_p2 & or_ln785_13_fu_4340_p2);

assign and_ln785_763_fu_4483_p2 = (xor_ln779_14_fu_4460_p2 & or_ln785_14_fu_4477_p2);

assign and_ln785_764_fu_4620_p2 = (xor_ln779_15_fu_4597_p2 & or_ln785_15_fu_4614_p2);

assign and_ln785_765_fu_4757_p2 = (xor_ln779_16_fu_4734_p2 & or_ln785_16_fu_4751_p2);

assign and_ln785_766_fu_4894_p2 = (xor_ln779_17_fu_4871_p2 & or_ln785_17_fu_4888_p2);

assign and_ln785_767_fu_5031_p2 = (xor_ln779_18_fu_5008_p2 & or_ln785_18_fu_5025_p2);

assign and_ln785_768_fu_5168_p2 = (xor_ln779_19_fu_5145_p2 & or_ln785_19_fu_5162_p2);

assign and_ln785_769_fu_5305_p2 = (xor_ln779_20_fu_5282_p2 & or_ln785_20_fu_5299_p2);

assign and_ln785_770_fu_5442_p2 = (xor_ln779_21_fu_5419_p2 & or_ln785_21_fu_5436_p2);

assign and_ln785_771_fu_5579_p2 = (xor_ln779_22_fu_5556_p2 & or_ln785_22_fu_5573_p2);

assign and_ln785_772_fu_5716_p2 = (xor_ln779_23_fu_5693_p2 & or_ln785_23_fu_5710_p2);

assign and_ln785_773_fu_5853_p2 = (xor_ln779_24_fu_5830_p2 & or_ln785_24_fu_5847_p2);

assign and_ln785_774_fu_5990_p2 = (xor_ln779_25_fu_5967_p2 & or_ln785_25_fu_5984_p2);

assign and_ln785_775_fu_6127_p2 = (xor_ln779_26_fu_6104_p2 & or_ln785_26_fu_6121_p2);

assign and_ln785_776_fu_6264_p2 = (xor_ln779_27_fu_6241_p2 & or_ln785_27_fu_6258_p2);

assign and_ln785_777_fu_6401_p2 = (xor_ln779_28_fu_6378_p2 & or_ln785_28_fu_6395_p2);

assign and_ln785_778_fu_6538_p2 = (xor_ln779_29_fu_6515_p2 & or_ln785_29_fu_6532_p2);

assign and_ln785_779_fu_6675_p2 = (xor_ln779_30_fu_6652_p2 & or_ln785_30_fu_6669_p2);

assign and_ln785_780_fu_6812_p2 = (xor_ln779_31_fu_6789_p2 & or_ln785_31_fu_6806_p2);

assign and_ln785_781_fu_6949_p2 = (xor_ln779_32_fu_6926_p2 & or_ln785_32_fu_6943_p2);

assign and_ln785_782_fu_7086_p2 = (xor_ln779_33_fu_7063_p2 & or_ln785_33_fu_7080_p2);

assign and_ln785_783_fu_7223_p2 = (xor_ln779_34_fu_7200_p2 & or_ln785_34_fu_7217_p2);

assign and_ln785_784_fu_7360_p2 = (xor_ln779_35_fu_7337_p2 & or_ln785_35_fu_7354_p2);

assign and_ln785_785_fu_7497_p2 = (xor_ln779_36_fu_7474_p2 & or_ln785_36_fu_7491_p2);

assign and_ln785_786_fu_7634_p2 = (xor_ln779_37_fu_7611_p2 & or_ln785_37_fu_7628_p2);

assign and_ln785_787_fu_7771_p2 = (xor_ln779_38_fu_7748_p2 & or_ln785_38_fu_7765_p2);

assign and_ln785_788_fu_7912_p2 = (xor_ln779_39_fu_7889_p2 & or_ln785_39_fu_7906_p2);

assign and_ln785_fu_2565_p2 = (xor_ln779_fu_2542_p2 & or_ln785_fu_2559_p2);

assign and_ln786_10_fu_3941_p2 = (tmp_5974_fu_3904_p3 & select_ln416_759_fu_3917_p3);

assign and_ln786_11_fu_4078_p2 = (tmp_5981_fu_4041_p3 & select_ln416_760_fu_4054_p3);

assign and_ln786_12_fu_4215_p2 = (tmp_5988_fu_4178_p3 & select_ln416_761_fu_4191_p3);

assign and_ln786_13_fu_4352_p2 = (tmp_5995_fu_4315_p3 & select_ln416_762_fu_4328_p3);

assign and_ln786_14_fu_4489_p2 = (tmp_6002_fu_4452_p3 & select_ln416_763_fu_4465_p3);

assign and_ln786_15_fu_4626_p2 = (tmp_6009_fu_4589_p3 & select_ln416_764_fu_4602_p3);

assign and_ln786_16_fu_4763_p2 = (tmp_6016_fu_4726_p3 & select_ln416_765_fu_4739_p3);

assign and_ln786_17_fu_4900_p2 = (tmp_6023_fu_4863_p3 & select_ln416_766_fu_4876_p3);

assign and_ln786_18_fu_5037_p2 = (tmp_6030_fu_5000_p3 & select_ln416_767_fu_5013_p3);

assign and_ln786_19_fu_5174_p2 = (tmp_6037_fu_5137_p3 & select_ln416_768_fu_5150_p3);

assign and_ln786_1_fu_2708_p2 = (tmp_5911_fu_2671_p3 & select_ln416_750_fu_2684_p3);

assign and_ln786_2087_fu_2589_p2 = (xor_ln786_fu_2583_p2 & tmp_5900_reg_12001);

assign and_ln786_2088_fu_8023_p2 = (xor_ln786_1287_fu_8017_p2 & tmp_5905_fu_7996_p3);

assign and_ln786_2089_fu_2726_p2 = (xor_ln786_1445_fu_2720_p2 & tmp_5907_reg_12024);

assign and_ln786_2090_fu_8111_p2 = (xor_ln786_1288_fu_8105_p2 & tmp_5912_fu_8084_p3);

assign and_ln786_2091_fu_2863_p2 = (xor_ln786_1446_fu_2857_p2 & tmp_5914_reg_12047);

assign and_ln786_2092_fu_8199_p2 = (xor_ln786_1289_fu_8193_p2 & tmp_5919_fu_8172_p3);

assign and_ln786_2093_fu_3000_p2 = (xor_ln786_1447_fu_2994_p2 & tmp_5921_reg_12070);

assign and_ln786_2094_fu_8287_p2 = (xor_ln786_1290_fu_8281_p2 & tmp_5926_fu_8260_p3);

assign and_ln786_2095_fu_3137_p2 = (xor_ln786_1448_fu_3131_p2 & tmp_5928_reg_12093);

assign and_ln786_2096_fu_8375_p2 = (xor_ln786_1291_fu_8369_p2 & tmp_5933_fu_8348_p3);

assign and_ln786_2097_fu_3274_p2 = (xor_ln786_1449_fu_3268_p2 & tmp_5935_reg_12116);

assign and_ln786_2098_fu_8463_p2 = (xor_ln786_1292_fu_8457_p2 & tmp_5940_fu_8436_p3);

assign and_ln786_2099_fu_3411_p2 = (xor_ln786_1450_fu_3405_p2 & tmp_5942_reg_12139);

assign and_ln786_20_fu_5311_p2 = (tmp_6044_fu_5274_p3 & select_ln416_769_fu_5287_p3);

assign and_ln786_2100_fu_8551_p2 = (xor_ln786_1293_fu_8545_p2 & tmp_5947_fu_8524_p3);

assign and_ln786_2101_fu_3548_p2 = (xor_ln786_1451_fu_3542_p2 & tmp_5949_reg_12162);

assign and_ln786_2102_fu_8639_p2 = (xor_ln786_1294_fu_8633_p2 & tmp_5954_fu_8612_p3);

assign and_ln786_2103_fu_3685_p2 = (xor_ln786_1452_fu_3679_p2 & tmp_5956_reg_12185);

assign and_ln786_2104_fu_8727_p2 = (xor_ln786_1295_fu_8721_p2 & tmp_5961_fu_8700_p3);

assign and_ln786_2105_fu_3822_p2 = (xor_ln786_1453_fu_3816_p2 & tmp_5963_reg_12208);

assign and_ln786_2106_fu_8815_p2 = (xor_ln786_1296_fu_8809_p2 & tmp_5968_fu_8788_p3);

assign and_ln786_2107_fu_3959_p2 = (xor_ln786_1454_fu_3953_p2 & tmp_5970_reg_12231);

assign and_ln786_2108_fu_8903_p2 = (xor_ln786_1297_fu_8897_p2 & tmp_5975_fu_8876_p3);

assign and_ln786_2109_fu_4096_p2 = (xor_ln786_1455_fu_4090_p2 & tmp_5977_reg_12254);

assign and_ln786_2110_fu_8991_p2 = (xor_ln786_1298_fu_8985_p2 & tmp_5982_fu_8964_p3);

assign and_ln786_2111_fu_4233_p2 = (xor_ln786_1456_fu_4227_p2 & tmp_5984_reg_12277);

assign and_ln786_2112_fu_9079_p2 = (xor_ln786_1299_fu_9073_p2 & tmp_5989_fu_9052_p3);

assign and_ln786_2113_fu_4370_p2 = (xor_ln786_1457_fu_4364_p2 & tmp_5991_reg_12300);

assign and_ln786_2114_fu_9167_p2 = (xor_ln786_1300_fu_9161_p2 & tmp_5996_fu_9140_p3);

assign and_ln786_2115_fu_4507_p2 = (xor_ln786_1458_fu_4501_p2 & tmp_5998_reg_12323);

assign and_ln786_2116_fu_9255_p2 = (xor_ln786_1301_fu_9249_p2 & tmp_6003_fu_9228_p3);

assign and_ln786_2117_fu_4644_p2 = (xor_ln786_1459_fu_4638_p2 & tmp_6005_reg_12346);

assign and_ln786_2118_fu_9343_p2 = (xor_ln786_1302_fu_9337_p2 & tmp_6010_fu_9316_p3);

assign and_ln786_2119_fu_4781_p2 = (xor_ln786_1460_fu_4775_p2 & tmp_6012_reg_12369);

assign and_ln786_2120_fu_9431_p2 = (xor_ln786_1303_fu_9425_p2 & tmp_6017_fu_9404_p3);

assign and_ln786_2121_fu_4918_p2 = (xor_ln786_1461_fu_4912_p2 & tmp_6019_reg_12392);

assign and_ln786_2122_fu_9519_p2 = (xor_ln786_1304_fu_9513_p2 & tmp_6024_fu_9492_p3);

assign and_ln786_2123_fu_5055_p2 = (xor_ln786_1462_fu_5049_p2 & tmp_6026_reg_12415);

assign and_ln786_2124_fu_9607_p2 = (xor_ln786_1305_fu_9601_p2 & tmp_6031_fu_9580_p3);

assign and_ln786_2125_fu_5192_p2 = (xor_ln786_1463_fu_5186_p2 & tmp_6033_reg_12438);

assign and_ln786_2126_fu_9695_p2 = (xor_ln786_1306_fu_9689_p2 & tmp_6038_fu_9668_p3);

assign and_ln786_2127_fu_5329_p2 = (xor_ln786_1464_fu_5323_p2 & tmp_6040_reg_12461);

assign and_ln786_2128_fu_9783_p2 = (xor_ln786_1307_fu_9777_p2 & tmp_6045_fu_9756_p3);

assign and_ln786_2129_fu_5466_p2 = (xor_ln786_1465_fu_5460_p2 & tmp_6047_reg_12484);

assign and_ln786_2130_fu_9871_p2 = (xor_ln786_1308_fu_9865_p2 & tmp_6052_fu_9844_p3);

assign and_ln786_2131_fu_5603_p2 = (xor_ln786_1466_fu_5597_p2 & tmp_6054_reg_12507);

assign and_ln786_2132_fu_9959_p2 = (xor_ln786_1309_fu_9953_p2 & tmp_6059_fu_9932_p3);

assign and_ln786_2133_fu_5740_p2 = (xor_ln786_1467_fu_5734_p2 & tmp_6061_reg_12530);

assign and_ln786_2134_fu_10047_p2 = (xor_ln786_1310_fu_10041_p2 & tmp_6066_fu_10020_p3);

assign and_ln786_2135_fu_5877_p2 = (xor_ln786_1468_fu_5871_p2 & tmp_6068_reg_12553);

assign and_ln786_2136_fu_10135_p2 = (xor_ln786_1311_fu_10129_p2 & tmp_6073_fu_10108_p3);

assign and_ln786_2137_fu_6014_p2 = (xor_ln786_1469_fu_6008_p2 & tmp_6075_reg_12576);

assign and_ln786_2138_fu_10223_p2 = (xor_ln786_1312_fu_10217_p2 & tmp_6080_fu_10196_p3);

assign and_ln786_2139_fu_6151_p2 = (xor_ln786_1470_fu_6145_p2 & tmp_6082_reg_12599);

assign and_ln786_2140_fu_10311_p2 = (xor_ln786_1313_fu_10305_p2 & tmp_6087_fu_10284_p3);

assign and_ln786_2141_fu_6288_p2 = (xor_ln786_1471_fu_6282_p2 & tmp_6089_reg_12622);

assign and_ln786_2142_fu_10399_p2 = (xor_ln786_1314_fu_10393_p2 & tmp_6094_fu_10372_p3);

assign and_ln786_2143_fu_6425_p2 = (xor_ln786_1472_fu_6419_p2 & tmp_6096_reg_12645);

assign and_ln786_2144_fu_10487_p2 = (xor_ln786_1315_fu_10481_p2 & tmp_6101_fu_10460_p3);

assign and_ln786_2145_fu_6562_p2 = (xor_ln786_1473_fu_6556_p2 & tmp_6103_reg_12668);

assign and_ln786_2146_fu_10575_p2 = (xor_ln786_1316_fu_10569_p2 & tmp_6108_fu_10548_p3);

assign and_ln786_2147_fu_6699_p2 = (xor_ln786_1474_fu_6693_p2 & tmp_6110_reg_12691);

assign and_ln786_2148_fu_10663_p2 = (xor_ln786_1317_fu_10657_p2 & tmp_6115_fu_10636_p3);

assign and_ln786_2149_fu_6836_p2 = (xor_ln786_1475_fu_6830_p2 & tmp_6117_reg_12714);

assign and_ln786_2150_fu_10751_p2 = (xor_ln786_1318_fu_10745_p2 & tmp_6122_fu_10724_p3);

assign and_ln786_2151_fu_6973_p2 = (xor_ln786_1476_fu_6967_p2 & tmp_6124_reg_12737);

assign and_ln786_2152_fu_10839_p2 = (xor_ln786_1319_fu_10833_p2 & tmp_6129_fu_10812_p3);

assign and_ln786_2153_fu_7110_p2 = (xor_ln786_1477_fu_7104_p2 & tmp_6131_reg_12760);

assign and_ln786_2154_fu_10927_p2 = (xor_ln786_1320_fu_10921_p2 & tmp_6136_fu_10900_p3);

assign and_ln786_2155_fu_7247_p2 = (xor_ln786_1478_fu_7241_p2 & tmp_6138_reg_12783);

assign and_ln786_2156_fu_11015_p2 = (xor_ln786_1321_fu_11009_p2 & tmp_6143_fu_10988_p3);

assign and_ln786_2157_fu_7384_p2 = (xor_ln786_1479_fu_7378_p2 & tmp_6145_reg_12806);

assign and_ln786_2158_fu_11103_p2 = (xor_ln786_1322_fu_11097_p2 & tmp_6150_fu_11076_p3);

assign and_ln786_2159_fu_7521_p2 = (xor_ln786_1480_fu_7515_p2 & tmp_6152_reg_12829);

assign and_ln786_2160_fu_11191_p2 = (xor_ln786_1323_fu_11185_p2 & tmp_6157_fu_11164_p3);

assign and_ln786_2161_fu_7658_p2 = (xor_ln786_1481_fu_7652_p2 & tmp_6159_reg_12852);

assign and_ln786_2162_fu_11279_p2 = (xor_ln786_1324_fu_11273_p2 & tmp_6164_fu_11252_p3);

assign and_ln786_2163_fu_7795_p2 = (xor_ln786_1482_fu_7789_p2 & tmp_6166_reg_12875);

assign and_ln786_2164_fu_11367_p2 = (xor_ln786_1325_fu_11361_p2 & tmp_6171_fu_11340_p3);

assign and_ln786_2165_fu_7936_p2 = (xor_ln786_1483_fu_7930_p2 & tmp_6173_reg_12898);

assign and_ln786_2166_fu_11455_p2 = (xor_ln786_1326_fu_11449_p2 & tmp_6178_fu_11428_p3);

assign and_ln786_21_fu_5448_p2 = (tmp_6051_fu_5411_p3 & select_ln416_770_fu_5424_p3);

assign and_ln786_22_fu_5585_p2 = (tmp_6058_fu_5548_p3 & select_ln416_771_fu_5561_p3);

assign and_ln786_23_fu_5722_p2 = (tmp_6065_fu_5685_p3 & select_ln416_772_fu_5698_p3);

assign and_ln786_24_fu_5859_p2 = (tmp_6072_fu_5822_p3 & select_ln416_773_fu_5835_p3);

assign and_ln786_25_fu_5996_p2 = (tmp_6079_fu_5959_p3 & select_ln416_774_fu_5972_p3);

assign and_ln786_26_fu_6133_p2 = (tmp_6086_fu_6096_p3 & select_ln416_775_fu_6109_p3);

assign and_ln786_27_fu_6270_p2 = (tmp_6093_fu_6233_p3 & select_ln416_776_fu_6246_p3);

assign and_ln786_28_fu_6407_p2 = (tmp_6100_fu_6370_p3 & select_ln416_777_fu_6383_p3);

assign and_ln786_29_fu_6544_p2 = (tmp_6107_fu_6507_p3 & select_ln416_778_fu_6520_p3);

assign and_ln786_2_fu_2845_p2 = (tmp_5918_fu_2808_p3 & select_ln416_751_fu_2821_p3);

assign and_ln786_30_fu_6681_p2 = (tmp_6114_fu_6644_p3 & select_ln416_779_fu_6657_p3);

assign and_ln786_31_fu_6818_p2 = (tmp_6121_fu_6781_p3 & select_ln416_780_fu_6794_p3);

assign and_ln786_32_fu_6955_p2 = (tmp_6128_fu_6918_p3 & select_ln416_781_fu_6931_p3);

assign and_ln786_33_fu_7092_p2 = (tmp_6135_fu_7055_p3 & select_ln416_782_fu_7068_p3);

assign and_ln786_34_fu_7229_p2 = (tmp_6142_fu_7192_p3 & select_ln416_783_fu_7205_p3);

assign and_ln786_35_fu_7366_p2 = (tmp_6149_fu_7329_p3 & select_ln416_784_fu_7342_p3);

assign and_ln786_36_fu_7503_p2 = (tmp_6156_fu_7466_p3 & select_ln416_785_fu_7479_p3);

assign and_ln786_37_fu_7640_p2 = (tmp_6163_fu_7603_p3 & select_ln416_786_fu_7616_p3);

assign and_ln786_38_fu_7777_p2 = (tmp_6170_fu_7740_p3 & select_ln416_787_fu_7753_p3);

assign and_ln786_39_fu_7918_p2 = (tmp_6177_fu_7881_p3 & select_ln416_788_fu_7894_p3);

assign and_ln786_3_fu_2982_p2 = (tmp_5925_fu_2945_p3 & select_ln416_752_fu_2958_p3);

assign and_ln786_4_fu_3119_p2 = (tmp_5932_fu_3082_p3 & select_ln416_753_fu_3095_p3);

assign and_ln786_5_fu_3256_p2 = (tmp_5939_fu_3219_p3 & select_ln416_754_fu_3232_p3);

assign and_ln786_6_fu_3393_p2 = (tmp_5946_fu_3356_p3 & select_ln416_755_fu_3369_p3);

assign and_ln786_7_fu_3530_p2 = (tmp_5953_fu_3493_p3 & select_ln416_756_fu_3506_p3);

assign and_ln786_8_fu_3667_p2 = (tmp_5960_fu_3630_p3 & select_ln416_757_fu_3643_p3);

assign and_ln786_9_fu_3804_p2 = (tmp_5967_fu_3767_p3 & select_ln416_758_fu_3780_p3);

assign and_ln786_fu_2571_p2 = (tmp_5904_fu_2534_p3 & select_ln416_fu_2547_p3);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9 = ((io_acc_block_signal_op1864 == 1'b0) & (1'd1 == and_ln360_reg_11982));
end

always @ (*) begin
    ap_condition_638 = (~((io_acc_block_signal_op1864 == 1'b0) & (1'd1 == and_ln360_reg_11982)) & (1'b1 == ap_CS_fsm_state9));
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_i_iw_0_i_i_i_phi_fu_483_p4 = i_iw_0_i_i_i_reg_479;

assign ap_ready = internal_ap_ready;

assign i_iw_4_fu_712_p2 = (i_iw_0_i_i_i_reg_479 + 3'd1);

assign i_iw_fu_700_p2 = (i_iw_0_i14_reg_467 + 6'd1);

assign icmp_ln166_fu_706_p2 = ((i_iw_0_i_i_i_reg_479 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln360_4_fu_862_p2 = (($signed(tmp_5899_fu_852_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp_ln360_fu_842_p2 = ((sX_3 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln384_fu_11503_p2 = ((pX_3_load_reg_11976 == 32'd34) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_11544_p2 = ((i_iw_0_i14_reg_467 == 6'd34) ? 1'b1 : 1'b0);

assign in_index_fu_879_p2 = (ap_phi_mux_in_index13_phi_fu_546_p4 ^ 1'd1);

assign io_acc_block_signal_op1864 = (res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign io_acc_block_signal_op23 = (data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_0_V_empty_n);

assign mul_ln1118_760_fu_11559_p0 = sext_ln1116_72_fu_962_p1;

assign mul_ln1118_761_fu_11568_p0 = sext_ln1116_73_fu_1011_p1;

assign mul_ln1118_762_fu_11577_p0 = sext_ln1116_74_fu_1060_p1;

assign mul_ln1118_763_fu_11586_p0 = sext_ln1116_75_fu_1109_p1;

assign mul_ln1118_764_fu_11595_p0 = sext_ln1116_76_fu_1158_p1;

assign mul_ln1118_765_fu_11604_p0 = sext_ln1116_77_fu_1207_p1;

assign mul_ln1118_766_fu_11613_p0 = sext_ln1116_78_fu_1256_p1;

assign mul_ln1118_767_fu_11622_p0 = sext_ln1116_79_fu_1305_p1;

assign mul_ln1118_768_fu_11631_p0 = sext_ln1116_80_fu_1354_p1;

assign mul_ln1118_769_fu_11640_p0 = sext_ln1116_fu_905_p1;

assign mul_ln1118_770_fu_11649_p0 = sext_ln1116_72_fu_962_p1;

assign mul_ln1118_771_fu_11658_p0 = sext_ln1116_73_fu_1011_p1;

assign mul_ln1118_772_fu_11667_p0 = sext_ln1116_74_fu_1060_p1;

assign mul_ln1118_773_fu_11676_p0 = sext_ln1116_75_fu_1109_p1;

assign mul_ln1118_774_fu_11685_p0 = sext_ln1116_76_fu_1158_p1;

assign mul_ln1118_775_fu_11694_p0 = sext_ln1116_77_fu_1207_p1;

assign mul_ln1118_776_fu_11703_p0 = sext_ln1116_78_fu_1256_p1;

assign mul_ln1118_777_fu_11712_p0 = sext_ln1116_79_fu_1305_p1;

assign mul_ln1118_778_fu_11721_p0 = sext_ln1116_80_fu_1354_p1;

assign mul_ln1118_779_fu_11730_p0 = sext_ln1116_fu_905_p1;

assign mul_ln1118_780_fu_11739_p0 = sext_ln1116_72_fu_962_p1;

assign mul_ln1118_781_fu_11748_p0 = sext_ln1116_73_fu_1011_p1;

assign mul_ln1118_782_fu_11757_p0 = sext_ln1116_74_fu_1060_p1;

assign mul_ln1118_783_fu_11766_p0 = sext_ln1116_75_fu_1109_p1;

assign mul_ln1118_784_fu_11775_p0 = sext_ln1116_76_fu_1158_p1;

assign mul_ln1118_785_fu_11784_p0 = sext_ln1116_77_fu_1207_p1;

assign mul_ln1118_786_fu_11793_p0 = sext_ln1116_78_fu_1256_p1;

assign mul_ln1118_787_fu_11802_p0 = sext_ln1116_79_fu_1305_p1;

assign mul_ln1118_788_fu_11811_p0 = sext_ln1116_80_fu_1354_p1;

assign mul_ln1118_789_fu_11820_p0 = sext_ln1116_fu_905_p1;

assign mul_ln1118_790_fu_11829_p0 = sext_ln1116_72_fu_962_p1;

assign mul_ln1118_791_fu_11838_p0 = sext_ln1116_73_fu_1011_p1;

assign mul_ln1118_792_fu_11847_p0 = sext_ln1116_74_fu_1060_p1;

assign mul_ln1118_793_fu_11856_p0 = sext_ln1116_75_fu_1109_p1;

assign mul_ln1118_794_fu_11865_p0 = sext_ln1116_76_fu_1158_p1;

assign mul_ln1118_795_fu_11874_p0 = sext_ln1116_77_fu_1207_p1;

assign mul_ln1118_796_fu_11883_p0 = sext_ln1116_78_fu_1256_p1;

assign mul_ln1118_797_fu_11892_p0 = sext_ln1116_79_fu_1305_p1;

assign mul_ln1118_fu_11550_p0 = sext_ln1116_fu_905_p1;

assign or_ln340_10_fu_3964_p2 = (and_ln786_2107_fu_3959_p2 | and_ln785_759_fu_3935_p2);

assign or_ln340_11_fu_4101_p2 = (and_ln786_2109_fu_4096_p2 | and_ln785_760_fu_4072_p2);

assign or_ln340_1221_fu_4238_p2 = (and_ln786_2111_fu_4233_p2 | and_ln785_761_fu_4209_p2);

assign or_ln340_13_fu_4375_p2 = (and_ln786_2113_fu_4370_p2 | and_ln785_762_fu_4346_p2);

assign or_ln340_1422_fu_4512_p2 = (and_ln786_2115_fu_4507_p2 | and_ln785_763_fu_4483_p2);

assign or_ln340_15_fu_4649_p2 = (and_ln786_2117_fu_4644_p2 | and_ln785_764_fu_4620_p2);

assign or_ln340_16_fu_4786_p2 = (and_ln786_2119_fu_4781_p2 | and_ln785_765_fu_4757_p2);

assign or_ln340_17_fu_4923_p2 = (and_ln786_2121_fu_4918_p2 | and_ln785_766_fu_4894_p2);

assign or_ln340_18_fu_5060_p2 = (and_ln786_2123_fu_5055_p2 | and_ln785_767_fu_5031_p2);

assign or_ln340_19_fu_5197_p2 = (and_ln786_2125_fu_5192_p2 | and_ln785_768_fu_5168_p2);

assign or_ln340_1_fu_2731_p2 = (and_ln786_2089_fu_2726_p2 | and_ln785_750_fu_2702_p2);

assign or_ln340_20_fu_5334_p2 = (and_ln786_2127_fu_5329_p2 | and_ln785_769_fu_5305_p2);

assign or_ln340_21_fu_5471_p2 = (and_ln786_2129_fu_5466_p2 | and_ln785_770_fu_5442_p2);

assign or_ln340_22_fu_5608_p2 = (and_ln786_2131_fu_5603_p2 | and_ln785_771_fu_5579_p2);

assign or_ln340_23_fu_5745_p2 = (and_ln786_2133_fu_5740_p2 | and_ln785_772_fu_5716_p2);

assign or_ln340_24_fu_5882_p2 = (and_ln786_2135_fu_5877_p2 | and_ln785_773_fu_5853_p2);

assign or_ln340_25_fu_6019_p2 = (and_ln786_2137_fu_6014_p2 | and_ln785_774_fu_5990_p2);

assign or_ln340_26_fu_6156_p2 = (and_ln786_2139_fu_6151_p2 | and_ln785_775_fu_6127_p2);

assign or_ln340_27_fu_6293_p2 = (and_ln786_2141_fu_6288_p2 | and_ln785_776_fu_6264_p2);

assign or_ln340_2839_fu_2600_p2 = (xor_ln779_fu_2542_p2 | and_ln786_fu_2571_p2);

assign or_ln340_2840_fu_2606_p2 = (or_ln340_2839_fu_2600_p2 | and_ln416_fu_2528_p2);

assign or_ln340_2841_fu_8041_p2 = (xor_ln340_fu_8035_p2 | tmp_5906_fu_8009_p3);

assign or_ln340_2842_fu_2737_p2 = (xor_ln779_1_fu_2679_p2 | and_ln786_1_fu_2708_p2);

assign or_ln340_2843_fu_2743_p2 = (or_ln340_2842_fu_2737_p2 | and_ln416_750_fu_2665_p2);

assign or_ln340_2844_fu_8129_p2 = (xor_ln340_797_fu_8123_p2 | tmp_5913_fu_8097_p3);

assign or_ln340_2845_fu_2874_p2 = (xor_ln779_2_fu_2816_p2 | and_ln786_2_fu_2845_p2);

assign or_ln340_2846_fu_2880_p2 = (or_ln340_2845_fu_2874_p2 | and_ln416_751_fu_2802_p2);

assign or_ln340_2847_fu_8217_p2 = (xor_ln340_798_fu_8211_p2 | tmp_5920_fu_8185_p3);

assign or_ln340_2848_fu_3011_p2 = (xor_ln779_3_fu_2953_p2 | and_ln786_3_fu_2982_p2);

assign or_ln340_2849_fu_3017_p2 = (or_ln340_2848_fu_3011_p2 | and_ln416_752_fu_2939_p2);

assign or_ln340_2850_fu_8305_p2 = (xor_ln340_799_fu_8299_p2 | tmp_5927_fu_8273_p3);

assign or_ln340_2851_fu_3148_p2 = (xor_ln779_4_fu_3090_p2 | and_ln786_4_fu_3119_p2);

assign or_ln340_2852_fu_3154_p2 = (or_ln340_2851_fu_3148_p2 | and_ln416_753_fu_3076_p2);

assign or_ln340_2853_fu_8393_p2 = (xor_ln340_800_fu_8387_p2 | tmp_5934_fu_8361_p3);

assign or_ln340_2854_fu_3285_p2 = (xor_ln779_5_fu_3227_p2 | and_ln786_5_fu_3256_p2);

assign or_ln340_2855_fu_3291_p2 = (or_ln340_2854_fu_3285_p2 | and_ln416_754_fu_3213_p2);

assign or_ln340_2856_fu_8481_p2 = (xor_ln340_801_fu_8475_p2 | tmp_5941_fu_8449_p3);

assign or_ln340_2857_fu_3422_p2 = (xor_ln779_6_fu_3364_p2 | and_ln786_6_fu_3393_p2);

assign or_ln340_2858_fu_3428_p2 = (or_ln340_2857_fu_3422_p2 | and_ln416_755_fu_3350_p2);

assign or_ln340_2859_fu_8569_p2 = (xor_ln340_802_fu_8563_p2 | tmp_5948_fu_8537_p3);

assign or_ln340_2860_fu_3559_p2 = (xor_ln779_7_fu_3501_p2 | and_ln786_7_fu_3530_p2);

assign or_ln340_2861_fu_3565_p2 = (or_ln340_2860_fu_3559_p2 | and_ln416_756_fu_3487_p2);

assign or_ln340_2862_fu_8657_p2 = (xor_ln340_803_fu_8651_p2 | tmp_5955_fu_8625_p3);

assign or_ln340_2863_fu_3696_p2 = (xor_ln779_8_fu_3638_p2 | and_ln786_8_fu_3667_p2);

assign or_ln340_2864_fu_3702_p2 = (or_ln340_2863_fu_3696_p2 | and_ln416_757_fu_3624_p2);

assign or_ln340_2865_fu_8745_p2 = (xor_ln340_804_fu_8739_p2 | tmp_5962_fu_8713_p3);

assign or_ln340_2866_fu_3833_p2 = (xor_ln779_9_fu_3775_p2 | and_ln786_9_fu_3804_p2);

assign or_ln340_2867_fu_3839_p2 = (or_ln340_2866_fu_3833_p2 | and_ln416_758_fu_3761_p2);

assign or_ln340_2868_fu_8833_p2 = (xor_ln340_805_fu_8827_p2 | tmp_5969_fu_8801_p3);

assign or_ln340_2869_fu_3970_p2 = (xor_ln779_10_fu_3912_p2 | and_ln786_10_fu_3941_p2);

assign or_ln340_2870_fu_3976_p2 = (or_ln340_2869_fu_3970_p2 | and_ln416_759_fu_3898_p2);

assign or_ln340_2871_fu_8921_p2 = (xor_ln340_806_fu_8915_p2 | tmp_5976_fu_8889_p3);

assign or_ln340_2872_fu_4107_p2 = (xor_ln779_11_fu_4049_p2 | and_ln786_11_fu_4078_p2);

assign or_ln340_2873_fu_4113_p2 = (or_ln340_2872_fu_4107_p2 | and_ln416_760_fu_4035_p2);

assign or_ln340_2874_fu_9009_p2 = (xor_ln340_807_fu_9003_p2 | tmp_5983_fu_8977_p3);

assign or_ln340_2875_fu_4244_p2 = (xor_ln779_12_fu_4186_p2 | and_ln786_12_fu_4215_p2);

assign or_ln340_2876_fu_4250_p2 = (or_ln340_2875_fu_4244_p2 | and_ln416_761_fu_4172_p2);

assign or_ln340_2877_fu_9097_p2 = (xor_ln340_808_fu_9091_p2 | tmp_5990_fu_9065_p3);

assign or_ln340_2878_fu_4381_p2 = (xor_ln779_13_fu_4323_p2 | and_ln786_13_fu_4352_p2);

assign or_ln340_2879_fu_4387_p2 = (or_ln340_2878_fu_4381_p2 | and_ln416_762_fu_4309_p2);

assign or_ln340_2880_fu_9185_p2 = (xor_ln340_809_fu_9179_p2 | tmp_5997_fu_9153_p3);

assign or_ln340_2881_fu_4518_p2 = (xor_ln779_14_fu_4460_p2 | and_ln786_14_fu_4489_p2);

assign or_ln340_2882_fu_4524_p2 = (or_ln340_2881_fu_4518_p2 | and_ln416_763_fu_4446_p2);

assign or_ln340_2883_fu_9273_p2 = (xor_ln340_810_fu_9267_p2 | tmp_6004_fu_9241_p3);

assign or_ln340_2884_fu_4655_p2 = (xor_ln779_15_fu_4597_p2 | and_ln786_15_fu_4626_p2);

assign or_ln340_2885_fu_4661_p2 = (or_ln340_2884_fu_4655_p2 | and_ln416_764_fu_4583_p2);

assign or_ln340_2886_fu_9361_p2 = (xor_ln340_811_fu_9355_p2 | tmp_6011_fu_9329_p3);

assign or_ln340_2887_fu_4792_p2 = (xor_ln779_16_fu_4734_p2 | and_ln786_16_fu_4763_p2);

assign or_ln340_2888_fu_4798_p2 = (or_ln340_2887_fu_4792_p2 | and_ln416_765_fu_4720_p2);

assign or_ln340_2889_fu_9449_p2 = (xor_ln340_812_fu_9443_p2 | tmp_6018_fu_9417_p3);

assign or_ln340_2890_fu_4929_p2 = (xor_ln779_17_fu_4871_p2 | and_ln786_17_fu_4900_p2);

assign or_ln340_2891_fu_4935_p2 = (or_ln340_2890_fu_4929_p2 | and_ln416_766_fu_4857_p2);

assign or_ln340_2892_fu_9537_p2 = (xor_ln340_813_fu_9531_p2 | tmp_6025_fu_9505_p3);

assign or_ln340_2893_fu_5066_p2 = (xor_ln779_18_fu_5008_p2 | and_ln786_18_fu_5037_p2);

assign or_ln340_2894_fu_5072_p2 = (or_ln340_2893_fu_5066_p2 | and_ln416_767_fu_4994_p2);

assign or_ln340_2895_fu_9625_p2 = (xor_ln340_814_fu_9619_p2 | tmp_6032_fu_9593_p3);

assign or_ln340_2896_fu_5203_p2 = (xor_ln779_19_fu_5145_p2 | and_ln786_19_fu_5174_p2);

assign or_ln340_2897_fu_5209_p2 = (or_ln340_2896_fu_5203_p2 | and_ln416_768_fu_5131_p2);

assign or_ln340_2898_fu_9713_p2 = (xor_ln340_815_fu_9707_p2 | tmp_6039_fu_9681_p3);

assign or_ln340_2899_fu_5340_p2 = (xor_ln779_20_fu_5282_p2 | and_ln786_20_fu_5311_p2);

assign or_ln340_28_fu_6430_p2 = (and_ln786_2143_fu_6425_p2 | and_ln785_777_fu_6401_p2);

assign or_ln340_2900_fu_5346_p2 = (or_ln340_2899_fu_5340_p2 | and_ln416_769_fu_5268_p2);

assign or_ln340_2901_fu_9801_p2 = (xor_ln340_816_fu_9795_p2 | tmp_6046_fu_9769_p3);

assign or_ln340_2902_fu_5477_p2 = (xor_ln779_21_fu_5419_p2 | and_ln786_21_fu_5448_p2);

assign or_ln340_2903_fu_5483_p2 = (or_ln340_2902_fu_5477_p2 | and_ln416_770_fu_5405_p2);

assign or_ln340_2904_fu_9889_p2 = (xor_ln340_817_fu_9883_p2 | tmp_6053_fu_9857_p3);

assign or_ln340_2905_fu_5614_p2 = (xor_ln779_22_fu_5556_p2 | and_ln786_22_fu_5585_p2);

assign or_ln340_2906_fu_5620_p2 = (or_ln340_2905_fu_5614_p2 | and_ln416_771_fu_5542_p2);

assign or_ln340_2907_fu_9977_p2 = (xor_ln340_818_fu_9971_p2 | tmp_6060_fu_9945_p3);

assign or_ln340_2908_fu_5751_p2 = (xor_ln779_23_fu_5693_p2 | and_ln786_23_fu_5722_p2);

assign or_ln340_2909_fu_5757_p2 = (or_ln340_2908_fu_5751_p2 | and_ln416_772_fu_5679_p2);

assign or_ln340_2910_fu_10065_p2 = (xor_ln340_819_fu_10059_p2 | tmp_6067_fu_10033_p3);

assign or_ln340_2911_fu_5888_p2 = (xor_ln779_24_fu_5830_p2 | and_ln786_24_fu_5859_p2);

assign or_ln340_2912_fu_5894_p2 = (or_ln340_2911_fu_5888_p2 | and_ln416_773_fu_5816_p2);

assign or_ln340_2913_fu_10153_p2 = (xor_ln340_820_fu_10147_p2 | tmp_6074_fu_10121_p3);

assign or_ln340_2914_fu_6025_p2 = (xor_ln779_25_fu_5967_p2 | and_ln786_25_fu_5996_p2);

assign or_ln340_2915_fu_6031_p2 = (or_ln340_2914_fu_6025_p2 | and_ln416_774_fu_5953_p2);

assign or_ln340_2916_fu_10241_p2 = (xor_ln340_821_fu_10235_p2 | tmp_6081_fu_10209_p3);

assign or_ln340_2917_fu_6162_p2 = (xor_ln779_26_fu_6104_p2 | and_ln786_26_fu_6133_p2);

assign or_ln340_2918_fu_6168_p2 = (or_ln340_2917_fu_6162_p2 | and_ln416_775_fu_6090_p2);

assign or_ln340_2919_fu_10329_p2 = (xor_ln340_822_fu_10323_p2 | tmp_6088_fu_10297_p3);

assign or_ln340_2920_fu_6299_p2 = (xor_ln779_27_fu_6241_p2 | and_ln786_27_fu_6270_p2);

assign or_ln340_2921_fu_6305_p2 = (or_ln340_2920_fu_6299_p2 | and_ln416_776_fu_6227_p2);

assign or_ln340_2922_fu_10417_p2 = (xor_ln340_823_fu_10411_p2 | tmp_6095_fu_10385_p3);

assign or_ln340_2923_fu_6436_p2 = (xor_ln779_28_fu_6378_p2 | and_ln786_28_fu_6407_p2);

assign or_ln340_2924_fu_6442_p2 = (or_ln340_2923_fu_6436_p2 | and_ln416_777_fu_6364_p2);

assign or_ln340_2925_fu_10505_p2 = (xor_ln340_824_fu_10499_p2 | tmp_6102_fu_10473_p3);

assign or_ln340_2926_fu_6573_p2 = (xor_ln779_29_fu_6515_p2 | and_ln786_29_fu_6544_p2);

assign or_ln340_2927_fu_6579_p2 = (or_ln340_2926_fu_6573_p2 | and_ln416_778_fu_6501_p2);

assign or_ln340_2928_fu_10593_p2 = (xor_ln340_825_fu_10587_p2 | tmp_6109_fu_10561_p3);

assign or_ln340_2929_fu_6710_p2 = (xor_ln779_30_fu_6652_p2 | and_ln786_30_fu_6681_p2);

assign or_ln340_2930_fu_6716_p2 = (or_ln340_2929_fu_6710_p2 | and_ln416_779_fu_6638_p2);

assign or_ln340_2931_fu_10681_p2 = (xor_ln340_826_fu_10675_p2 | tmp_6116_fu_10649_p3);

assign or_ln340_2932_fu_6847_p2 = (xor_ln779_31_fu_6789_p2 | and_ln786_31_fu_6818_p2);

assign or_ln340_2933_fu_6853_p2 = (or_ln340_2932_fu_6847_p2 | and_ln416_780_fu_6775_p2);

assign or_ln340_2934_fu_10769_p2 = (xor_ln340_827_fu_10763_p2 | tmp_6123_fu_10737_p3);

assign or_ln340_2935_fu_6984_p2 = (xor_ln779_32_fu_6926_p2 | and_ln786_32_fu_6955_p2);

assign or_ln340_2936_fu_6990_p2 = (or_ln340_2935_fu_6984_p2 | and_ln416_781_fu_6912_p2);

assign or_ln340_2937_fu_10857_p2 = (xor_ln340_828_fu_10851_p2 | tmp_6130_fu_10825_p3);

assign or_ln340_2938_fu_7121_p2 = (xor_ln779_33_fu_7063_p2 | and_ln786_33_fu_7092_p2);

assign or_ln340_2939_fu_7127_p2 = (or_ln340_2938_fu_7121_p2 | and_ln416_782_fu_7049_p2);

assign or_ln340_2940_fu_10945_p2 = (xor_ln340_829_fu_10939_p2 | tmp_6137_fu_10913_p3);

assign or_ln340_2941_fu_7258_p2 = (xor_ln779_34_fu_7200_p2 | and_ln786_34_fu_7229_p2);

assign or_ln340_2942_fu_7264_p2 = (or_ln340_2941_fu_7258_p2 | and_ln416_783_fu_7186_p2);

assign or_ln340_2943_fu_11033_p2 = (xor_ln340_830_fu_11027_p2 | tmp_6144_fu_11001_p3);

assign or_ln340_2944_fu_7395_p2 = (xor_ln779_35_fu_7337_p2 | and_ln786_35_fu_7366_p2);

assign or_ln340_2945_fu_7401_p2 = (or_ln340_2944_fu_7395_p2 | and_ln416_784_fu_7323_p2);

assign or_ln340_2946_fu_11121_p2 = (xor_ln340_831_fu_11115_p2 | tmp_6151_fu_11089_p3);

assign or_ln340_2947_fu_7532_p2 = (xor_ln779_36_fu_7474_p2 | and_ln786_36_fu_7503_p2);

assign or_ln340_2948_fu_7538_p2 = (or_ln340_2947_fu_7532_p2 | and_ln416_785_fu_7460_p2);

assign or_ln340_2949_fu_11209_p2 = (xor_ln340_832_fu_11203_p2 | tmp_6158_fu_11177_p3);

assign or_ln340_2950_fu_7669_p2 = (xor_ln779_37_fu_7611_p2 | and_ln786_37_fu_7640_p2);

assign or_ln340_2951_fu_7675_p2 = (or_ln340_2950_fu_7669_p2 | and_ln416_786_fu_7597_p2);

assign or_ln340_2952_fu_11297_p2 = (xor_ln340_833_fu_11291_p2 | tmp_6165_fu_11265_p3);

assign or_ln340_2953_fu_7806_p2 = (xor_ln779_38_fu_7748_p2 | and_ln786_38_fu_7777_p2);

assign or_ln340_2954_fu_7812_p2 = (or_ln340_2953_fu_7806_p2 | and_ln416_787_fu_7734_p2);

assign or_ln340_2955_fu_11385_p2 = (xor_ln340_834_fu_11379_p2 | tmp_6172_fu_11353_p3);

assign or_ln340_2956_fu_7947_p2 = (xor_ln779_39_fu_7889_p2 | and_ln786_39_fu_7918_p2);

assign or_ln340_2957_fu_7953_p2 = (or_ln340_2956_fu_7947_p2 | and_ln416_788_fu_7875_p2);

assign or_ln340_2958_fu_11473_p2 = (xor_ln340_835_fu_11467_p2 | tmp_6179_fu_11441_p3);

assign or_ln340_29_fu_6567_p2 = (and_ln786_2145_fu_6562_p2 | and_ln785_778_fu_6538_p2);

assign or_ln340_2_fu_2868_p2 = (and_ln786_2091_fu_2863_p2 | and_ln785_751_fu_2839_p2);

assign or_ln340_30_fu_6704_p2 = (and_ln786_2147_fu_6699_p2 | and_ln785_779_fu_6675_p2);

assign or_ln340_31_fu_6841_p2 = (and_ln786_2149_fu_6836_p2 | and_ln785_780_fu_6812_p2);

assign or_ln340_32_fu_6978_p2 = (and_ln786_2151_fu_6973_p2 | and_ln785_781_fu_6949_p2);

assign or_ln340_33_fu_7115_p2 = (and_ln786_2153_fu_7110_p2 | and_ln785_782_fu_7086_p2);

assign or_ln340_34_fu_7252_p2 = (and_ln786_2155_fu_7247_p2 | and_ln785_783_fu_7223_p2);

assign or_ln340_35_fu_7389_p2 = (and_ln786_2157_fu_7384_p2 | and_ln785_784_fu_7360_p2);

assign or_ln340_36_fu_7526_p2 = (and_ln786_2159_fu_7521_p2 | and_ln785_785_fu_7497_p2);

assign or_ln340_37_fu_7663_p2 = (and_ln786_2161_fu_7658_p2 | and_ln785_786_fu_7634_p2);

assign or_ln340_38_fu_7800_p2 = (and_ln786_2163_fu_7795_p2 | and_ln785_787_fu_7771_p2);

assign or_ln340_39_fu_7941_p2 = (and_ln786_2165_fu_7936_p2 | and_ln785_788_fu_7912_p2);

assign or_ln340_3_fu_3005_p2 = (and_ln786_2093_fu_3000_p2 | and_ln785_752_fu_2976_p2);

assign or_ln340_4_fu_3142_p2 = (and_ln786_2095_fu_3137_p2 | and_ln785_753_fu_3113_p2);

assign or_ln340_5_fu_3279_p2 = (and_ln786_2097_fu_3274_p2 | and_ln785_754_fu_3250_p2);

assign or_ln340_6_fu_3416_p2 = (and_ln786_2099_fu_3411_p2 | and_ln785_755_fu_3387_p2);

assign or_ln340_7_fu_3553_p2 = (and_ln786_2101_fu_3548_p2 | and_ln785_756_fu_3524_p2);

assign or_ln340_8_fu_3690_p2 = (and_ln786_2103_fu_3685_p2 | and_ln785_757_fu_3661_p2);

assign or_ln340_9_fu_3827_p2 = (and_ln786_2105_fu_3822_p2 | and_ln785_758_fu_3798_p2);

assign or_ln340_fu_2594_p2 = (and_ln786_2087_fu_2589_p2 | and_ln785_fu_2565_p2);

assign or_ln785_10_fu_3929_p2 = (xor_ln785_10_fu_3924_p2 | tmp_5974_fu_3904_p3);

assign or_ln785_11_fu_4066_p2 = (xor_ln785_11_fu_4061_p2 | tmp_5981_fu_4041_p3);

assign or_ln785_12_fu_4203_p2 = (xor_ln785_12_fu_4198_p2 | tmp_5988_fu_4178_p3);

assign or_ln785_13_fu_4340_p2 = (xor_ln785_13_fu_4335_p2 | tmp_5995_fu_4315_p3);

assign or_ln785_14_fu_4477_p2 = (xor_ln785_14_fu_4472_p2 | tmp_6002_fu_4452_p3);

assign or_ln785_15_fu_4614_p2 = (xor_ln785_15_fu_4609_p2 | tmp_6009_fu_4589_p3);

assign or_ln785_16_fu_4751_p2 = (xor_ln785_16_fu_4746_p2 | tmp_6016_fu_4726_p3);

assign or_ln785_17_fu_4888_p2 = (xor_ln785_17_fu_4883_p2 | tmp_6023_fu_4863_p3);

assign or_ln785_18_fu_5025_p2 = (xor_ln785_18_fu_5020_p2 | tmp_6030_fu_5000_p3);

assign or_ln785_19_fu_5162_p2 = (xor_ln785_19_fu_5157_p2 | tmp_6037_fu_5137_p3);

assign or_ln785_1_fu_2696_p2 = (xor_ln785_1_fu_2691_p2 | tmp_5911_fu_2671_p3);

assign or_ln785_20_fu_5299_p2 = (xor_ln785_20_fu_5294_p2 | tmp_6044_fu_5274_p3);

assign or_ln785_21_fu_5436_p2 = (xor_ln785_21_fu_5431_p2 | tmp_6051_fu_5411_p3);

assign or_ln785_22_fu_5573_p2 = (xor_ln785_22_fu_5568_p2 | tmp_6058_fu_5548_p3);

assign or_ln785_23_fu_5710_p2 = (xor_ln785_23_fu_5705_p2 | tmp_6065_fu_5685_p3);

assign or_ln785_24_fu_5847_p2 = (xor_ln785_24_fu_5842_p2 | tmp_6072_fu_5822_p3);

assign or_ln785_25_fu_5984_p2 = (xor_ln785_25_fu_5979_p2 | tmp_6079_fu_5959_p3);

assign or_ln785_26_fu_6121_p2 = (xor_ln785_26_fu_6116_p2 | tmp_6086_fu_6096_p3);

assign or_ln785_27_fu_6258_p2 = (xor_ln785_27_fu_6253_p2 | tmp_6093_fu_6233_p3);

assign or_ln785_28_fu_6395_p2 = (xor_ln785_28_fu_6390_p2 | tmp_6100_fu_6370_p3);

assign or_ln785_29_fu_6532_p2 = (xor_ln785_29_fu_6527_p2 | tmp_6107_fu_6507_p3);

assign or_ln785_2_fu_2833_p2 = (xor_ln785_2_fu_2828_p2 | tmp_5918_fu_2808_p3);

assign or_ln785_30_fu_6669_p2 = (xor_ln785_30_fu_6664_p2 | tmp_6114_fu_6644_p3);

assign or_ln785_31_fu_6806_p2 = (xor_ln785_31_fu_6801_p2 | tmp_6121_fu_6781_p3);

assign or_ln785_32_fu_6943_p2 = (xor_ln785_32_fu_6938_p2 | tmp_6128_fu_6918_p3);

assign or_ln785_33_fu_7080_p2 = (xor_ln785_33_fu_7075_p2 | tmp_6135_fu_7055_p3);

assign or_ln785_34_fu_7217_p2 = (xor_ln785_34_fu_7212_p2 | tmp_6142_fu_7192_p3);

assign or_ln785_35_fu_7354_p2 = (xor_ln785_35_fu_7349_p2 | tmp_6149_fu_7329_p3);

assign or_ln785_36_fu_7491_p2 = (xor_ln785_36_fu_7486_p2 | tmp_6156_fu_7466_p3);

assign or_ln785_37_fu_7628_p2 = (xor_ln785_37_fu_7623_p2 | tmp_6163_fu_7603_p3);

assign or_ln785_38_fu_7765_p2 = (xor_ln785_38_fu_7760_p2 | tmp_6170_fu_7740_p3);

assign or_ln785_39_fu_7906_p2 = (xor_ln785_39_fu_7901_p2 | tmp_6177_fu_7881_p3);

assign or_ln785_3_fu_2970_p2 = (xor_ln785_3_fu_2965_p2 | tmp_5925_fu_2945_p3);

assign or_ln785_4_fu_3107_p2 = (xor_ln785_4_fu_3102_p2 | tmp_5932_fu_3082_p3);

assign or_ln785_514_fu_3244_p2 = (xor_ln785_5_fu_3239_p2 | tmp_5939_fu_3219_p3);

assign or_ln785_6_fu_3381_p2 = (xor_ln785_6_fu_3376_p2 | tmp_5946_fu_3356_p3);

assign or_ln785_7_fu_3518_p2 = (xor_ln785_7_fu_3513_p2 | tmp_5953_fu_3493_p3);

assign or_ln785_8_fu_3655_p2 = (xor_ln785_537_fu_3650_p2 | tmp_5960_fu_3630_p3);

assign or_ln785_9_fu_3792_p2 = (xor_ln785_538_fu_3787_p2 | tmp_5967_fu_3767_p3);

assign or_ln785_fu_2559_p2 = (xor_ln785_fu_2554_p2 | tmp_5904_fu_2534_p3);

assign or_ln786_750_fu_2714_p2 = (and_ln786_1_fu_2708_p2 | and_ln416_750_fu_2665_p2);

assign or_ln786_751_fu_2851_p2 = (and_ln786_2_fu_2845_p2 | and_ln416_751_fu_2802_p2);

assign or_ln786_752_fu_2988_p2 = (and_ln786_3_fu_2982_p2 | and_ln416_752_fu_2939_p2);

assign or_ln786_753_fu_3125_p2 = (and_ln786_4_fu_3119_p2 | and_ln416_753_fu_3076_p2);

assign or_ln786_754_fu_3262_p2 = (and_ln786_5_fu_3256_p2 | and_ln416_754_fu_3213_p2);

assign or_ln786_755_fu_3399_p2 = (and_ln786_6_fu_3393_p2 | and_ln416_755_fu_3350_p2);

assign or_ln786_756_fu_3536_p2 = (and_ln786_7_fu_3530_p2 | and_ln416_756_fu_3487_p2);

assign or_ln786_757_fu_3673_p2 = (and_ln786_8_fu_3667_p2 | and_ln416_757_fu_3624_p2);

assign or_ln786_758_fu_3810_p2 = (and_ln786_9_fu_3804_p2 | and_ln416_758_fu_3761_p2);

assign or_ln786_759_fu_3947_p2 = (and_ln786_10_fu_3941_p2 | and_ln416_759_fu_3898_p2);

assign or_ln786_760_fu_4084_p2 = (and_ln786_11_fu_4078_p2 | and_ln416_760_fu_4035_p2);

assign or_ln786_761_fu_4221_p2 = (and_ln786_12_fu_4215_p2 | and_ln416_761_fu_4172_p2);

assign or_ln786_762_fu_4358_p2 = (and_ln786_13_fu_4352_p2 | and_ln416_762_fu_4309_p2);

assign or_ln786_763_fu_4495_p2 = (and_ln786_14_fu_4489_p2 | and_ln416_763_fu_4446_p2);

assign or_ln786_764_fu_4632_p2 = (and_ln786_15_fu_4626_p2 | and_ln416_764_fu_4583_p2);

assign or_ln786_765_fu_4769_p2 = (and_ln786_16_fu_4763_p2 | and_ln416_765_fu_4720_p2);

assign or_ln786_766_fu_4906_p2 = (and_ln786_17_fu_4900_p2 | and_ln416_766_fu_4857_p2);

assign or_ln786_767_fu_5043_p2 = (and_ln786_18_fu_5037_p2 | and_ln416_767_fu_4994_p2);

assign or_ln786_768_fu_5180_p2 = (and_ln786_19_fu_5174_p2 | and_ln416_768_fu_5131_p2);

assign or_ln786_769_fu_5317_p2 = (and_ln786_20_fu_5311_p2 | and_ln416_769_fu_5268_p2);

assign or_ln786_770_fu_5454_p2 = (and_ln786_21_fu_5448_p2 | and_ln416_770_fu_5405_p2);

assign or_ln786_771_fu_5591_p2 = (and_ln786_22_fu_5585_p2 | and_ln416_771_fu_5542_p2);

assign or_ln786_772_fu_5728_p2 = (and_ln786_23_fu_5722_p2 | and_ln416_772_fu_5679_p2);

assign or_ln786_773_fu_5865_p2 = (and_ln786_24_fu_5859_p2 | and_ln416_773_fu_5816_p2);

assign or_ln786_774_fu_6002_p2 = (and_ln786_25_fu_5996_p2 | and_ln416_774_fu_5953_p2);

assign or_ln786_775_fu_6139_p2 = (and_ln786_26_fu_6133_p2 | and_ln416_775_fu_6090_p2);

assign or_ln786_776_fu_6276_p2 = (and_ln786_27_fu_6270_p2 | and_ln416_776_fu_6227_p2);

assign or_ln786_777_fu_6413_p2 = (and_ln786_28_fu_6407_p2 | and_ln416_777_fu_6364_p2);

assign or_ln786_778_fu_6550_p2 = (and_ln786_29_fu_6544_p2 | and_ln416_778_fu_6501_p2);

assign or_ln786_779_fu_6687_p2 = (and_ln786_30_fu_6681_p2 | and_ln416_779_fu_6638_p2);

assign or_ln786_780_fu_6824_p2 = (and_ln786_31_fu_6818_p2 | and_ln416_780_fu_6775_p2);

assign or_ln786_781_fu_6961_p2 = (and_ln786_32_fu_6955_p2 | and_ln416_781_fu_6912_p2);

assign or_ln786_782_fu_7098_p2 = (and_ln786_33_fu_7092_p2 | and_ln416_782_fu_7049_p2);

assign or_ln786_783_fu_7235_p2 = (and_ln786_34_fu_7229_p2 | and_ln416_783_fu_7186_p2);

assign or_ln786_784_fu_7372_p2 = (and_ln786_35_fu_7366_p2 | and_ln416_784_fu_7323_p2);

assign or_ln786_785_fu_7509_p2 = (and_ln786_36_fu_7503_p2 | and_ln416_785_fu_7460_p2);

assign or_ln786_786_fu_7646_p2 = (and_ln786_37_fu_7640_p2 | and_ln416_786_fu_7597_p2);

assign or_ln786_787_fu_7783_p2 = (and_ln786_38_fu_7777_p2 | and_ln416_787_fu_7734_p2);

assign or_ln786_788_fu_7924_p2 = (and_ln786_39_fu_7918_p2 | and_ln416_788_fu_7875_p2);

assign or_ln786_fu_2577_p2 = (and_ln786_fu_2571_p2 | and_ln416_fu_2528_p2);

assign res_V_data_0_V_din = tmp_data_0_V_20_reg_13156;

assign res_V_data_1_V_din = tmp_data_1_V_19_reg_13162;

assign res_V_data_2_V_din = tmp_data_2_V_19_reg_13168;

assign res_V_data_3_V_din = tmp_data_3_V_19_reg_13174;

assign select_ln340_10_fu_3982_p3 = ((or_ln340_10_fu_3964_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_774_fu_3879_p2);

assign select_ln340_11_fu_4119_p3 = ((or_ln340_11_fu_4101_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_775_fu_4016_p2);

assign select_ln340_12_fu_4256_p3 = ((or_ln340_1221_fu_4238_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_776_fu_4153_p2);

assign select_ln340_1311_fu_8047_p3 = ((xor_ln340_1288_fu_8029_p2[0:0] === 1'b1) ? 24'd8388607 : acc_0_V_fu_8004_p2);

assign select_ln340_1312_fu_8135_p3 = ((xor_ln340_1289_fu_8117_p2[0:0] === 1'b1) ? 24'd8388607 : acc_0_V_147_fu_8092_p2);

assign select_ln340_1313_fu_8223_p3 = ((xor_ln340_1290_fu_8205_p2[0:0] === 1'b1) ? 24'd8388607 : acc_0_V_149_fu_8180_p2);

assign select_ln340_1314_fu_8311_p3 = ((xor_ln340_1291_fu_8293_p2[0:0] === 1'b1) ? 24'd8388607 : acc_0_V_151_fu_8268_p2);

assign select_ln340_1315_fu_8399_p3 = ((xor_ln340_1292_fu_8381_p2[0:0] === 1'b1) ? 24'd8388607 : acc_0_V_153_fu_8356_p2);

assign select_ln340_1316_fu_8487_p3 = ((xor_ln340_1293_fu_8469_p2[0:0] === 1'b1) ? 24'd8388607 : acc_0_V_155_fu_8444_p2);

assign select_ln340_1317_fu_8575_p3 = ((xor_ln340_1294_fu_8557_p2[0:0] === 1'b1) ? 24'd8388607 : acc_0_V_157_fu_8532_p2);

assign select_ln340_1318_fu_8663_p3 = ((xor_ln340_1295_fu_8645_p2[0:0] === 1'b1) ? 24'd8388607 : acc_0_V_159_fu_8620_p2);

assign select_ln340_1319_fu_8751_p3 = ((xor_ln340_1296_fu_8733_p2[0:0] === 1'b1) ? 24'd8388607 : acc_0_V_161_fu_8708_p2);

assign select_ln340_1320_fu_8839_p3 = ((xor_ln340_1297_fu_8821_p2[0:0] === 1'b1) ? 24'd8388607 : acc_0_V_163_fu_8796_p2);

assign select_ln340_1321_fu_8927_p3 = ((xor_ln340_1298_fu_8909_p2[0:0] === 1'b1) ? 24'd8388607 : acc_1_V_fu_8884_p2);

assign select_ln340_1322_fu_9015_p3 = ((xor_ln340_1299_fu_8997_p2[0:0] === 1'b1) ? 24'd8388607 : acc_1_V_147_fu_8972_p2);

assign select_ln340_1323_fu_9103_p3 = ((xor_ln340_1300_fu_9085_p2[0:0] === 1'b1) ? 24'd8388607 : acc_1_V_149_fu_9060_p2);

assign select_ln340_1324_fu_9191_p3 = ((xor_ln340_1301_fu_9173_p2[0:0] === 1'b1) ? 24'd8388607 : acc_1_V_151_fu_9148_p2);

assign select_ln340_1325_fu_9279_p3 = ((xor_ln340_1302_fu_9261_p2[0:0] === 1'b1) ? 24'd8388607 : acc_1_V_153_fu_9236_p2);

assign select_ln340_1326_fu_9367_p3 = ((xor_ln340_1303_fu_9349_p2[0:0] === 1'b1) ? 24'd8388607 : acc_1_V_155_fu_9324_p2);

assign select_ln340_1327_fu_9455_p3 = ((xor_ln340_1304_fu_9437_p2[0:0] === 1'b1) ? 24'd8388607 : acc_1_V_157_fu_9412_p2);

assign select_ln340_1328_fu_9543_p3 = ((xor_ln340_1305_fu_9525_p2[0:0] === 1'b1) ? 24'd8388607 : acc_1_V_159_fu_9500_p2);

assign select_ln340_1329_fu_9631_p3 = ((xor_ln340_1306_fu_9613_p2[0:0] === 1'b1) ? 24'd8388607 : acc_1_V_161_fu_9588_p2);

assign select_ln340_1330_fu_9719_p3 = ((xor_ln340_1307_fu_9701_p2[0:0] === 1'b1) ? 24'd8388607 : acc_1_V_163_fu_9676_p2);

assign select_ln340_1331_fu_9807_p3 = ((xor_ln340_1308_fu_9789_p2[0:0] === 1'b1) ? 24'd8388607 : acc_2_V_fu_9764_p2);

assign select_ln340_1332_fu_9895_p3 = ((xor_ln340_1309_fu_9877_p2[0:0] === 1'b1) ? 24'd8388607 : acc_2_V_147_fu_9852_p2);

assign select_ln340_1333_fu_9983_p3 = ((xor_ln340_1310_fu_9965_p2[0:0] === 1'b1) ? 24'd8388607 : acc_2_V_149_fu_9940_p2);

assign select_ln340_1334_fu_10071_p3 = ((xor_ln340_1311_fu_10053_p2[0:0] === 1'b1) ? 24'd8388607 : acc_2_V_151_fu_10028_p2);

assign select_ln340_1335_fu_10159_p3 = ((xor_ln340_1312_fu_10141_p2[0:0] === 1'b1) ? 24'd8388607 : acc_2_V_153_fu_10116_p2);

assign select_ln340_1336_fu_10247_p3 = ((xor_ln340_1313_fu_10229_p2[0:0] === 1'b1) ? 24'd8388607 : acc_2_V_155_fu_10204_p2);

assign select_ln340_1337_fu_10335_p3 = ((xor_ln340_1314_fu_10317_p2[0:0] === 1'b1) ? 24'd8388607 : acc_2_V_157_fu_10292_p2);

assign select_ln340_1338_fu_10423_p3 = ((xor_ln340_1315_fu_10405_p2[0:0] === 1'b1) ? 24'd8388607 : acc_2_V_159_fu_10380_p2);

assign select_ln340_1339_fu_10511_p3 = ((xor_ln340_1316_fu_10493_p2[0:0] === 1'b1) ? 24'd8388607 : acc_2_V_161_fu_10468_p2);

assign select_ln340_1340_fu_10599_p3 = ((xor_ln340_1317_fu_10581_p2[0:0] === 1'b1) ? 24'd8388607 : acc_2_V_163_fu_10556_p2);

assign select_ln340_1341_fu_10687_p3 = ((xor_ln340_1318_fu_10669_p2[0:0] === 1'b1) ? 24'd8388607 : acc_3_V_fu_10644_p2);

assign select_ln340_1342_fu_10775_p3 = ((xor_ln340_1319_fu_10757_p2[0:0] === 1'b1) ? 24'd8388607 : acc_3_V_147_fu_10732_p2);

assign select_ln340_1343_fu_10863_p3 = ((xor_ln340_1320_fu_10845_p2[0:0] === 1'b1) ? 24'd8388607 : acc_3_V_149_fu_10820_p2);

assign select_ln340_1344_fu_10951_p3 = ((xor_ln340_1321_fu_10933_p2[0:0] === 1'b1) ? 24'd8388607 : acc_3_V_151_fu_10908_p2);

assign select_ln340_1345_fu_11039_p3 = ((xor_ln340_1322_fu_11021_p2[0:0] === 1'b1) ? 24'd8388607 : acc_3_V_153_fu_10996_p2);

assign select_ln340_1346_fu_11127_p3 = ((xor_ln340_1323_fu_11109_p2[0:0] === 1'b1) ? 24'd8388607 : acc_3_V_155_fu_11084_p2);

assign select_ln340_1347_fu_11215_p3 = ((xor_ln340_1324_fu_11197_p2[0:0] === 1'b1) ? 24'd8388607 : acc_3_V_157_fu_11172_p2);

assign select_ln340_1348_fu_11303_p3 = ((xor_ln340_1325_fu_11285_p2[0:0] === 1'b1) ? 24'd8388607 : acc_3_V_159_fu_11260_p2);

assign select_ln340_1349_fu_11391_p3 = ((xor_ln340_1326_fu_11373_p2[0:0] === 1'b1) ? 24'd8388607 : acc_3_V_161_fu_11348_p2);

assign select_ln340_1350_fu_11479_p3 = ((xor_ln340_1327_fu_11461_p2[0:0] === 1'b1) ? 24'd8388607 : acc_3_V_163_fu_11436_p2);

assign select_ln340_13_fu_4393_p3 = ((or_ln340_13_fu_4375_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_777_fu_4290_p2);

assign select_ln340_14_fu_4530_p3 = ((or_ln340_1422_fu_4512_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_778_fu_4427_p2);

assign select_ln340_15_fu_4667_p3 = ((or_ln340_15_fu_4649_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_779_fu_4564_p2);

assign select_ln340_16_fu_4804_p3 = ((or_ln340_16_fu_4786_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_780_fu_4701_p2);

assign select_ln340_17_fu_4941_p3 = ((or_ln340_17_fu_4923_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_781_fu_4838_p2);

assign select_ln340_18_fu_5078_p3 = ((or_ln340_18_fu_5060_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_782_fu_4975_p2);

assign select_ln340_19_fu_5215_p3 = ((or_ln340_19_fu_5197_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_783_fu_5112_p2);

assign select_ln340_1_fu_2749_p3 = ((or_ln340_1_fu_2731_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_765_fu_2646_p2);

assign select_ln340_20_fu_5352_p3 = ((or_ln340_20_fu_5334_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_784_fu_5249_p2);

assign select_ln340_21_fu_5489_p3 = ((or_ln340_21_fu_5471_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_785_fu_5386_p2);

assign select_ln340_22_fu_5626_p3 = ((or_ln340_22_fu_5608_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_786_fu_5523_p2);

assign select_ln340_23_fu_5763_p3 = ((or_ln340_23_fu_5745_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_787_fu_5660_p2);

assign select_ln340_24_fu_5900_p3 = ((or_ln340_24_fu_5882_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_788_fu_5797_p2);

assign select_ln340_2576_fu_2628_p3 = ((or_ln340_2840_fu_2606_p2[0:0] === 1'b1) ? select_ln340_fu_2612_p3 : select_ln388_fu_2620_p3);

assign select_ln340_2577_fu_8063_p3 = ((or_ln340_2841_fu_8041_p2[0:0] === 1'b1) ? select_ln340_1311_fu_8047_p3 : acc_0_V_146_fu_8055_p3);

assign select_ln340_2578_fu_2765_p3 = ((or_ln340_2843_fu_2743_p2[0:0] === 1'b1) ? select_ln340_1_fu_2749_p3 : select_ln388_1_fu_2757_p3);

assign select_ln340_2579_fu_8151_p3 = ((or_ln340_2844_fu_8129_p2[0:0] === 1'b1) ? select_ln340_1312_fu_8135_p3 : acc_0_V_148_fu_8143_p3);

assign select_ln340_2580_fu_2902_p3 = ((or_ln340_2846_fu_2880_p2[0:0] === 1'b1) ? select_ln340_2_fu_2886_p3 : select_ln388_2_fu_2894_p3);

assign select_ln340_2581_fu_8239_p3 = ((or_ln340_2847_fu_8217_p2[0:0] === 1'b1) ? select_ln340_1313_fu_8223_p3 : acc_0_V_150_fu_8231_p3);

assign select_ln340_2582_fu_3039_p3 = ((or_ln340_2849_fu_3017_p2[0:0] === 1'b1) ? select_ln340_3_fu_3023_p3 : select_ln388_3_fu_3031_p3);

assign select_ln340_2583_fu_8327_p3 = ((or_ln340_2850_fu_8305_p2[0:0] === 1'b1) ? select_ln340_1314_fu_8311_p3 : acc_0_V_152_fu_8319_p3);

assign select_ln340_2584_fu_3176_p3 = ((or_ln340_2852_fu_3154_p2[0:0] === 1'b1) ? select_ln340_4_fu_3160_p3 : select_ln388_4_fu_3168_p3);

assign select_ln340_2585_fu_8415_p3 = ((or_ln340_2853_fu_8393_p2[0:0] === 1'b1) ? select_ln340_1315_fu_8399_p3 : acc_0_V_154_fu_8407_p3);

assign select_ln340_2586_fu_3313_p3 = ((or_ln340_2855_fu_3291_p2[0:0] === 1'b1) ? select_ln340_5_fu_3297_p3 : select_ln388_5_fu_3305_p3);

assign select_ln340_2587_fu_8503_p3 = ((or_ln340_2856_fu_8481_p2[0:0] === 1'b1) ? select_ln340_1316_fu_8487_p3 : acc_0_V_156_fu_8495_p3);

assign select_ln340_2588_fu_3450_p3 = ((or_ln340_2858_fu_3428_p2[0:0] === 1'b1) ? select_ln340_6_fu_3434_p3 : select_ln388_6_fu_3442_p3);

assign select_ln340_2589_fu_8591_p3 = ((or_ln340_2859_fu_8569_p2[0:0] === 1'b1) ? select_ln340_1317_fu_8575_p3 : acc_0_V_158_fu_8583_p3);

assign select_ln340_2590_fu_3587_p3 = ((or_ln340_2861_fu_3565_p2[0:0] === 1'b1) ? select_ln340_7_fu_3571_p3 : select_ln388_7_fu_3579_p3);

assign select_ln340_2591_fu_8679_p3 = ((or_ln340_2862_fu_8657_p2[0:0] === 1'b1) ? select_ln340_1318_fu_8663_p3 : acc_0_V_160_fu_8671_p3);

assign select_ln340_2592_fu_3724_p3 = ((or_ln340_2864_fu_3702_p2[0:0] === 1'b1) ? select_ln340_8_fu_3708_p3 : select_ln388_8_fu_3716_p3);

assign select_ln340_2593_fu_8767_p3 = ((or_ln340_2865_fu_8745_p2[0:0] === 1'b1) ? select_ln340_1319_fu_8751_p3 : acc_0_V_162_fu_8759_p3);

assign select_ln340_2594_fu_3861_p3 = ((or_ln340_2867_fu_3839_p2[0:0] === 1'b1) ? select_ln340_9_fu_3845_p3 : select_ln388_9_fu_3853_p3);

assign select_ln340_2596_fu_3998_p3 = ((or_ln340_2870_fu_3976_p2[0:0] === 1'b1) ? select_ln340_10_fu_3982_p3 : select_ln388_10_fu_3990_p3);

assign select_ln340_2597_fu_8943_p3 = ((or_ln340_2871_fu_8921_p2[0:0] === 1'b1) ? select_ln340_1321_fu_8927_p3 : acc_1_V_146_fu_8935_p3);

assign select_ln340_2598_fu_4135_p3 = ((or_ln340_2873_fu_4113_p2[0:0] === 1'b1) ? select_ln340_11_fu_4119_p3 : select_ln388_11_fu_4127_p3);

assign select_ln340_2599_fu_9031_p3 = ((or_ln340_2874_fu_9009_p2[0:0] === 1'b1) ? select_ln340_1322_fu_9015_p3 : acc_1_V_148_fu_9023_p3);

assign select_ln340_25_fu_6037_p3 = ((or_ln340_25_fu_6019_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_789_fu_5934_p2);

assign select_ln340_2600_fu_4272_p3 = ((or_ln340_2876_fu_4250_p2[0:0] === 1'b1) ? select_ln340_12_fu_4256_p3 : select_ln388_12_fu_4264_p3);

assign select_ln340_2601_fu_9119_p3 = ((or_ln340_2877_fu_9097_p2[0:0] === 1'b1) ? select_ln340_1323_fu_9103_p3 : acc_1_V_150_fu_9111_p3);

assign select_ln340_2602_fu_4409_p3 = ((or_ln340_2879_fu_4387_p2[0:0] === 1'b1) ? select_ln340_13_fu_4393_p3 : select_ln388_13_fu_4401_p3);

assign select_ln340_2603_fu_9207_p3 = ((or_ln340_2880_fu_9185_p2[0:0] === 1'b1) ? select_ln340_1324_fu_9191_p3 : acc_1_V_152_fu_9199_p3);

assign select_ln340_2604_fu_4546_p3 = ((or_ln340_2882_fu_4524_p2[0:0] === 1'b1) ? select_ln340_14_fu_4530_p3 : select_ln388_14_fu_4538_p3);

assign select_ln340_2605_fu_9295_p3 = ((or_ln340_2883_fu_9273_p2[0:0] === 1'b1) ? select_ln340_1325_fu_9279_p3 : acc_1_V_154_fu_9287_p3);

assign select_ln340_2606_fu_4683_p3 = ((or_ln340_2885_fu_4661_p2[0:0] === 1'b1) ? select_ln340_15_fu_4667_p3 : select_ln388_15_fu_4675_p3);

assign select_ln340_2607_fu_9383_p3 = ((or_ln340_2886_fu_9361_p2[0:0] === 1'b1) ? select_ln340_1326_fu_9367_p3 : acc_1_V_156_fu_9375_p3);

assign select_ln340_2608_fu_4820_p3 = ((or_ln340_2888_fu_4798_p2[0:0] === 1'b1) ? select_ln340_16_fu_4804_p3 : select_ln388_16_fu_4812_p3);

assign select_ln340_2609_fu_9471_p3 = ((or_ln340_2889_fu_9449_p2[0:0] === 1'b1) ? select_ln340_1327_fu_9455_p3 : acc_1_V_158_fu_9463_p3);

assign select_ln340_2610_fu_4957_p3 = ((or_ln340_2891_fu_4935_p2[0:0] === 1'b1) ? select_ln340_17_fu_4941_p3 : select_ln388_17_fu_4949_p3);

assign select_ln340_2611_fu_9559_p3 = ((or_ln340_2892_fu_9537_p2[0:0] === 1'b1) ? select_ln340_1328_fu_9543_p3 : acc_1_V_160_fu_9551_p3);

assign select_ln340_2612_fu_5094_p3 = ((or_ln340_2894_fu_5072_p2[0:0] === 1'b1) ? select_ln340_18_fu_5078_p3 : select_ln388_18_fu_5086_p3);

assign select_ln340_2613_fu_9647_p3 = ((or_ln340_2895_fu_9625_p2[0:0] === 1'b1) ? select_ln340_1329_fu_9631_p3 : acc_1_V_162_fu_9639_p3);

assign select_ln340_2614_fu_5231_p3 = ((or_ln340_2897_fu_5209_p2[0:0] === 1'b1) ? select_ln340_19_fu_5215_p3 : select_ln388_19_fu_5223_p3);

assign select_ln340_2616_fu_5368_p3 = ((or_ln340_2900_fu_5346_p2[0:0] === 1'b1) ? select_ln340_20_fu_5352_p3 : select_ln388_20_fu_5360_p3);

assign select_ln340_2617_fu_9823_p3 = ((or_ln340_2901_fu_9801_p2[0:0] === 1'b1) ? select_ln340_1331_fu_9807_p3 : acc_2_V_146_fu_9815_p3);

assign select_ln340_2618_fu_5505_p3 = ((or_ln340_2903_fu_5483_p2[0:0] === 1'b1) ? select_ln340_21_fu_5489_p3 : select_ln388_21_fu_5497_p3);

assign select_ln340_2619_fu_9911_p3 = ((or_ln340_2904_fu_9889_p2[0:0] === 1'b1) ? select_ln340_1332_fu_9895_p3 : acc_2_V_148_fu_9903_p3);

assign select_ln340_2620_fu_5642_p3 = ((or_ln340_2906_fu_5620_p2[0:0] === 1'b1) ? select_ln340_22_fu_5626_p3 : select_ln388_22_fu_5634_p3);

assign select_ln340_2621_fu_9999_p3 = ((or_ln340_2907_fu_9977_p2[0:0] === 1'b1) ? select_ln340_1333_fu_9983_p3 : acc_2_V_150_fu_9991_p3);

assign select_ln340_2622_fu_5779_p3 = ((or_ln340_2909_fu_5757_p2[0:0] === 1'b1) ? select_ln340_23_fu_5763_p3 : select_ln388_23_fu_5771_p3);

assign select_ln340_2623_fu_10087_p3 = ((or_ln340_2910_fu_10065_p2[0:0] === 1'b1) ? select_ln340_1334_fu_10071_p3 : acc_2_V_152_fu_10079_p3);

assign select_ln340_2624_fu_5916_p3 = ((or_ln340_2912_fu_5894_p2[0:0] === 1'b1) ? select_ln340_24_fu_5900_p3 : select_ln388_24_fu_5908_p3);

assign select_ln340_2625_fu_10175_p3 = ((or_ln340_2913_fu_10153_p2[0:0] === 1'b1) ? select_ln340_1335_fu_10159_p3 : acc_2_V_154_fu_10167_p3);

assign select_ln340_2626_fu_6053_p3 = ((or_ln340_2915_fu_6031_p2[0:0] === 1'b1) ? select_ln340_25_fu_6037_p3 : select_ln388_25_fu_6045_p3);

assign select_ln340_2627_fu_10263_p3 = ((or_ln340_2916_fu_10241_p2[0:0] === 1'b1) ? select_ln340_1336_fu_10247_p3 : acc_2_V_156_fu_10255_p3);

assign select_ln340_2628_fu_6190_p3 = ((or_ln340_2918_fu_6168_p2[0:0] === 1'b1) ? select_ln340_26_fu_6174_p3 : select_ln388_26_fu_6182_p3);

assign select_ln340_2629_fu_10351_p3 = ((or_ln340_2919_fu_10329_p2[0:0] === 1'b1) ? select_ln340_1337_fu_10335_p3 : acc_2_V_158_fu_10343_p3);

assign select_ln340_2630_fu_6327_p3 = ((or_ln340_2921_fu_6305_p2[0:0] === 1'b1) ? select_ln340_27_fu_6311_p3 : select_ln388_27_fu_6319_p3);

assign select_ln340_2631_fu_10439_p3 = ((or_ln340_2922_fu_10417_p2[0:0] === 1'b1) ? select_ln340_1338_fu_10423_p3 : acc_2_V_160_fu_10431_p3);

assign select_ln340_2632_fu_6464_p3 = ((or_ln340_2924_fu_6442_p2[0:0] === 1'b1) ? select_ln340_28_fu_6448_p3 : select_ln388_28_fu_6456_p3);

assign select_ln340_2633_fu_10527_p3 = ((or_ln340_2925_fu_10505_p2[0:0] === 1'b1) ? select_ln340_1339_fu_10511_p3 : acc_2_V_162_fu_10519_p3);

assign select_ln340_2634_fu_6601_p3 = ((or_ln340_2927_fu_6579_p2[0:0] === 1'b1) ? select_ln340_29_fu_6585_p3 : select_ln388_29_fu_6593_p3);

assign select_ln340_2636_fu_6738_p3 = ((or_ln340_2930_fu_6716_p2[0:0] === 1'b1) ? select_ln340_30_fu_6722_p3 : select_ln388_30_fu_6730_p3);

assign select_ln340_2637_fu_10703_p3 = ((or_ln340_2931_fu_10681_p2[0:0] === 1'b1) ? select_ln340_1341_fu_10687_p3 : acc_3_V_146_fu_10695_p3);

assign select_ln340_2638_fu_6875_p3 = ((or_ln340_2933_fu_6853_p2[0:0] === 1'b1) ? select_ln340_31_fu_6859_p3 : select_ln388_31_fu_6867_p3);

assign select_ln340_2639_fu_10791_p3 = ((or_ln340_2934_fu_10769_p2[0:0] === 1'b1) ? select_ln340_1342_fu_10775_p3 : acc_3_V_148_fu_10783_p3);

assign select_ln340_2640_fu_7012_p3 = ((or_ln340_2936_fu_6990_p2[0:0] === 1'b1) ? select_ln340_32_fu_6996_p3 : select_ln388_32_fu_7004_p3);

assign select_ln340_2641_fu_10879_p3 = ((or_ln340_2937_fu_10857_p2[0:0] === 1'b1) ? select_ln340_1343_fu_10863_p3 : acc_3_V_150_fu_10871_p3);

assign select_ln340_2642_fu_7149_p3 = ((or_ln340_2939_fu_7127_p2[0:0] === 1'b1) ? select_ln340_33_fu_7133_p3 : select_ln388_33_fu_7141_p3);

assign select_ln340_2643_fu_10967_p3 = ((or_ln340_2940_fu_10945_p2[0:0] === 1'b1) ? select_ln340_1344_fu_10951_p3 : acc_3_V_152_fu_10959_p3);

assign select_ln340_2644_fu_7286_p3 = ((or_ln340_2942_fu_7264_p2[0:0] === 1'b1) ? select_ln340_34_fu_7270_p3 : select_ln388_34_fu_7278_p3);

assign select_ln340_2645_fu_11055_p3 = ((or_ln340_2943_fu_11033_p2[0:0] === 1'b1) ? select_ln340_1345_fu_11039_p3 : acc_3_V_154_fu_11047_p3);

assign select_ln340_2646_fu_7423_p3 = ((or_ln340_2945_fu_7401_p2[0:0] === 1'b1) ? select_ln340_35_fu_7407_p3 : select_ln388_35_fu_7415_p3);

assign select_ln340_2647_fu_11143_p3 = ((or_ln340_2946_fu_11121_p2[0:0] === 1'b1) ? select_ln340_1346_fu_11127_p3 : acc_3_V_156_fu_11135_p3);

assign select_ln340_2648_fu_7560_p3 = ((or_ln340_2948_fu_7538_p2[0:0] === 1'b1) ? select_ln340_36_fu_7544_p3 : select_ln388_36_fu_7552_p3);

assign select_ln340_2649_fu_11231_p3 = ((or_ln340_2949_fu_11209_p2[0:0] === 1'b1) ? select_ln340_1347_fu_11215_p3 : acc_3_V_158_fu_11223_p3);

assign select_ln340_2650_fu_7697_p3 = ((or_ln340_2951_fu_7675_p2[0:0] === 1'b1) ? select_ln340_37_fu_7681_p3 : select_ln388_37_fu_7689_p3);

assign select_ln340_2651_fu_11319_p3 = ((or_ln340_2952_fu_11297_p2[0:0] === 1'b1) ? select_ln340_1348_fu_11303_p3 : acc_3_V_160_fu_11311_p3);

assign select_ln340_2652_fu_7834_p3 = ((or_ln340_2954_fu_7812_p2[0:0] === 1'b1) ? select_ln340_38_fu_7818_p3 : select_ln388_38_fu_7826_p3);

assign select_ln340_2653_fu_11407_p3 = ((or_ln340_2955_fu_11385_p2[0:0] === 1'b1) ? select_ln340_1349_fu_11391_p3 : acc_3_V_162_fu_11399_p3);

assign select_ln340_2654_fu_7975_p3 = ((or_ln340_2957_fu_7953_p2[0:0] === 1'b1) ? select_ln340_39_fu_7959_p3 : select_ln388_39_fu_7967_p3);

assign select_ln340_26_fu_6174_p3 = ((or_ln340_26_fu_6156_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_790_fu_6071_p2);

assign select_ln340_27_fu_6311_p3 = ((or_ln340_27_fu_6293_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_791_fu_6208_p2);

assign select_ln340_28_fu_6448_p3 = ((or_ln340_28_fu_6430_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_792_fu_6345_p2);

assign select_ln340_29_fu_6585_p3 = ((or_ln340_29_fu_6567_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_793_fu_6482_p2);

assign select_ln340_2_fu_2886_p3 = ((or_ln340_2_fu_2868_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_766_fu_2783_p2);

assign select_ln340_30_fu_6722_p3 = ((or_ln340_30_fu_6704_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_794_fu_6619_p2);

assign select_ln340_31_fu_6859_p3 = ((or_ln340_31_fu_6841_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_795_fu_6756_p2);

assign select_ln340_32_fu_6996_p3 = ((or_ln340_32_fu_6978_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_796_fu_6893_p2);

assign select_ln340_33_fu_7133_p3 = ((or_ln340_33_fu_7115_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_797_fu_7030_p2);

assign select_ln340_34_fu_7270_p3 = ((or_ln340_34_fu_7252_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_798_fu_7167_p2);

assign select_ln340_35_fu_7407_p3 = ((or_ln340_35_fu_7389_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_799_fu_7304_p2);

assign select_ln340_36_fu_7544_p3 = ((or_ln340_36_fu_7526_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_800_fu_7441_p2);

assign select_ln340_37_fu_7681_p3 = ((or_ln340_37_fu_7663_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_801_fu_7578_p2);

assign select_ln340_38_fu_7818_p3 = ((or_ln340_38_fu_7800_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_802_fu_7715_p2);

assign select_ln340_39_fu_7959_p3 = ((or_ln340_39_fu_7941_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_803_fu_7855_p2);

assign select_ln340_3_fu_3023_p3 = ((or_ln340_3_fu_3005_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_767_fu_2920_p2);

assign select_ln340_4_fu_3160_p3 = ((or_ln340_4_fu_3142_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_768_fu_3057_p2);

assign select_ln340_5_fu_3297_p3 = ((or_ln340_5_fu_3279_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_769_fu_3194_p2);

assign select_ln340_6_fu_3434_p3 = ((or_ln340_6_fu_3416_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_770_fu_3331_p2);

assign select_ln340_7_fu_3571_p3 = ((or_ln340_7_fu_3553_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_771_fu_3468_p2);

assign select_ln340_8_fu_3708_p3 = ((or_ln340_8_fu_3690_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_772_fu_3605_p2);

assign select_ln340_9_fu_3845_p3 = ((or_ln340_9_fu_3827_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_773_fu_3742_p2);

assign select_ln340_fu_2612_p3 = ((or_ln340_fu_2594_p2[0:0] === 1'b1) ? 24'd8388607 : add_ln415_fu_2509_p2);

assign select_ln388_10_fu_3990_p3 = ((and_ln786_2107_fu_3959_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_774_fu_3879_p2);

assign select_ln388_11_fu_4127_p3 = ((and_ln786_2109_fu_4096_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_775_fu_4016_p2);

assign select_ln388_12_fu_4264_p3 = ((and_ln786_2111_fu_4233_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_776_fu_4153_p2);

assign select_ln388_13_fu_4401_p3 = ((and_ln786_2113_fu_4370_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_777_fu_4290_p2);

assign select_ln388_14_fu_4538_p3 = ((and_ln786_2115_fu_4507_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_778_fu_4427_p2);

assign select_ln388_15_fu_4675_p3 = ((and_ln786_2117_fu_4644_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_779_fu_4564_p2);

assign select_ln388_16_fu_4812_p3 = ((and_ln786_2119_fu_4781_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_780_fu_4701_p2);

assign select_ln388_17_fu_4949_p3 = ((and_ln786_2121_fu_4918_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_781_fu_4838_p2);

assign select_ln388_18_fu_5086_p3 = ((and_ln786_2123_fu_5055_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_782_fu_4975_p2);

assign select_ln388_19_fu_5223_p3 = ((and_ln786_2125_fu_5192_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_783_fu_5112_p2);

assign select_ln388_1_fu_2757_p3 = ((and_ln786_2089_fu_2726_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_765_fu_2646_p2);

assign select_ln388_20_fu_5360_p3 = ((and_ln786_2127_fu_5329_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_784_fu_5249_p2);

assign select_ln388_21_fu_5497_p3 = ((and_ln786_2129_fu_5466_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_785_fu_5386_p2);

assign select_ln388_22_fu_5634_p3 = ((and_ln786_2131_fu_5603_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_786_fu_5523_p2);

assign select_ln388_23_fu_5771_p3 = ((and_ln786_2133_fu_5740_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_787_fu_5660_p2);

assign select_ln388_24_fu_5908_p3 = ((and_ln786_2135_fu_5877_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_788_fu_5797_p2);

assign select_ln388_25_fu_6045_p3 = ((and_ln786_2137_fu_6014_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_789_fu_5934_p2);

assign select_ln388_26_fu_6182_p3 = ((and_ln786_2139_fu_6151_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_790_fu_6071_p2);

assign select_ln388_27_fu_6319_p3 = ((and_ln786_2141_fu_6288_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_791_fu_6208_p2);

assign select_ln388_28_fu_6456_p3 = ((and_ln786_2143_fu_6425_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_792_fu_6345_p2);

assign select_ln388_29_fu_6593_p3 = ((and_ln786_2145_fu_6562_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_793_fu_6482_p2);

assign select_ln388_2_fu_2894_p3 = ((and_ln786_2091_fu_2863_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_766_fu_2783_p2);

assign select_ln388_30_fu_6730_p3 = ((and_ln786_2147_fu_6699_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_794_fu_6619_p2);

assign select_ln388_31_fu_6867_p3 = ((and_ln786_2149_fu_6836_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_795_fu_6756_p2);

assign select_ln388_32_fu_7004_p3 = ((and_ln786_2151_fu_6973_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_796_fu_6893_p2);

assign select_ln388_33_fu_7141_p3 = ((and_ln786_2153_fu_7110_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_797_fu_7030_p2);

assign select_ln388_34_fu_7278_p3 = ((and_ln786_2155_fu_7247_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_798_fu_7167_p2);

assign select_ln388_35_fu_7415_p3 = ((and_ln786_2157_fu_7384_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_799_fu_7304_p2);

assign select_ln388_36_fu_7552_p3 = ((and_ln786_2159_fu_7521_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_800_fu_7441_p2);

assign select_ln388_37_fu_7689_p3 = ((and_ln786_2161_fu_7658_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_801_fu_7578_p2);

assign select_ln388_38_fu_7826_p3 = ((and_ln786_2163_fu_7795_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_802_fu_7715_p2);

assign select_ln388_39_fu_7967_p3 = ((and_ln786_2165_fu_7936_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_803_fu_7855_p2);

assign select_ln388_3_fu_3031_p3 = ((and_ln786_2093_fu_3000_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_767_fu_2920_p2);

assign select_ln388_4_fu_3168_p3 = ((and_ln786_2095_fu_3137_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_768_fu_3057_p2);

assign select_ln388_5_fu_3305_p3 = ((and_ln786_2097_fu_3274_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_769_fu_3194_p2);

assign select_ln388_6_fu_3442_p3 = ((and_ln786_2099_fu_3411_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_770_fu_3331_p2);

assign select_ln388_7_fu_3579_p3 = ((and_ln786_2101_fu_3548_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_771_fu_3468_p2);

assign select_ln388_8_fu_3716_p3 = ((and_ln786_2103_fu_3685_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_772_fu_3605_p2);

assign select_ln388_9_fu_3853_p3 = ((and_ln786_2105_fu_3822_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_773_fu_3742_p2);

assign select_ln388_fu_2620_p3 = ((and_ln786_2087_fu_2589_p2[0:0] === 1'b1) ? 24'd8388608 : add_ln415_fu_2509_p2);

assign select_ln391_fu_11524_p3 = ((icmp_ln360_reg_11971[0:0] === 1'b1) ? 32'd3 : add_ln391_fu_11519_p2);

assign select_ln416_750_fu_2684_p3 = ((and_ln416_750_fu_2665_p2[0:0] === 1'b1) ? xor_ln779_1_fu_2679_p2 : tmp_5907_reg_12024);

assign select_ln416_751_fu_2821_p3 = ((and_ln416_751_fu_2802_p2[0:0] === 1'b1) ? xor_ln779_2_fu_2816_p2 : tmp_5914_reg_12047);

assign select_ln416_752_fu_2958_p3 = ((and_ln416_752_fu_2939_p2[0:0] === 1'b1) ? xor_ln779_3_fu_2953_p2 : tmp_5921_reg_12070);

assign select_ln416_753_fu_3095_p3 = ((and_ln416_753_fu_3076_p2[0:0] === 1'b1) ? xor_ln779_4_fu_3090_p2 : tmp_5928_reg_12093);

assign select_ln416_754_fu_3232_p3 = ((and_ln416_754_fu_3213_p2[0:0] === 1'b1) ? xor_ln779_5_fu_3227_p2 : tmp_5935_reg_12116);

assign select_ln416_755_fu_3369_p3 = ((and_ln416_755_fu_3350_p2[0:0] === 1'b1) ? xor_ln779_6_fu_3364_p2 : tmp_5942_reg_12139);

assign select_ln416_756_fu_3506_p3 = ((and_ln416_756_fu_3487_p2[0:0] === 1'b1) ? xor_ln779_7_fu_3501_p2 : tmp_5949_reg_12162);

assign select_ln416_757_fu_3643_p3 = ((and_ln416_757_fu_3624_p2[0:0] === 1'b1) ? xor_ln779_8_fu_3638_p2 : tmp_5956_reg_12185);

assign select_ln416_758_fu_3780_p3 = ((and_ln416_758_fu_3761_p2[0:0] === 1'b1) ? xor_ln779_9_fu_3775_p2 : tmp_5963_reg_12208);

assign select_ln416_759_fu_3917_p3 = ((and_ln416_759_fu_3898_p2[0:0] === 1'b1) ? xor_ln779_10_fu_3912_p2 : tmp_5970_reg_12231);

assign select_ln416_760_fu_4054_p3 = ((and_ln416_760_fu_4035_p2[0:0] === 1'b1) ? xor_ln779_11_fu_4049_p2 : tmp_5977_reg_12254);

assign select_ln416_761_fu_4191_p3 = ((and_ln416_761_fu_4172_p2[0:0] === 1'b1) ? xor_ln779_12_fu_4186_p2 : tmp_5984_reg_12277);

assign select_ln416_762_fu_4328_p3 = ((and_ln416_762_fu_4309_p2[0:0] === 1'b1) ? xor_ln779_13_fu_4323_p2 : tmp_5991_reg_12300);

assign select_ln416_763_fu_4465_p3 = ((and_ln416_763_fu_4446_p2[0:0] === 1'b1) ? xor_ln779_14_fu_4460_p2 : tmp_5998_reg_12323);

assign select_ln416_764_fu_4602_p3 = ((and_ln416_764_fu_4583_p2[0:0] === 1'b1) ? xor_ln779_15_fu_4597_p2 : tmp_6005_reg_12346);

assign select_ln416_765_fu_4739_p3 = ((and_ln416_765_fu_4720_p2[0:0] === 1'b1) ? xor_ln779_16_fu_4734_p2 : tmp_6012_reg_12369);

assign select_ln416_766_fu_4876_p3 = ((and_ln416_766_fu_4857_p2[0:0] === 1'b1) ? xor_ln779_17_fu_4871_p2 : tmp_6019_reg_12392);

assign select_ln416_767_fu_5013_p3 = ((and_ln416_767_fu_4994_p2[0:0] === 1'b1) ? xor_ln779_18_fu_5008_p2 : tmp_6026_reg_12415);

assign select_ln416_768_fu_5150_p3 = ((and_ln416_768_fu_5131_p2[0:0] === 1'b1) ? xor_ln779_19_fu_5145_p2 : tmp_6033_reg_12438);

assign select_ln416_769_fu_5287_p3 = ((and_ln416_769_fu_5268_p2[0:0] === 1'b1) ? xor_ln779_20_fu_5282_p2 : tmp_6040_reg_12461);

assign select_ln416_770_fu_5424_p3 = ((and_ln416_770_fu_5405_p2[0:0] === 1'b1) ? xor_ln779_21_fu_5419_p2 : tmp_6047_reg_12484);

assign select_ln416_771_fu_5561_p3 = ((and_ln416_771_fu_5542_p2[0:0] === 1'b1) ? xor_ln779_22_fu_5556_p2 : tmp_6054_reg_12507);

assign select_ln416_772_fu_5698_p3 = ((and_ln416_772_fu_5679_p2[0:0] === 1'b1) ? xor_ln779_23_fu_5693_p2 : tmp_6061_reg_12530);

assign select_ln416_773_fu_5835_p3 = ((and_ln416_773_fu_5816_p2[0:0] === 1'b1) ? xor_ln779_24_fu_5830_p2 : tmp_6068_reg_12553);

assign select_ln416_774_fu_5972_p3 = ((and_ln416_774_fu_5953_p2[0:0] === 1'b1) ? xor_ln779_25_fu_5967_p2 : tmp_6075_reg_12576);

assign select_ln416_775_fu_6109_p3 = ((and_ln416_775_fu_6090_p2[0:0] === 1'b1) ? xor_ln779_26_fu_6104_p2 : tmp_6082_reg_12599);

assign select_ln416_776_fu_6246_p3 = ((and_ln416_776_fu_6227_p2[0:0] === 1'b1) ? xor_ln779_27_fu_6241_p2 : tmp_6089_reg_12622);

assign select_ln416_777_fu_6383_p3 = ((and_ln416_777_fu_6364_p2[0:0] === 1'b1) ? xor_ln779_28_fu_6378_p2 : tmp_6096_reg_12645);

assign select_ln416_778_fu_6520_p3 = ((and_ln416_778_fu_6501_p2[0:0] === 1'b1) ? xor_ln779_29_fu_6515_p2 : tmp_6103_reg_12668);

assign select_ln416_779_fu_6657_p3 = ((and_ln416_779_fu_6638_p2[0:0] === 1'b1) ? xor_ln779_30_fu_6652_p2 : tmp_6110_reg_12691);

assign select_ln416_780_fu_6794_p3 = ((and_ln416_780_fu_6775_p2[0:0] === 1'b1) ? xor_ln779_31_fu_6789_p2 : tmp_6117_reg_12714);

assign select_ln416_781_fu_6931_p3 = ((and_ln416_781_fu_6912_p2[0:0] === 1'b1) ? xor_ln779_32_fu_6926_p2 : tmp_6124_reg_12737);

assign select_ln416_782_fu_7068_p3 = ((and_ln416_782_fu_7049_p2[0:0] === 1'b1) ? xor_ln779_33_fu_7063_p2 : tmp_6131_reg_12760);

assign select_ln416_783_fu_7205_p3 = ((and_ln416_783_fu_7186_p2[0:0] === 1'b1) ? xor_ln779_34_fu_7200_p2 : tmp_6138_reg_12783);

assign select_ln416_784_fu_7342_p3 = ((and_ln416_784_fu_7323_p2[0:0] === 1'b1) ? xor_ln779_35_fu_7337_p2 : tmp_6145_reg_12806);

assign select_ln416_785_fu_7479_p3 = ((and_ln416_785_fu_7460_p2[0:0] === 1'b1) ? xor_ln779_36_fu_7474_p2 : tmp_6152_reg_12829);

assign select_ln416_786_fu_7616_p3 = ((and_ln416_786_fu_7597_p2[0:0] === 1'b1) ? xor_ln779_37_fu_7611_p2 : tmp_6159_reg_12852);

assign select_ln416_787_fu_7753_p3 = ((and_ln416_787_fu_7734_p2[0:0] === 1'b1) ? xor_ln779_38_fu_7748_p2 : tmp_6166_reg_12875);

assign select_ln416_788_fu_7894_p3 = ((and_ln416_788_fu_7875_p2[0:0] === 1'b1) ? xor_ln779_39_fu_7889_p2 : tmp_6173_reg_12898);

assign select_ln416_fu_2547_p3 = ((and_ln416_fu_2528_p2[0:0] === 1'b1) ? xor_ln779_fu_2542_p2 : tmp_5900_reg_12001);

assign select_ln56_39_fu_944_p3 = ((in_index13_reg_542[0:0] === 1'b1) ? kernel_data_V_3158 : kernel_data_V_2157);

assign select_ln56_40_fu_993_p3 = ((in_index13_reg_542[0:0] === 1'b1) ? kernel_data_V_5 : kernel_data_V_4);

assign select_ln56_41_fu_1042_p3 = ((in_index13_reg_542[0:0] === 1'b1) ? kernel_data_V_7 : kernel_data_V_6);

assign select_ln56_42_fu_1091_p3 = ((in_index13_reg_542[0:0] === 1'b1) ? kernel_data_V_9 : kernel_data_V_8);

assign select_ln56_43_fu_1140_p3 = ((in_index13_reg_542[0:0] === 1'b1) ? kernel_data_V_11 : kernel_data_V_10);

assign select_ln56_44_fu_1189_p3 = ((in_index13_reg_542[0:0] === 1'b1) ? kernel_data_V_13 : kernel_data_V_12);

assign select_ln56_45_fu_1238_p3 = ((in_index13_reg_542[0:0] === 1'b1) ? kernel_data_V_15 : kernel_data_V_14);

assign select_ln56_46_fu_1287_p3 = ((in_index13_reg_542[0:0] === 1'b1) ? kernel_data_V_17 : kernel_data_V_16);

assign select_ln56_47_fu_1336_p3 = ((in_index13_reg_542[0:0] === 1'b1) ? kernel_data_V_19 : kernel_data_V_18);

assign select_ln56_fu_893_p3 = ((in_index13_reg_542[0:0] === 1'b1) ? kernel_data_V_1156 : kernel_data_V_0);

assign sext_ln1116_72_fu_962_p1 = $signed(select_ln56_39_fu_944_p3);

assign sext_ln1116_73_fu_1011_p1 = $signed(select_ln56_40_fu_993_p3);

assign sext_ln1116_74_fu_1060_p1 = $signed(select_ln56_41_fu_1042_p3);

assign sext_ln1116_75_fu_1109_p1 = $signed(select_ln56_42_fu_1091_p3);

assign sext_ln1116_76_fu_1158_p1 = $signed(select_ln56_43_fu_1140_p3);

assign sext_ln1116_77_fu_1207_p1 = $signed(select_ln56_44_fu_1189_p3);

assign sext_ln1116_78_fu_1256_p1 = $signed(select_ln56_45_fu_1238_p3);

assign sext_ln1116_79_fu_1305_p1 = $signed(select_ln56_46_fu_1287_p3);

assign sext_ln1116_80_fu_1354_p1 = select_ln56_47_fu_1336_p3;

assign sext_ln1116_fu_905_p1 = $signed(select_ln56_fu_893_p3);

assign sext_ln703_1541_fu_7987_p1 = select_ln340_2576_reg_12916;

assign sext_ln703_1542_fu_8071_p1 = select_ln340_2577_fu_8063_p3;

assign sext_ln703_1543_fu_8075_p1 = select_ln340_2578_reg_12922;

assign sext_ln703_1544_fu_8159_p1 = select_ln340_2579_fu_8151_p3;

assign sext_ln703_1545_fu_8163_p1 = select_ln340_2580_reg_12928;

assign sext_ln703_1546_fu_8247_p1 = select_ln340_2581_fu_8239_p3;

assign sext_ln703_1547_fu_8251_p1 = select_ln340_2582_reg_12934;

assign sext_ln703_1548_fu_8335_p1 = select_ln340_2583_fu_8327_p3;

assign sext_ln703_1549_fu_8339_p1 = select_ln340_2584_reg_12940;

assign sext_ln703_1550_fu_8423_p1 = select_ln340_2585_fu_8415_p3;

assign sext_ln703_1551_fu_8427_p1 = select_ln340_2586_reg_12946;

assign sext_ln703_1552_fu_8511_p1 = select_ln340_2587_fu_8503_p3;

assign sext_ln703_1553_fu_8515_p1 = select_ln340_2588_reg_12952;

assign sext_ln703_1554_fu_8599_p1 = select_ln340_2589_fu_8591_p3;

assign sext_ln703_1555_fu_8603_p1 = select_ln340_2590_reg_12958;

assign sext_ln703_1556_fu_8687_p1 = select_ln340_2591_fu_8679_p3;

assign sext_ln703_1557_fu_8691_p1 = select_ln340_2592_reg_12964;

assign sext_ln703_1558_fu_8775_p1 = select_ln340_2593_fu_8767_p3;

assign sext_ln703_1559_fu_8779_p1 = select_ln340_2594_reg_12970;

assign sext_ln703_1560_fu_8863_p1 = tmp_data_1_V_149_reg_565;

assign sext_ln703_1561_fu_8867_p1 = select_ln340_2596_reg_12976;

assign sext_ln703_1562_fu_8951_p1 = select_ln340_2597_fu_8943_p3;

assign sext_ln703_1563_fu_8955_p1 = select_ln340_2598_reg_12982;

assign sext_ln703_1564_fu_9039_p1 = select_ln340_2599_fu_9031_p3;

assign sext_ln703_1565_fu_9043_p1 = select_ln340_2600_reg_12988;

assign sext_ln703_1566_fu_9127_p1 = select_ln340_2601_fu_9119_p3;

assign sext_ln703_1567_fu_9131_p1 = select_ln340_2602_reg_12994;

assign sext_ln703_1568_fu_9215_p1 = select_ln340_2603_fu_9207_p3;

assign sext_ln703_1569_fu_9219_p1 = select_ln340_2604_reg_13000;

assign sext_ln703_1570_fu_9303_p1 = select_ln340_2605_fu_9295_p3;

assign sext_ln703_1571_fu_9307_p1 = select_ln340_2606_reg_13006;

assign sext_ln703_1572_fu_9391_p1 = select_ln340_2607_fu_9383_p3;

assign sext_ln703_1573_fu_9395_p1 = select_ln340_2608_reg_13012;

assign sext_ln703_1574_fu_9479_p1 = select_ln340_2609_fu_9471_p3;

assign sext_ln703_1575_fu_9483_p1 = select_ln340_2610_reg_13018;

assign sext_ln703_1576_fu_9567_p1 = select_ln340_2611_fu_9559_p3;

assign sext_ln703_1577_fu_9571_p1 = select_ln340_2612_reg_13024;

assign sext_ln703_1578_fu_9655_p1 = select_ln340_2613_fu_9647_p3;

assign sext_ln703_1579_fu_9659_p1 = select_ln340_2614_reg_13030;

assign sext_ln703_1580_fu_9743_p1 = tmp_data_2_V_147_reg_576;

assign sext_ln703_1581_fu_9747_p1 = select_ln340_2616_reg_13036;

assign sext_ln703_1582_fu_9831_p1 = select_ln340_2617_fu_9823_p3;

assign sext_ln703_1583_fu_9835_p1 = select_ln340_2618_reg_13042;

assign sext_ln703_1584_fu_9919_p1 = select_ln340_2619_fu_9911_p3;

assign sext_ln703_1585_fu_9923_p1 = select_ln340_2620_reg_13048;

assign sext_ln703_1586_fu_10007_p1 = select_ln340_2621_fu_9999_p3;

assign sext_ln703_1587_fu_10011_p1 = select_ln340_2622_reg_13054;

assign sext_ln703_1588_fu_10095_p1 = select_ln340_2623_fu_10087_p3;

assign sext_ln703_1589_fu_10099_p1 = select_ln340_2624_reg_13060;

assign sext_ln703_1590_fu_10183_p1 = select_ln340_2625_fu_10175_p3;

assign sext_ln703_1591_fu_10187_p1 = select_ln340_2626_reg_13066;

assign sext_ln703_1592_fu_10271_p1 = select_ln340_2627_fu_10263_p3;

assign sext_ln703_1593_fu_10275_p1 = select_ln340_2628_reg_13072;

assign sext_ln703_1594_fu_10359_p1 = select_ln340_2629_fu_10351_p3;

assign sext_ln703_1595_fu_10363_p1 = select_ln340_2630_reg_13078;

assign sext_ln703_1596_fu_10447_p1 = select_ln340_2631_fu_10439_p3;

assign sext_ln703_1597_fu_10451_p1 = select_ln340_2632_reg_13084;

assign sext_ln703_1598_fu_10535_p1 = select_ln340_2633_fu_10527_p3;

assign sext_ln703_1599_fu_10539_p1 = select_ln340_2634_reg_13090;

assign sext_ln703_1600_fu_10623_p1 = tmp_data_3_V_145_reg_587;

assign sext_ln703_1601_fu_10627_p1 = select_ln340_2636_reg_13096;

assign sext_ln703_1602_fu_10711_p1 = select_ln340_2637_fu_10703_p3;

assign sext_ln703_1603_fu_10715_p1 = select_ln340_2638_reg_13102;

assign sext_ln703_1604_fu_10799_p1 = select_ln340_2639_fu_10791_p3;

assign sext_ln703_1605_fu_10803_p1 = select_ln340_2640_reg_13108;

assign sext_ln703_1606_fu_10887_p1 = select_ln340_2641_fu_10879_p3;

assign sext_ln703_1607_fu_10891_p1 = select_ln340_2642_reg_13114;

assign sext_ln703_1608_fu_10975_p1 = select_ln340_2643_fu_10967_p3;

assign sext_ln703_1609_fu_10979_p1 = select_ln340_2644_reg_13120;

assign sext_ln703_1610_fu_11063_p1 = select_ln340_2645_fu_11055_p3;

assign sext_ln703_1611_fu_11067_p1 = select_ln340_2646_reg_13126;

assign sext_ln703_1612_fu_11151_p1 = select_ln340_2647_fu_11143_p3;

assign sext_ln703_1613_fu_11155_p1 = select_ln340_2648_reg_13132;

assign sext_ln703_1614_fu_11239_p1 = select_ln340_2649_fu_11231_p3;

assign sext_ln703_1615_fu_11243_p1 = select_ln340_2650_reg_13138;

assign sext_ln703_1616_fu_11327_p1 = select_ln340_2651_fu_11319_p3;

assign sext_ln703_1617_fu_11331_p1 = select_ln340_2652_reg_13144;

assign sext_ln703_1618_fu_11415_p1 = select_ln340_2653_fu_11407_p3;

assign sext_ln703_1619_fu_11419_p1 = select_ln340_2654_reg_13150;

assign sext_ln703_fu_7983_p1 = tmp_data_0_V_1711_reg_554;

assign sext_ln708_fu_7842_p1 = $signed(trunc_ln708_798_reg_12906);

assign start_out = real_start;

assign tmp_5899_fu_852_p4 = {{pX_3[31:2]}};

assign tmp_5901_fu_2499_p3 = mul_ln1118_reg_11996[32'd30];

assign tmp_5903_fu_2514_p3 = add_ln415_fu_2509_p2[32'd23];

assign tmp_5904_fu_2534_p3 = add_ln415_fu_2509_p2[32'd23];

assign tmp_5905_fu_7996_p3 = add_ln1192_fu_7990_p2[32'd24];

assign tmp_5906_fu_8009_p3 = acc_0_V_fu_8004_p2[32'd23];

assign tmp_5908_fu_2636_p3 = mul_ln1118_760_reg_12019[32'd30];

assign tmp_5910_fu_2651_p3 = add_ln415_765_fu_2646_p2[32'd23];

assign tmp_5911_fu_2671_p3 = add_ln415_765_fu_2646_p2[32'd23];

assign tmp_5912_fu_8084_p3 = add_ln1192_773_fu_8078_p2[32'd24];

assign tmp_5913_fu_8097_p3 = acc_0_V_147_fu_8092_p2[32'd23];

assign tmp_5915_fu_2773_p3 = mul_ln1118_761_reg_12042[32'd30];

assign tmp_5917_fu_2788_p3 = add_ln415_766_fu_2783_p2[32'd23];

assign tmp_5918_fu_2808_p3 = add_ln415_766_fu_2783_p2[32'd23];

assign tmp_5919_fu_8172_p3 = add_ln1192_774_fu_8166_p2[32'd24];

assign tmp_5920_fu_8185_p3 = acc_0_V_149_fu_8180_p2[32'd23];

assign tmp_5922_fu_2910_p3 = mul_ln1118_762_reg_12065[32'd30];

assign tmp_5924_fu_2925_p3 = add_ln415_767_fu_2920_p2[32'd23];

assign tmp_5925_fu_2945_p3 = add_ln415_767_fu_2920_p2[32'd23];

assign tmp_5926_fu_8260_p3 = add_ln1192_775_fu_8254_p2[32'd24];

assign tmp_5927_fu_8273_p3 = acc_0_V_151_fu_8268_p2[32'd23];

assign tmp_5929_fu_3047_p3 = mul_ln1118_763_reg_12088[32'd30];

assign tmp_5931_fu_3062_p3 = add_ln415_768_fu_3057_p2[32'd23];

assign tmp_5932_fu_3082_p3 = add_ln415_768_fu_3057_p2[32'd23];

assign tmp_5933_fu_8348_p3 = add_ln1192_776_fu_8342_p2[32'd24];

assign tmp_5934_fu_8361_p3 = acc_0_V_153_fu_8356_p2[32'd23];

assign tmp_5936_fu_3184_p3 = mul_ln1118_764_reg_12111[32'd30];

assign tmp_5938_fu_3199_p3 = add_ln415_769_fu_3194_p2[32'd23];

assign tmp_5939_fu_3219_p3 = add_ln415_769_fu_3194_p2[32'd23];

assign tmp_5940_fu_8436_p3 = add_ln1192_777_fu_8430_p2[32'd24];

assign tmp_5941_fu_8449_p3 = acc_0_V_155_fu_8444_p2[32'd23];

assign tmp_5943_fu_3321_p3 = mul_ln1118_765_reg_12134[32'd30];

assign tmp_5945_fu_3336_p3 = add_ln415_770_fu_3331_p2[32'd23];

assign tmp_5946_fu_3356_p3 = add_ln415_770_fu_3331_p2[32'd23];

assign tmp_5947_fu_8524_p3 = add_ln1192_778_fu_8518_p2[32'd24];

assign tmp_5948_fu_8537_p3 = acc_0_V_157_fu_8532_p2[32'd23];

assign tmp_5950_fu_3458_p3 = mul_ln1118_766_reg_12157[32'd30];

assign tmp_5952_fu_3473_p3 = add_ln415_771_fu_3468_p2[32'd23];

assign tmp_5953_fu_3493_p3 = add_ln415_771_fu_3468_p2[32'd23];

assign tmp_5954_fu_8612_p3 = add_ln1192_779_fu_8606_p2[32'd24];

assign tmp_5955_fu_8625_p3 = acc_0_V_159_fu_8620_p2[32'd23];

assign tmp_5957_fu_3595_p3 = mul_ln1118_767_reg_12180[32'd30];

assign tmp_5959_fu_3610_p3 = add_ln415_772_fu_3605_p2[32'd23];

assign tmp_5960_fu_3630_p3 = add_ln415_772_fu_3605_p2[32'd23];

assign tmp_5961_fu_8700_p3 = add_ln1192_780_fu_8694_p2[32'd24];

assign tmp_5962_fu_8713_p3 = acc_0_V_161_fu_8708_p2[32'd23];

assign tmp_5964_fu_3732_p3 = mul_ln1118_768_reg_12203[32'd30];

assign tmp_5966_fu_3747_p3 = add_ln415_773_fu_3742_p2[32'd23];

assign tmp_5967_fu_3767_p3 = add_ln415_773_fu_3742_p2[32'd23];

assign tmp_5968_fu_8788_p3 = add_ln1192_781_fu_8782_p2[32'd24];

assign tmp_5969_fu_8801_p3 = acc_0_V_163_fu_8796_p2[32'd23];

assign tmp_5971_fu_3869_p3 = mul_ln1118_769_reg_12226[32'd30];

assign tmp_5973_fu_3884_p3 = add_ln415_774_fu_3879_p2[32'd23];

assign tmp_5974_fu_3904_p3 = add_ln415_774_fu_3879_p2[32'd23];

assign tmp_5975_fu_8876_p3 = add_ln1192_782_fu_8870_p2[32'd24];

assign tmp_5976_fu_8889_p3 = acc_1_V_fu_8884_p2[32'd23];

assign tmp_5978_fu_4006_p3 = mul_ln1118_770_reg_12249[32'd30];

assign tmp_5980_fu_4021_p3 = add_ln415_775_fu_4016_p2[32'd23];

assign tmp_5981_fu_4041_p3 = add_ln415_775_fu_4016_p2[32'd23];

assign tmp_5982_fu_8964_p3 = add_ln1192_783_fu_8958_p2[32'd24];

assign tmp_5983_fu_8977_p3 = acc_1_V_147_fu_8972_p2[32'd23];

assign tmp_5985_fu_4143_p3 = mul_ln1118_771_reg_12272[32'd30];

assign tmp_5987_fu_4158_p3 = add_ln415_776_fu_4153_p2[32'd23];

assign tmp_5988_fu_4178_p3 = add_ln415_776_fu_4153_p2[32'd23];

assign tmp_5989_fu_9052_p3 = add_ln1192_784_fu_9046_p2[32'd24];

assign tmp_5990_fu_9065_p3 = acc_1_V_149_fu_9060_p2[32'd23];

assign tmp_5992_fu_4280_p3 = mul_ln1118_772_reg_12295[32'd30];

assign tmp_5994_fu_4295_p3 = add_ln415_777_fu_4290_p2[32'd23];

assign tmp_5995_fu_4315_p3 = add_ln415_777_fu_4290_p2[32'd23];

assign tmp_5996_fu_9140_p3 = add_ln1192_785_fu_9134_p2[32'd24];

assign tmp_5997_fu_9153_p3 = acc_1_V_151_fu_9148_p2[32'd23];

assign tmp_5999_fu_4417_p3 = mul_ln1118_773_reg_12318[32'd30];

assign tmp_6001_fu_4432_p3 = add_ln415_778_fu_4427_p2[32'd23];

assign tmp_6002_fu_4452_p3 = add_ln415_778_fu_4427_p2[32'd23];

assign tmp_6003_fu_9228_p3 = add_ln1192_786_fu_9222_p2[32'd24];

assign tmp_6004_fu_9241_p3 = acc_1_V_153_fu_9236_p2[32'd23];

assign tmp_6006_fu_4554_p3 = mul_ln1118_774_reg_12341[32'd30];

assign tmp_6008_fu_4569_p3 = add_ln415_779_fu_4564_p2[32'd23];

assign tmp_6009_fu_4589_p3 = add_ln415_779_fu_4564_p2[32'd23];

assign tmp_6010_fu_9316_p3 = add_ln1192_787_fu_9310_p2[32'd24];

assign tmp_6011_fu_9329_p3 = acc_1_V_155_fu_9324_p2[32'd23];

assign tmp_6013_fu_4691_p3 = mul_ln1118_775_reg_12364[32'd30];

assign tmp_6015_fu_4706_p3 = add_ln415_780_fu_4701_p2[32'd23];

assign tmp_6016_fu_4726_p3 = add_ln415_780_fu_4701_p2[32'd23];

assign tmp_6017_fu_9404_p3 = add_ln1192_788_fu_9398_p2[32'd24];

assign tmp_6018_fu_9417_p3 = acc_1_V_157_fu_9412_p2[32'd23];

assign tmp_6020_fu_4828_p3 = mul_ln1118_776_reg_12387[32'd30];

assign tmp_6022_fu_4843_p3 = add_ln415_781_fu_4838_p2[32'd23];

assign tmp_6023_fu_4863_p3 = add_ln415_781_fu_4838_p2[32'd23];

assign tmp_6024_fu_9492_p3 = add_ln1192_789_fu_9486_p2[32'd24];

assign tmp_6025_fu_9505_p3 = acc_1_V_159_fu_9500_p2[32'd23];

assign tmp_6027_fu_4965_p3 = mul_ln1118_777_reg_12410[32'd30];

assign tmp_6029_fu_4980_p3 = add_ln415_782_fu_4975_p2[32'd23];

assign tmp_6030_fu_5000_p3 = add_ln415_782_fu_4975_p2[32'd23];

assign tmp_6031_fu_9580_p3 = add_ln1192_790_fu_9574_p2[32'd24];

assign tmp_6032_fu_9593_p3 = acc_1_V_161_fu_9588_p2[32'd23];

assign tmp_6034_fu_5102_p3 = mul_ln1118_778_reg_12433[32'd30];

assign tmp_6036_fu_5117_p3 = add_ln415_783_fu_5112_p2[32'd23];

assign tmp_6037_fu_5137_p3 = add_ln415_783_fu_5112_p2[32'd23];

assign tmp_6038_fu_9668_p3 = add_ln1192_791_fu_9662_p2[32'd24];

assign tmp_6039_fu_9681_p3 = acc_1_V_163_fu_9676_p2[32'd23];

assign tmp_6041_fu_5239_p3 = mul_ln1118_779_reg_12456[32'd30];

assign tmp_6043_fu_5254_p3 = add_ln415_784_fu_5249_p2[32'd23];

assign tmp_6044_fu_5274_p3 = add_ln415_784_fu_5249_p2[32'd23];

assign tmp_6045_fu_9756_p3 = add_ln1192_792_fu_9750_p2[32'd24];

assign tmp_6046_fu_9769_p3 = acc_2_V_fu_9764_p2[32'd23];

assign tmp_6048_fu_5376_p3 = mul_ln1118_780_reg_12479[32'd30];

assign tmp_6050_fu_5391_p3 = add_ln415_785_fu_5386_p2[32'd23];

assign tmp_6051_fu_5411_p3 = add_ln415_785_fu_5386_p2[32'd23];

assign tmp_6052_fu_9844_p3 = add_ln1192_793_fu_9838_p2[32'd24];

assign tmp_6053_fu_9857_p3 = acc_2_V_147_fu_9852_p2[32'd23];

assign tmp_6055_fu_5513_p3 = mul_ln1118_781_reg_12502[32'd30];

assign tmp_6057_fu_5528_p3 = add_ln415_786_fu_5523_p2[32'd23];

assign tmp_6058_fu_5548_p3 = add_ln415_786_fu_5523_p2[32'd23];

assign tmp_6059_fu_9932_p3 = add_ln1192_794_fu_9926_p2[32'd24];

assign tmp_6060_fu_9945_p3 = acc_2_V_149_fu_9940_p2[32'd23];

assign tmp_6062_fu_5650_p3 = mul_ln1118_782_reg_12525[32'd30];

assign tmp_6064_fu_5665_p3 = add_ln415_787_fu_5660_p2[32'd23];

assign tmp_6065_fu_5685_p3 = add_ln415_787_fu_5660_p2[32'd23];

assign tmp_6066_fu_10020_p3 = add_ln1192_795_fu_10014_p2[32'd24];

assign tmp_6067_fu_10033_p3 = acc_2_V_151_fu_10028_p2[32'd23];

assign tmp_6069_fu_5787_p3 = mul_ln1118_783_reg_12548[32'd30];

assign tmp_6071_fu_5802_p3 = add_ln415_788_fu_5797_p2[32'd23];

assign tmp_6072_fu_5822_p3 = add_ln415_788_fu_5797_p2[32'd23];

assign tmp_6073_fu_10108_p3 = add_ln1192_796_fu_10102_p2[32'd24];

assign tmp_6074_fu_10121_p3 = acc_2_V_153_fu_10116_p2[32'd23];

assign tmp_6076_fu_5924_p3 = mul_ln1118_784_reg_12571[32'd30];

assign tmp_6078_fu_5939_p3 = add_ln415_789_fu_5934_p2[32'd23];

assign tmp_6079_fu_5959_p3 = add_ln415_789_fu_5934_p2[32'd23];

assign tmp_6080_fu_10196_p3 = add_ln1192_797_fu_10190_p2[32'd24];

assign tmp_6081_fu_10209_p3 = acc_2_V_155_fu_10204_p2[32'd23];

assign tmp_6083_fu_6061_p3 = mul_ln1118_785_reg_12594[32'd30];

assign tmp_6085_fu_6076_p3 = add_ln415_790_fu_6071_p2[32'd23];

assign tmp_6086_fu_6096_p3 = add_ln415_790_fu_6071_p2[32'd23];

assign tmp_6087_fu_10284_p3 = add_ln1192_798_fu_10278_p2[32'd24];

assign tmp_6088_fu_10297_p3 = acc_2_V_157_fu_10292_p2[32'd23];

assign tmp_6090_fu_6198_p3 = mul_ln1118_786_reg_12617[32'd30];

assign tmp_6092_fu_6213_p3 = add_ln415_791_fu_6208_p2[32'd23];

assign tmp_6093_fu_6233_p3 = add_ln415_791_fu_6208_p2[32'd23];

assign tmp_6094_fu_10372_p3 = add_ln1192_799_fu_10366_p2[32'd24];

assign tmp_6095_fu_10385_p3 = acc_2_V_159_fu_10380_p2[32'd23];

assign tmp_6097_fu_6335_p3 = mul_ln1118_787_reg_12640[32'd30];

assign tmp_6099_fu_6350_p3 = add_ln415_792_fu_6345_p2[32'd23];

assign tmp_6100_fu_6370_p3 = add_ln415_792_fu_6345_p2[32'd23];

assign tmp_6101_fu_10460_p3 = add_ln1192_800_fu_10454_p2[32'd24];

assign tmp_6102_fu_10473_p3 = acc_2_V_161_fu_10468_p2[32'd23];

assign tmp_6104_fu_6472_p3 = mul_ln1118_788_reg_12663[32'd30];

assign tmp_6106_fu_6487_p3 = add_ln415_793_fu_6482_p2[32'd23];

assign tmp_6107_fu_6507_p3 = add_ln415_793_fu_6482_p2[32'd23];

assign tmp_6108_fu_10548_p3 = add_ln1192_801_fu_10542_p2[32'd24];

assign tmp_6109_fu_10561_p3 = acc_2_V_163_fu_10556_p2[32'd23];

assign tmp_6111_fu_6609_p3 = mul_ln1118_789_reg_12686[32'd30];

assign tmp_6113_fu_6624_p3 = add_ln415_794_fu_6619_p2[32'd23];

assign tmp_6114_fu_6644_p3 = add_ln415_794_fu_6619_p2[32'd23];

assign tmp_6115_fu_10636_p3 = add_ln1192_802_fu_10630_p2[32'd24];

assign tmp_6116_fu_10649_p3 = acc_3_V_fu_10644_p2[32'd23];

assign tmp_6118_fu_6746_p3 = mul_ln1118_790_reg_12709[32'd30];

assign tmp_6120_fu_6761_p3 = add_ln415_795_fu_6756_p2[32'd23];

assign tmp_6121_fu_6781_p3 = add_ln415_795_fu_6756_p2[32'd23];

assign tmp_6122_fu_10724_p3 = add_ln1192_803_fu_10718_p2[32'd24];

assign tmp_6123_fu_10737_p3 = acc_3_V_147_fu_10732_p2[32'd23];

assign tmp_6125_fu_6883_p3 = mul_ln1118_791_reg_12732[32'd30];

assign tmp_6127_fu_6898_p3 = add_ln415_796_fu_6893_p2[32'd23];

assign tmp_6128_fu_6918_p3 = add_ln415_796_fu_6893_p2[32'd23];

assign tmp_6129_fu_10812_p3 = add_ln1192_804_fu_10806_p2[32'd24];

assign tmp_6130_fu_10825_p3 = acc_3_V_149_fu_10820_p2[32'd23];

assign tmp_6132_fu_7020_p3 = mul_ln1118_792_reg_12755[32'd30];

assign tmp_6134_fu_7035_p3 = add_ln415_797_fu_7030_p2[32'd23];

assign tmp_6135_fu_7055_p3 = add_ln415_797_fu_7030_p2[32'd23];

assign tmp_6136_fu_10900_p3 = add_ln1192_805_fu_10894_p2[32'd24];

assign tmp_6137_fu_10913_p3 = acc_3_V_151_fu_10908_p2[32'd23];

assign tmp_6139_fu_7157_p3 = mul_ln1118_793_reg_12778[32'd30];

assign tmp_6141_fu_7172_p3 = add_ln415_798_fu_7167_p2[32'd23];

assign tmp_6142_fu_7192_p3 = add_ln415_798_fu_7167_p2[32'd23];

assign tmp_6143_fu_10988_p3 = add_ln1192_806_fu_10982_p2[32'd24];

assign tmp_6144_fu_11001_p3 = acc_3_V_153_fu_10996_p2[32'd23];

assign tmp_6146_fu_7294_p3 = mul_ln1118_794_reg_12801[32'd30];

assign tmp_6148_fu_7309_p3 = add_ln415_799_fu_7304_p2[32'd23];

assign tmp_6149_fu_7329_p3 = add_ln415_799_fu_7304_p2[32'd23];

assign tmp_6150_fu_11076_p3 = add_ln1192_807_fu_11070_p2[32'd24];

assign tmp_6151_fu_11089_p3 = acc_3_V_155_fu_11084_p2[32'd23];

assign tmp_6153_fu_7431_p3 = mul_ln1118_795_reg_12824[32'd30];

assign tmp_6155_fu_7446_p3 = add_ln415_800_fu_7441_p2[32'd23];

assign tmp_6156_fu_7466_p3 = add_ln415_800_fu_7441_p2[32'd23];

assign tmp_6157_fu_11164_p3 = add_ln1192_808_fu_11158_p2[32'd24];

assign tmp_6158_fu_11177_p3 = acc_3_V_157_fu_11172_p2[32'd23];

assign tmp_6160_fu_7568_p3 = mul_ln1118_796_reg_12847[32'd30];

assign tmp_6162_fu_7583_p3 = add_ln415_801_fu_7578_p2[32'd23];

assign tmp_6163_fu_7603_p3 = add_ln415_801_fu_7578_p2[32'd23];

assign tmp_6164_fu_11252_p3 = add_ln1192_809_fu_11246_p2[32'd24];

assign tmp_6165_fu_11265_p3 = acc_3_V_159_fu_11260_p2[32'd23];

assign tmp_6167_fu_7705_p3 = mul_ln1118_797_reg_12870[32'd30];

assign tmp_6169_fu_7720_p3 = add_ln415_802_fu_7715_p2[32'd23];

assign tmp_6170_fu_7740_p3 = add_ln415_802_fu_7715_p2[32'd23];

assign tmp_6171_fu_11340_p3 = add_ln1192_810_fu_11334_p2[32'd24];

assign tmp_6172_fu_11353_p3 = acc_3_V_161_fu_11348_p2[32'd23];

assign tmp_6174_fu_7845_p3 = mul_ln1118_798_reg_12893[32'd29];

assign tmp_6176_fu_7861_p3 = add_ln415_803_fu_7855_p2[32'd23];

assign tmp_6177_fu_7881_p3 = add_ln415_803_fu_7855_p2[32'd23];

assign tmp_6178_fu_11428_p3 = add_ln1192_811_fu_11422_p2[32'd24];

assign tmp_6179_fu_11441_p3 = acc_3_V_163_fu_11436_p2[32'd23];

assign tmp_755_fu_952_p4 = {{w11_V_q0[15:8]}};

assign tmp_756_fu_1001_p4 = {{w11_V_q0[23:16]}};

assign tmp_757_fu_1050_p4 = {{w11_V_q0[31:24]}};

assign tmp_758_fu_1099_p4 = {{w11_V_q0[39:32]}};

assign tmp_759_fu_1148_p4 = {{w11_V_q0[47:40]}};

assign tmp_760_fu_1197_p4 = {{w11_V_q0[55:48]}};

assign tmp_761_fu_1246_p4 = {{w11_V_q0[63:56]}};

assign tmp_762_fu_1295_p4 = {{w11_V_q0[71:64]}};

assign tmp_763_fu_1344_p4 = {{w11_V_q0[79:72]}};

assign tmp_764_fu_1389_p4 = {{w11_V_q0[87:80]}};

assign tmp_765_fu_1426_p4 = {{w11_V_q0[95:88]}};

assign tmp_766_fu_1463_p4 = {{w11_V_q0[103:96]}};

assign tmp_767_fu_1500_p4 = {{w11_V_q0[111:104]}};

assign tmp_768_fu_1537_p4 = {{w11_V_q0[119:112]}};

assign tmp_769_fu_1574_p4 = {{w11_V_q0[127:120]}};

assign tmp_770_fu_1611_p4 = {{w11_V_q0[135:128]}};

assign tmp_771_fu_1648_p4 = {{w11_V_q0[143:136]}};

assign tmp_772_fu_1685_p4 = {{w11_V_q0[151:144]}};

assign tmp_773_fu_1722_p4 = {{w11_V_q0[159:152]}};

assign tmp_774_fu_1759_p4 = {{w11_V_q0[167:160]}};

assign tmp_775_fu_1796_p4 = {{w11_V_q0[175:168]}};

assign tmp_776_fu_1833_p4 = {{w11_V_q0[183:176]}};

assign tmp_777_fu_1870_p4 = {{w11_V_q0[191:184]}};

assign tmp_778_fu_1907_p4 = {{w11_V_q0[199:192]}};

assign tmp_779_fu_1944_p4 = {{w11_V_q0[207:200]}};

assign tmp_780_fu_1981_p4 = {{w11_V_q0[215:208]}};

assign tmp_781_fu_2018_p4 = {{w11_V_q0[223:216]}};

assign tmp_782_fu_2055_p4 = {{w11_V_q0[231:224]}};

assign tmp_783_fu_2092_p4 = {{w11_V_q0[239:232]}};

assign tmp_784_fu_2129_p4 = {{w11_V_q0[247:240]}};

assign tmp_785_fu_2166_p4 = {{w11_V_q0[255:248]}};

assign tmp_786_fu_2203_p4 = {{w11_V_q0[263:256]}};

assign tmp_787_fu_2240_p4 = {{w11_V_q0[271:264]}};

assign tmp_788_fu_2277_p4 = {{w11_V_q0[279:272]}};

assign tmp_789_fu_2314_p4 = {{w11_V_q0[287:280]}};

assign tmp_790_fu_2351_p4 = {{w11_V_q0[295:288]}};

assign tmp_791_fu_2388_p4 = {{w11_V_q0[303:296]}};

assign tmp_792_fu_2425_p4 = {{w11_V_q0[311:304]}};

assign tmp_793_fu_2462_p4 = {{w11_V_q0[317:312]}};

assign tmp_data_0_V_20_fu_8855_p3 = ((or_ln340_2868_fu_8833_p2[0:0] === 1'b1) ? select_ln340_1320_fu_8839_p3 : acc_0_V_164_fu_8847_p3);

assign tmp_data_1_V_19_fu_9735_p3 = ((or_ln340_2898_fu_9713_p2[0:0] === 1'b1) ? select_ln340_1330_fu_9719_p3 : acc_1_V_164_fu_9727_p3);

assign tmp_data_2_V_19_fu_10615_p3 = ((or_ln340_2928_fu_10593_p2[0:0] === 1'b1) ? select_ln340_1340_fu_10599_p3 : acc_2_V_164_fu_10607_p3);

assign tmp_data_3_V_19_fu_11495_p3 = ((or_ln340_2958_fu_11473_p2[0:0] === 1'b1) ? select_ln340_1350_fu_11479_p3 : acc_3_V_164_fu_11487_p3);

assign trunc_ln203_fu_718_p1 = i_iw_0_i_i_i_reg_479[1:0];

assign trunc_ln56_fu_901_p1 = w11_V_q0[7:0];

assign w11_V_address0 = zext_ln56_fu_874_p1;

assign xor_ln340_1288_fu_8029_p2 = (tmp_5906_fu_8009_p3 ^ tmp_5905_fu_7996_p3);

assign xor_ln340_1289_fu_8117_p2 = (tmp_5913_fu_8097_p3 ^ tmp_5912_fu_8084_p3);

assign xor_ln340_1290_fu_8205_p2 = (tmp_5920_fu_8185_p3 ^ tmp_5919_fu_8172_p3);

assign xor_ln340_1291_fu_8293_p2 = (tmp_5927_fu_8273_p3 ^ tmp_5926_fu_8260_p3);

assign xor_ln340_1292_fu_8381_p2 = (tmp_5934_fu_8361_p3 ^ tmp_5933_fu_8348_p3);

assign xor_ln340_1293_fu_8469_p2 = (tmp_5941_fu_8449_p3 ^ tmp_5940_fu_8436_p3);

assign xor_ln340_1294_fu_8557_p2 = (tmp_5948_fu_8537_p3 ^ tmp_5947_fu_8524_p3);

assign xor_ln340_1295_fu_8645_p2 = (tmp_5955_fu_8625_p3 ^ tmp_5954_fu_8612_p3);

assign xor_ln340_1296_fu_8733_p2 = (tmp_5962_fu_8713_p3 ^ tmp_5961_fu_8700_p3);

assign xor_ln340_1297_fu_8821_p2 = (tmp_5969_fu_8801_p3 ^ tmp_5968_fu_8788_p3);

assign xor_ln340_1298_fu_8909_p2 = (tmp_5976_fu_8889_p3 ^ tmp_5975_fu_8876_p3);

assign xor_ln340_1299_fu_8997_p2 = (tmp_5983_fu_8977_p3 ^ tmp_5982_fu_8964_p3);

assign xor_ln340_1300_fu_9085_p2 = (tmp_5990_fu_9065_p3 ^ tmp_5989_fu_9052_p3);

assign xor_ln340_1301_fu_9173_p2 = (tmp_5997_fu_9153_p3 ^ tmp_5996_fu_9140_p3);

assign xor_ln340_1302_fu_9261_p2 = (tmp_6004_fu_9241_p3 ^ tmp_6003_fu_9228_p3);

assign xor_ln340_1303_fu_9349_p2 = (tmp_6011_fu_9329_p3 ^ tmp_6010_fu_9316_p3);

assign xor_ln340_1304_fu_9437_p2 = (tmp_6018_fu_9417_p3 ^ tmp_6017_fu_9404_p3);

assign xor_ln340_1305_fu_9525_p2 = (tmp_6025_fu_9505_p3 ^ tmp_6024_fu_9492_p3);

assign xor_ln340_1306_fu_9613_p2 = (tmp_6032_fu_9593_p3 ^ tmp_6031_fu_9580_p3);

assign xor_ln340_1307_fu_9701_p2 = (tmp_6039_fu_9681_p3 ^ tmp_6038_fu_9668_p3);

assign xor_ln340_1308_fu_9789_p2 = (tmp_6046_fu_9769_p3 ^ tmp_6045_fu_9756_p3);

assign xor_ln340_1309_fu_9877_p2 = (tmp_6053_fu_9857_p3 ^ tmp_6052_fu_9844_p3);

assign xor_ln340_1310_fu_9965_p2 = (tmp_6060_fu_9945_p3 ^ tmp_6059_fu_9932_p3);

assign xor_ln340_1311_fu_10053_p2 = (tmp_6067_fu_10033_p3 ^ tmp_6066_fu_10020_p3);

assign xor_ln340_1312_fu_10141_p2 = (tmp_6074_fu_10121_p3 ^ tmp_6073_fu_10108_p3);

assign xor_ln340_1313_fu_10229_p2 = (tmp_6081_fu_10209_p3 ^ tmp_6080_fu_10196_p3);

assign xor_ln340_1314_fu_10317_p2 = (tmp_6088_fu_10297_p3 ^ tmp_6087_fu_10284_p3);

assign xor_ln340_1315_fu_10405_p2 = (tmp_6095_fu_10385_p3 ^ tmp_6094_fu_10372_p3);

assign xor_ln340_1316_fu_10493_p2 = (tmp_6102_fu_10473_p3 ^ tmp_6101_fu_10460_p3);

assign xor_ln340_1317_fu_10581_p2 = (tmp_6109_fu_10561_p3 ^ tmp_6108_fu_10548_p3);

assign xor_ln340_1318_fu_10669_p2 = (tmp_6116_fu_10649_p3 ^ tmp_6115_fu_10636_p3);

assign xor_ln340_1319_fu_10757_p2 = (tmp_6123_fu_10737_p3 ^ tmp_6122_fu_10724_p3);

assign xor_ln340_1320_fu_10845_p2 = (tmp_6130_fu_10825_p3 ^ tmp_6129_fu_10812_p3);

assign xor_ln340_1321_fu_10933_p2 = (tmp_6137_fu_10913_p3 ^ tmp_6136_fu_10900_p3);

assign xor_ln340_1322_fu_11021_p2 = (tmp_6144_fu_11001_p3 ^ tmp_6143_fu_10988_p3);

assign xor_ln340_1323_fu_11109_p2 = (tmp_6151_fu_11089_p3 ^ tmp_6150_fu_11076_p3);

assign xor_ln340_1324_fu_11197_p2 = (tmp_6158_fu_11177_p3 ^ tmp_6157_fu_11164_p3);

assign xor_ln340_1325_fu_11285_p2 = (tmp_6165_fu_11265_p3 ^ tmp_6164_fu_11252_p3);

assign xor_ln340_1326_fu_11373_p2 = (tmp_6172_fu_11353_p3 ^ tmp_6171_fu_11340_p3);

assign xor_ln340_1327_fu_11461_p2 = (tmp_6179_fu_11441_p3 ^ tmp_6178_fu_11428_p3);

assign xor_ln340_797_fu_8123_p2 = (tmp_5912_fu_8084_p3 ^ 1'd1);

assign xor_ln340_798_fu_8211_p2 = (tmp_5919_fu_8172_p3 ^ 1'd1);

assign xor_ln340_799_fu_8299_p2 = (tmp_5926_fu_8260_p3 ^ 1'd1);

assign xor_ln340_800_fu_8387_p2 = (tmp_5933_fu_8348_p3 ^ 1'd1);

assign xor_ln340_801_fu_8475_p2 = (tmp_5940_fu_8436_p3 ^ 1'd1);

assign xor_ln340_802_fu_8563_p2 = (tmp_5947_fu_8524_p3 ^ 1'd1);

assign xor_ln340_803_fu_8651_p2 = (tmp_5954_fu_8612_p3 ^ 1'd1);

assign xor_ln340_804_fu_8739_p2 = (tmp_5961_fu_8700_p3 ^ 1'd1);

assign xor_ln340_805_fu_8827_p2 = (tmp_5968_fu_8788_p3 ^ 1'd1);

assign xor_ln340_806_fu_8915_p2 = (tmp_5975_fu_8876_p3 ^ 1'd1);

assign xor_ln340_807_fu_9003_p2 = (tmp_5982_fu_8964_p3 ^ 1'd1);

assign xor_ln340_808_fu_9091_p2 = (tmp_5989_fu_9052_p3 ^ 1'd1);

assign xor_ln340_809_fu_9179_p2 = (tmp_5996_fu_9140_p3 ^ 1'd1);

assign xor_ln340_810_fu_9267_p2 = (tmp_6003_fu_9228_p3 ^ 1'd1);

assign xor_ln340_811_fu_9355_p2 = (tmp_6010_fu_9316_p3 ^ 1'd1);

assign xor_ln340_812_fu_9443_p2 = (tmp_6017_fu_9404_p3 ^ 1'd1);

assign xor_ln340_813_fu_9531_p2 = (tmp_6024_fu_9492_p3 ^ 1'd1);

assign xor_ln340_814_fu_9619_p2 = (tmp_6031_fu_9580_p3 ^ 1'd1);

assign xor_ln340_815_fu_9707_p2 = (tmp_6038_fu_9668_p3 ^ 1'd1);

assign xor_ln340_816_fu_9795_p2 = (tmp_6045_fu_9756_p3 ^ 1'd1);

assign xor_ln340_817_fu_9883_p2 = (tmp_6052_fu_9844_p3 ^ 1'd1);

assign xor_ln340_818_fu_9971_p2 = (tmp_6059_fu_9932_p3 ^ 1'd1);

assign xor_ln340_819_fu_10059_p2 = (tmp_6066_fu_10020_p3 ^ 1'd1);

assign xor_ln340_820_fu_10147_p2 = (tmp_6073_fu_10108_p3 ^ 1'd1);

assign xor_ln340_821_fu_10235_p2 = (tmp_6080_fu_10196_p3 ^ 1'd1);

assign xor_ln340_822_fu_10323_p2 = (tmp_6087_fu_10284_p3 ^ 1'd1);

assign xor_ln340_823_fu_10411_p2 = (tmp_6094_fu_10372_p3 ^ 1'd1);

assign xor_ln340_824_fu_10499_p2 = (tmp_6101_fu_10460_p3 ^ 1'd1);

assign xor_ln340_825_fu_10587_p2 = (tmp_6108_fu_10548_p3 ^ 1'd1);

assign xor_ln340_826_fu_10675_p2 = (tmp_6115_fu_10636_p3 ^ 1'd1);

assign xor_ln340_827_fu_10763_p2 = (tmp_6122_fu_10724_p3 ^ 1'd1);

assign xor_ln340_828_fu_10851_p2 = (tmp_6129_fu_10812_p3 ^ 1'd1);

assign xor_ln340_829_fu_10939_p2 = (tmp_6136_fu_10900_p3 ^ 1'd1);

assign xor_ln340_830_fu_11027_p2 = (tmp_6143_fu_10988_p3 ^ 1'd1);

assign xor_ln340_831_fu_11115_p2 = (tmp_6150_fu_11076_p3 ^ 1'd1);

assign xor_ln340_832_fu_11203_p2 = (tmp_6157_fu_11164_p3 ^ 1'd1);

assign xor_ln340_833_fu_11291_p2 = (tmp_6164_fu_11252_p3 ^ 1'd1);

assign xor_ln340_834_fu_11379_p2 = (tmp_6171_fu_11340_p3 ^ 1'd1);

assign xor_ln340_835_fu_11467_p2 = (tmp_6178_fu_11428_p3 ^ 1'd1);

assign xor_ln340_fu_8035_p2 = (tmp_5905_fu_7996_p3 ^ 1'd1);

assign xor_ln416_750_fu_2659_p2 = (tmp_5910_fu_2651_p3 ^ 1'd1);

assign xor_ln416_751_fu_2796_p2 = (tmp_5917_fu_2788_p3 ^ 1'd1);

assign xor_ln416_752_fu_2933_p2 = (tmp_5924_fu_2925_p3 ^ 1'd1);

assign xor_ln416_753_fu_3070_p2 = (tmp_5931_fu_3062_p3 ^ 1'd1);

assign xor_ln416_754_fu_3207_p2 = (tmp_5938_fu_3199_p3 ^ 1'd1);

assign xor_ln416_755_fu_3344_p2 = (tmp_5945_fu_3336_p3 ^ 1'd1);

assign xor_ln416_756_fu_3481_p2 = (tmp_5952_fu_3473_p3 ^ 1'd1);

assign xor_ln416_757_fu_3618_p2 = (tmp_5959_fu_3610_p3 ^ 1'd1);

assign xor_ln416_758_fu_3755_p2 = (tmp_5966_fu_3747_p3 ^ 1'd1);

assign xor_ln416_759_fu_3892_p2 = (tmp_5973_fu_3884_p3 ^ 1'd1);

assign xor_ln416_760_fu_4029_p2 = (tmp_5980_fu_4021_p3 ^ 1'd1);

assign xor_ln416_761_fu_4166_p2 = (tmp_5987_fu_4158_p3 ^ 1'd1);

assign xor_ln416_762_fu_4303_p2 = (tmp_5994_fu_4295_p3 ^ 1'd1);

assign xor_ln416_763_fu_4440_p2 = (tmp_6001_fu_4432_p3 ^ 1'd1);

assign xor_ln416_764_fu_4577_p2 = (tmp_6008_fu_4569_p3 ^ 1'd1);

assign xor_ln416_765_fu_4714_p2 = (tmp_6015_fu_4706_p3 ^ 1'd1);

assign xor_ln416_766_fu_4851_p2 = (tmp_6022_fu_4843_p3 ^ 1'd1);

assign xor_ln416_767_fu_4988_p2 = (tmp_6029_fu_4980_p3 ^ 1'd1);

assign xor_ln416_768_fu_5125_p2 = (tmp_6036_fu_5117_p3 ^ 1'd1);

assign xor_ln416_769_fu_5262_p2 = (tmp_6043_fu_5254_p3 ^ 1'd1);

assign xor_ln416_770_fu_5399_p2 = (tmp_6050_fu_5391_p3 ^ 1'd1);

assign xor_ln416_771_fu_5536_p2 = (tmp_6057_fu_5528_p3 ^ 1'd1);

assign xor_ln416_772_fu_5673_p2 = (tmp_6064_fu_5665_p3 ^ 1'd1);

assign xor_ln416_773_fu_5810_p2 = (tmp_6071_fu_5802_p3 ^ 1'd1);

assign xor_ln416_774_fu_5947_p2 = (tmp_6078_fu_5939_p3 ^ 1'd1);

assign xor_ln416_775_fu_6084_p2 = (tmp_6085_fu_6076_p3 ^ 1'd1);

assign xor_ln416_776_fu_6221_p2 = (tmp_6092_fu_6213_p3 ^ 1'd1);

assign xor_ln416_777_fu_6358_p2 = (tmp_6099_fu_6350_p3 ^ 1'd1);

assign xor_ln416_778_fu_6495_p2 = (tmp_6106_fu_6487_p3 ^ 1'd1);

assign xor_ln416_779_fu_6632_p2 = (tmp_6113_fu_6624_p3 ^ 1'd1);

assign xor_ln416_780_fu_6769_p2 = (tmp_6120_fu_6761_p3 ^ 1'd1);

assign xor_ln416_781_fu_6906_p2 = (tmp_6127_fu_6898_p3 ^ 1'd1);

assign xor_ln416_782_fu_7043_p2 = (tmp_6134_fu_7035_p3 ^ 1'd1);

assign xor_ln416_783_fu_7180_p2 = (tmp_6141_fu_7172_p3 ^ 1'd1);

assign xor_ln416_784_fu_7317_p2 = (tmp_6148_fu_7309_p3 ^ 1'd1);

assign xor_ln416_785_fu_7454_p2 = (tmp_6155_fu_7446_p3 ^ 1'd1);

assign xor_ln416_786_fu_7591_p2 = (tmp_6162_fu_7583_p3 ^ 1'd1);

assign xor_ln416_787_fu_7728_p2 = (tmp_6169_fu_7720_p3 ^ 1'd1);

assign xor_ln416_788_fu_7869_p2 = (tmp_6176_fu_7861_p3 ^ 1'd1);

assign xor_ln416_fu_2522_p2 = (tmp_5903_fu_2514_p3 ^ 1'd1);

assign xor_ln779_10_fu_3912_p2 = (tmp_5970_reg_12231 ^ 1'd1);

assign xor_ln779_11_fu_4049_p2 = (tmp_5977_reg_12254 ^ 1'd1);

assign xor_ln779_12_fu_4186_p2 = (tmp_5984_reg_12277 ^ 1'd1);

assign xor_ln779_13_fu_4323_p2 = (tmp_5991_reg_12300 ^ 1'd1);

assign xor_ln779_14_fu_4460_p2 = (tmp_5998_reg_12323 ^ 1'd1);

assign xor_ln779_15_fu_4597_p2 = (tmp_6005_reg_12346 ^ 1'd1);

assign xor_ln779_16_fu_4734_p2 = (tmp_6012_reg_12369 ^ 1'd1);

assign xor_ln779_17_fu_4871_p2 = (tmp_6019_reg_12392 ^ 1'd1);

assign xor_ln779_18_fu_5008_p2 = (tmp_6026_reg_12415 ^ 1'd1);

assign xor_ln779_19_fu_5145_p2 = (tmp_6033_reg_12438 ^ 1'd1);

assign xor_ln779_1_fu_2679_p2 = (tmp_5907_reg_12024 ^ 1'd1);

assign xor_ln779_20_fu_5282_p2 = (tmp_6040_reg_12461 ^ 1'd1);

assign xor_ln779_21_fu_5419_p2 = (tmp_6047_reg_12484 ^ 1'd1);

assign xor_ln779_22_fu_5556_p2 = (tmp_6054_reg_12507 ^ 1'd1);

assign xor_ln779_23_fu_5693_p2 = (tmp_6061_reg_12530 ^ 1'd1);

assign xor_ln779_24_fu_5830_p2 = (tmp_6068_reg_12553 ^ 1'd1);

assign xor_ln779_25_fu_5967_p2 = (tmp_6075_reg_12576 ^ 1'd1);

assign xor_ln779_26_fu_6104_p2 = (tmp_6082_reg_12599 ^ 1'd1);

assign xor_ln779_27_fu_6241_p2 = (tmp_6089_reg_12622 ^ 1'd1);

assign xor_ln779_28_fu_6378_p2 = (tmp_6096_reg_12645 ^ 1'd1);

assign xor_ln779_29_fu_6515_p2 = (tmp_6103_reg_12668 ^ 1'd1);

assign xor_ln779_2_fu_2816_p2 = (tmp_5914_reg_12047 ^ 1'd1);

assign xor_ln779_30_fu_6652_p2 = (tmp_6110_reg_12691 ^ 1'd1);

assign xor_ln779_31_fu_6789_p2 = (tmp_6117_reg_12714 ^ 1'd1);

assign xor_ln779_32_fu_6926_p2 = (tmp_6124_reg_12737 ^ 1'd1);

assign xor_ln779_33_fu_7063_p2 = (tmp_6131_reg_12760 ^ 1'd1);

assign xor_ln779_34_fu_7200_p2 = (tmp_6138_reg_12783 ^ 1'd1);

assign xor_ln779_35_fu_7337_p2 = (tmp_6145_reg_12806 ^ 1'd1);

assign xor_ln779_36_fu_7474_p2 = (tmp_6152_reg_12829 ^ 1'd1);

assign xor_ln779_37_fu_7611_p2 = (tmp_6159_reg_12852 ^ 1'd1);

assign xor_ln779_38_fu_7748_p2 = (tmp_6166_reg_12875 ^ 1'd1);

assign xor_ln779_39_fu_7889_p2 = (tmp_6173_reg_12898 ^ 1'd1);

assign xor_ln779_3_fu_2953_p2 = (tmp_5921_reg_12070 ^ 1'd1);

assign xor_ln779_4_fu_3090_p2 = (tmp_5928_reg_12093 ^ 1'd1);

assign xor_ln779_5_fu_3227_p2 = (tmp_5935_reg_12116 ^ 1'd1);

assign xor_ln779_6_fu_3364_p2 = (tmp_5942_reg_12139 ^ 1'd1);

assign xor_ln779_7_fu_3501_p2 = (tmp_5949_reg_12162 ^ 1'd1);

assign xor_ln779_8_fu_3638_p2 = (tmp_5956_reg_12185 ^ 1'd1);

assign xor_ln779_9_fu_3775_p2 = (tmp_5963_reg_12208 ^ 1'd1);

assign xor_ln779_fu_2542_p2 = (tmp_5900_reg_12001 ^ 1'd1);

assign xor_ln785_10_fu_3924_p2 = (tmp_5970_reg_12231 ^ and_ln416_759_fu_3898_p2);

assign xor_ln785_11_fu_4061_p2 = (tmp_5977_reg_12254 ^ and_ln416_760_fu_4035_p2);

assign xor_ln785_12_fu_4198_p2 = (tmp_5984_reg_12277 ^ and_ln416_761_fu_4172_p2);

assign xor_ln785_13_fu_4335_p2 = (tmp_5991_reg_12300 ^ and_ln416_762_fu_4309_p2);

assign xor_ln785_14_fu_4472_p2 = (tmp_5998_reg_12323 ^ and_ln416_763_fu_4446_p2);

assign xor_ln785_15_fu_4609_p2 = (tmp_6005_reg_12346 ^ and_ln416_764_fu_4583_p2);

assign xor_ln785_16_fu_4746_p2 = (tmp_6012_reg_12369 ^ and_ln416_765_fu_4720_p2);

assign xor_ln785_17_fu_4883_p2 = (tmp_6019_reg_12392 ^ and_ln416_766_fu_4857_p2);

assign xor_ln785_18_fu_5020_p2 = (tmp_6026_reg_12415 ^ and_ln416_767_fu_4994_p2);

assign xor_ln785_19_fu_5157_p2 = (tmp_6033_reg_12438 ^ and_ln416_768_fu_5131_p2);

assign xor_ln785_1_fu_2691_p2 = (tmp_5907_reg_12024 ^ and_ln416_750_fu_2665_p2);

assign xor_ln785_20_fu_5294_p2 = (tmp_6040_reg_12461 ^ and_ln416_769_fu_5268_p2);

assign xor_ln785_21_fu_5431_p2 = (tmp_6047_reg_12484 ^ and_ln416_770_fu_5405_p2);

assign xor_ln785_22_fu_5568_p2 = (tmp_6054_reg_12507 ^ and_ln416_771_fu_5542_p2);

assign xor_ln785_23_fu_5705_p2 = (tmp_6061_reg_12530 ^ and_ln416_772_fu_5679_p2);

assign xor_ln785_24_fu_5842_p2 = (tmp_6068_reg_12553 ^ and_ln416_773_fu_5816_p2);

assign xor_ln785_25_fu_5979_p2 = (tmp_6075_reg_12576 ^ and_ln416_774_fu_5953_p2);

assign xor_ln785_26_fu_6116_p2 = (tmp_6082_reg_12599 ^ and_ln416_775_fu_6090_p2);

assign xor_ln785_27_fu_6253_p2 = (tmp_6089_reg_12622 ^ and_ln416_776_fu_6227_p2);

assign xor_ln785_28_fu_6390_p2 = (tmp_6096_reg_12645 ^ and_ln416_777_fu_6364_p2);

assign xor_ln785_29_fu_6527_p2 = (tmp_6103_reg_12668 ^ and_ln416_778_fu_6501_p2);

assign xor_ln785_2_fu_2828_p2 = (tmp_5914_reg_12047 ^ and_ln416_751_fu_2802_p2);

assign xor_ln785_30_fu_6664_p2 = (tmp_6110_reg_12691 ^ and_ln416_779_fu_6638_p2);

assign xor_ln785_31_fu_6801_p2 = (tmp_6117_reg_12714 ^ and_ln416_780_fu_6775_p2);

assign xor_ln785_32_fu_6938_p2 = (tmp_6124_reg_12737 ^ and_ln416_781_fu_6912_p2);

assign xor_ln785_33_fu_7075_p2 = (tmp_6131_reg_12760 ^ and_ln416_782_fu_7049_p2);

assign xor_ln785_34_fu_7212_p2 = (tmp_6138_reg_12783 ^ and_ln416_783_fu_7186_p2);

assign xor_ln785_35_fu_7349_p2 = (tmp_6145_reg_12806 ^ and_ln416_784_fu_7323_p2);

assign xor_ln785_36_fu_7486_p2 = (tmp_6152_reg_12829 ^ and_ln416_785_fu_7460_p2);

assign xor_ln785_37_fu_7623_p2 = (tmp_6159_reg_12852 ^ and_ln416_786_fu_7597_p2);

assign xor_ln785_38_fu_7760_p2 = (tmp_6166_reg_12875 ^ and_ln416_787_fu_7734_p2);

assign xor_ln785_39_fu_7901_p2 = (tmp_6173_reg_12898 ^ and_ln416_788_fu_7875_p2);

assign xor_ln785_3_fu_2965_p2 = (tmp_5921_reg_12070 ^ and_ln416_752_fu_2939_p2);

assign xor_ln785_4_fu_3102_p2 = (tmp_5928_reg_12093 ^ and_ln416_753_fu_3076_p2);

assign xor_ln785_537_fu_3650_p2 = (tmp_5956_reg_12185 ^ and_ln416_757_fu_3624_p2);

assign xor_ln785_538_fu_3787_p2 = (tmp_5963_reg_12208 ^ and_ln416_758_fu_3761_p2);

assign xor_ln785_5_fu_3239_p2 = (tmp_5935_reg_12116 ^ and_ln416_754_fu_3213_p2);

assign xor_ln785_6_fu_3376_p2 = (tmp_5942_reg_12139 ^ and_ln416_755_fu_3350_p2);

assign xor_ln785_7_fu_3513_p2 = (tmp_5949_reg_12162 ^ and_ln416_756_fu_3487_p2);

assign xor_ln785_fu_2554_p2 = (tmp_5900_reg_12001 ^ and_ln416_fu_2528_p2);

assign xor_ln786_1287_fu_8017_p2 = (tmp_5906_fu_8009_p3 ^ 1'd1);

assign xor_ln786_1288_fu_8105_p2 = (tmp_5913_fu_8097_p3 ^ 1'd1);

assign xor_ln786_1289_fu_8193_p2 = (tmp_5920_fu_8185_p3 ^ 1'd1);

assign xor_ln786_1290_fu_8281_p2 = (tmp_5927_fu_8273_p3 ^ 1'd1);

assign xor_ln786_1291_fu_8369_p2 = (tmp_5934_fu_8361_p3 ^ 1'd1);

assign xor_ln786_1292_fu_8457_p2 = (tmp_5941_fu_8449_p3 ^ 1'd1);

assign xor_ln786_1293_fu_8545_p2 = (tmp_5948_fu_8537_p3 ^ 1'd1);

assign xor_ln786_1294_fu_8633_p2 = (tmp_5955_fu_8625_p3 ^ 1'd1);

assign xor_ln786_1295_fu_8721_p2 = (tmp_5962_fu_8713_p3 ^ 1'd1);

assign xor_ln786_1296_fu_8809_p2 = (tmp_5969_fu_8801_p3 ^ 1'd1);

assign xor_ln786_1297_fu_8897_p2 = (tmp_5976_fu_8889_p3 ^ 1'd1);

assign xor_ln786_1298_fu_8985_p2 = (tmp_5983_fu_8977_p3 ^ 1'd1);

assign xor_ln786_1299_fu_9073_p2 = (tmp_5990_fu_9065_p3 ^ 1'd1);

assign xor_ln786_1300_fu_9161_p2 = (tmp_5997_fu_9153_p3 ^ 1'd1);

assign xor_ln786_1301_fu_9249_p2 = (tmp_6004_fu_9241_p3 ^ 1'd1);

assign xor_ln786_1302_fu_9337_p2 = (tmp_6011_fu_9329_p3 ^ 1'd1);

assign xor_ln786_1303_fu_9425_p2 = (tmp_6018_fu_9417_p3 ^ 1'd1);

assign xor_ln786_1304_fu_9513_p2 = (tmp_6025_fu_9505_p3 ^ 1'd1);

assign xor_ln786_1305_fu_9601_p2 = (tmp_6032_fu_9593_p3 ^ 1'd1);

assign xor_ln786_1306_fu_9689_p2 = (tmp_6039_fu_9681_p3 ^ 1'd1);

assign xor_ln786_1307_fu_9777_p2 = (tmp_6046_fu_9769_p3 ^ 1'd1);

assign xor_ln786_1308_fu_9865_p2 = (tmp_6053_fu_9857_p3 ^ 1'd1);

assign xor_ln786_1309_fu_9953_p2 = (tmp_6060_fu_9945_p3 ^ 1'd1);

assign xor_ln786_1310_fu_10041_p2 = (tmp_6067_fu_10033_p3 ^ 1'd1);

assign xor_ln786_1311_fu_10129_p2 = (tmp_6074_fu_10121_p3 ^ 1'd1);

assign xor_ln786_1312_fu_10217_p2 = (tmp_6081_fu_10209_p3 ^ 1'd1);

assign xor_ln786_1313_fu_10305_p2 = (tmp_6088_fu_10297_p3 ^ 1'd1);

assign xor_ln786_1314_fu_10393_p2 = (tmp_6095_fu_10385_p3 ^ 1'd1);

assign xor_ln786_1315_fu_10481_p2 = (tmp_6102_fu_10473_p3 ^ 1'd1);

assign xor_ln786_1316_fu_10569_p2 = (tmp_6109_fu_10561_p3 ^ 1'd1);

assign xor_ln786_1317_fu_10657_p2 = (tmp_6116_fu_10649_p3 ^ 1'd1);

assign xor_ln786_1318_fu_10745_p2 = (tmp_6123_fu_10737_p3 ^ 1'd1);

assign xor_ln786_1319_fu_10833_p2 = (tmp_6130_fu_10825_p3 ^ 1'd1);

assign xor_ln786_1320_fu_10921_p2 = (tmp_6137_fu_10913_p3 ^ 1'd1);

assign xor_ln786_1321_fu_11009_p2 = (tmp_6144_fu_11001_p3 ^ 1'd1);

assign xor_ln786_1322_fu_11097_p2 = (tmp_6151_fu_11089_p3 ^ 1'd1);

assign xor_ln786_1323_fu_11185_p2 = (tmp_6158_fu_11177_p3 ^ 1'd1);

assign xor_ln786_1324_fu_11273_p2 = (tmp_6165_fu_11265_p3 ^ 1'd1);

assign xor_ln786_1325_fu_11361_p2 = (tmp_6172_fu_11353_p3 ^ 1'd1);

assign xor_ln786_1326_fu_11449_p2 = (tmp_6179_fu_11441_p3 ^ 1'd1);

assign xor_ln786_1445_fu_2720_p2 = (or_ln786_750_fu_2714_p2 ^ 1'd1);

assign xor_ln786_1446_fu_2857_p2 = (or_ln786_751_fu_2851_p2 ^ 1'd1);

assign xor_ln786_1447_fu_2994_p2 = (or_ln786_752_fu_2988_p2 ^ 1'd1);

assign xor_ln786_1448_fu_3131_p2 = (or_ln786_753_fu_3125_p2 ^ 1'd1);

assign xor_ln786_1449_fu_3268_p2 = (or_ln786_754_fu_3262_p2 ^ 1'd1);

assign xor_ln786_1450_fu_3405_p2 = (or_ln786_755_fu_3399_p2 ^ 1'd1);

assign xor_ln786_1451_fu_3542_p2 = (or_ln786_756_fu_3536_p2 ^ 1'd1);

assign xor_ln786_1452_fu_3679_p2 = (or_ln786_757_fu_3673_p2 ^ 1'd1);

assign xor_ln786_1453_fu_3816_p2 = (or_ln786_758_fu_3810_p2 ^ 1'd1);

assign xor_ln786_1454_fu_3953_p2 = (or_ln786_759_fu_3947_p2 ^ 1'd1);

assign xor_ln786_1455_fu_4090_p2 = (or_ln786_760_fu_4084_p2 ^ 1'd1);

assign xor_ln786_1456_fu_4227_p2 = (or_ln786_761_fu_4221_p2 ^ 1'd1);

assign xor_ln786_1457_fu_4364_p2 = (or_ln786_762_fu_4358_p2 ^ 1'd1);

assign xor_ln786_1458_fu_4501_p2 = (or_ln786_763_fu_4495_p2 ^ 1'd1);

assign xor_ln786_1459_fu_4638_p2 = (or_ln786_764_fu_4632_p2 ^ 1'd1);

assign xor_ln786_1460_fu_4775_p2 = (or_ln786_765_fu_4769_p2 ^ 1'd1);

assign xor_ln786_1461_fu_4912_p2 = (or_ln786_766_fu_4906_p2 ^ 1'd1);

assign xor_ln786_1462_fu_5049_p2 = (or_ln786_767_fu_5043_p2 ^ 1'd1);

assign xor_ln786_1463_fu_5186_p2 = (or_ln786_768_fu_5180_p2 ^ 1'd1);

assign xor_ln786_1464_fu_5323_p2 = (or_ln786_769_fu_5317_p2 ^ 1'd1);

assign xor_ln786_1465_fu_5460_p2 = (or_ln786_770_fu_5454_p2 ^ 1'd1);

assign xor_ln786_1466_fu_5597_p2 = (or_ln786_771_fu_5591_p2 ^ 1'd1);

assign xor_ln786_1467_fu_5734_p2 = (or_ln786_772_fu_5728_p2 ^ 1'd1);

assign xor_ln786_1468_fu_5871_p2 = (or_ln786_773_fu_5865_p2 ^ 1'd1);

assign xor_ln786_1469_fu_6008_p2 = (or_ln786_774_fu_6002_p2 ^ 1'd1);

assign xor_ln786_1470_fu_6145_p2 = (or_ln786_775_fu_6139_p2 ^ 1'd1);

assign xor_ln786_1471_fu_6282_p2 = (or_ln786_776_fu_6276_p2 ^ 1'd1);

assign xor_ln786_1472_fu_6419_p2 = (or_ln786_777_fu_6413_p2 ^ 1'd1);

assign xor_ln786_1473_fu_6556_p2 = (or_ln786_778_fu_6550_p2 ^ 1'd1);

assign xor_ln786_1474_fu_6693_p2 = (or_ln786_779_fu_6687_p2 ^ 1'd1);

assign xor_ln786_1475_fu_6830_p2 = (or_ln786_780_fu_6824_p2 ^ 1'd1);

assign xor_ln786_1476_fu_6967_p2 = (or_ln786_781_fu_6961_p2 ^ 1'd1);

assign xor_ln786_1477_fu_7104_p2 = (or_ln786_782_fu_7098_p2 ^ 1'd1);

assign xor_ln786_1478_fu_7241_p2 = (or_ln786_783_fu_7235_p2 ^ 1'd1);

assign xor_ln786_1479_fu_7378_p2 = (or_ln786_784_fu_7372_p2 ^ 1'd1);

assign xor_ln786_1480_fu_7515_p2 = (or_ln786_785_fu_7509_p2 ^ 1'd1);

assign xor_ln786_1481_fu_7652_p2 = (or_ln786_786_fu_7646_p2 ^ 1'd1);

assign xor_ln786_1482_fu_7789_p2 = (or_ln786_787_fu_7783_p2 ^ 1'd1);

assign xor_ln786_1483_fu_7930_p2 = (or_ln786_788_fu_7924_p2 ^ 1'd1);

assign xor_ln786_fu_2583_p2 = (or_ln786_fu_2577_p2 ^ 1'd1);

assign zext_ln415_765_fu_2643_p1 = tmp_5909_reg_12037;

assign zext_ln415_766_fu_2780_p1 = tmp_5916_reg_12060;

assign zext_ln415_767_fu_2917_p1 = tmp_5923_reg_12083;

assign zext_ln415_768_fu_3054_p1 = tmp_5930_reg_12106;

assign zext_ln415_769_fu_3191_p1 = tmp_5937_reg_12129;

assign zext_ln415_770_fu_3328_p1 = tmp_5944_reg_12152;

assign zext_ln415_771_fu_3465_p1 = tmp_5951_reg_12175;

assign zext_ln415_772_fu_3602_p1 = tmp_5958_reg_12198;

assign zext_ln415_773_fu_3739_p1 = tmp_5965_reg_12221;

assign zext_ln415_774_fu_3876_p1 = tmp_5972_reg_12244;

assign zext_ln415_775_fu_4013_p1 = tmp_5979_reg_12267;

assign zext_ln415_776_fu_4150_p1 = tmp_5986_reg_12290;

assign zext_ln415_777_fu_4287_p1 = tmp_5993_reg_12313;

assign zext_ln415_778_fu_4424_p1 = tmp_6000_reg_12336;

assign zext_ln415_779_fu_4561_p1 = tmp_6007_reg_12359;

assign zext_ln415_780_fu_4698_p1 = tmp_6014_reg_12382;

assign zext_ln415_781_fu_4835_p1 = tmp_6021_reg_12405;

assign zext_ln415_782_fu_4972_p1 = tmp_6028_reg_12428;

assign zext_ln415_783_fu_5109_p1 = tmp_6035_reg_12451;

assign zext_ln415_784_fu_5246_p1 = tmp_6042_reg_12474;

assign zext_ln415_785_fu_5383_p1 = tmp_6049_reg_12497;

assign zext_ln415_786_fu_5520_p1 = tmp_6056_reg_12520;

assign zext_ln415_787_fu_5657_p1 = tmp_6063_reg_12543;

assign zext_ln415_788_fu_5794_p1 = tmp_6070_reg_12566;

assign zext_ln415_789_fu_5931_p1 = tmp_6077_reg_12589;

assign zext_ln415_790_fu_6068_p1 = tmp_6084_reg_12612;

assign zext_ln415_791_fu_6205_p1 = tmp_6091_reg_12635;

assign zext_ln415_792_fu_6342_p1 = tmp_6098_reg_12658;

assign zext_ln415_793_fu_6479_p1 = tmp_6105_reg_12681;

assign zext_ln415_794_fu_6616_p1 = tmp_6112_reg_12704;

assign zext_ln415_795_fu_6753_p1 = tmp_6119_reg_12727;

assign zext_ln415_796_fu_6890_p1 = tmp_6126_reg_12750;

assign zext_ln415_797_fu_7027_p1 = tmp_6133_reg_12773;

assign zext_ln415_798_fu_7164_p1 = tmp_6140_reg_12796;

assign zext_ln415_799_fu_7301_p1 = tmp_6147_reg_12819;

assign zext_ln415_800_fu_7438_p1 = tmp_6154_reg_12842;

assign zext_ln415_801_fu_7575_p1 = tmp_6161_reg_12865;

assign zext_ln415_802_fu_7712_p1 = tmp_6168_reg_12888;

assign zext_ln415_803_fu_7852_p1 = tmp_6175_reg_12911;

assign zext_ln415_fu_2506_p1 = tmp_5902_reg_12014;

assign zext_ln56_fu_874_p1 = ap_phi_mux_in_index13_phi_fu_546_p4;

endmodule //conv_1d_cl_array_ap_fixed_4u_array_ap_fixed_24_16_0_0_0_4u_config11_s
